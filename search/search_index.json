{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"test/","title":"Test","text":"<ul> <li>Note</li> </ul> <pre><code>!!! note\n    This is a note.\n</code></pre> <ul> <li>Tip</li> </ul> <pre><code>!!! tip\n    This is a tip.\n</code></pre> <ul> <li>Warning</li> </ul> <pre><code>!!! warning\n    This is a warning.\n</code></pre> <ul> <li>Danger</li> </ul> <pre><code>!!! danger\n    This is a danger.\n</code></pre> <ul> <li>Success</li> </ul> <pre><code>!!! success\n    This is a success.\n</code></pre> <ul> <li>Info</li> </ul> <pre><code>!!! info\n    This is an info.\n</code></pre> <ul> <li>Quote</li> </ul> <pre><code>!!! quote\n    This is a quote.\n</code></pre> <ul> <li>Question</li> </ul> <pre><code>??? question \"What is the meaning of life, the universe, and everything?\"\n    42.\n</code></pre>"},{"location":"clickhouse/c1/","title":"C1","text":"<p>cat /etc/clickhouse-server/conf.d/00_default_overrides.xml </p> <p>\u4f7f\u7528 system.clusters \u8868\u53ef\u4ee5\u67e5\u770b\u96c6\u7fa4\u914d\u7f6e\u7684\u60c5\u51b5\u3002</p> <pre><code>SELECT * FROM system.clusters;\n</code></pre> <p>\u68c0\u67e5\u5206\u5e03\u5f0f\u8868\u7684\u72b6\u6001: \u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528\u5206\u5e03\u5f0f\u8868\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5 system.distributed \u8868\u6765\u83b7\u53d6\u5173\u4e8e\u5206\u5e03\u5f0f\u5904\u7406\u7684\u4fe1\u606f\u3002</p> <pre><code>SELECT * FROM system.distributed WHERE cluster = SELECT cluster: FROM system.clusters;\n</code></pre> <p>\u68c0\u67e5\u526f\u672c\u72b6\u6001: \u5982\u679c\u60a8\u7684\u8868\u662f\u590d\u5236\u7684\uff0c\u60a8\u53ef\u4ee5\u67e5\u8be2 system.replicas \u8868\u6765\u68c0\u67e5\u6bcf\u4e2a\u526f\u672c\u7684\u72b6\u6001\u3002</p> <pre><code>SELECT * FROM system.replicas WHERE cluster = 'your_cluster_name';\n</code></pre> <p>\u65f6\u533a\u95ee\u9898</p> <p>SELECT timezone();</p> <p>CREATE TABLE my_new_table_rrm (     <code>rk_date</code> DateTime64(3) DEFAULT now64() ) ENGINE = ReplicatedReplacingMergeTree</p> <p>CREATE TABLE my_new_table_rrm (</p> <pre><code>`rk_date` DateTime64(3) DEFAULT now64() COMMENT 'TT',\n</code></pre> <p>) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/defalut/my_new_table_rrm', '{replica}', rk_date) ORDER BY (rk_date)</p> <p>CREATE TABLE my_new_table_rrm  (</p> <p><code>rk_date</code> DateTime64(3) DEFAULT now64() COMMENT 'TT',  ) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/defalut/my_new_table_rrm', '{replica}', rk_date) ORDER BY (rk_date)</p> <p>INSERT INTO my_new_table_rrm values(now64());</p>"},{"location":"en/words/","title":"\u5355\u8bcd\u7b14\u8bb0","text":""},{"location":"en/words/#simulator-","title":"simulator - \u6a21\u62df\u5668","text":"<p>\u5e38\u89c1\u91ca\u4e49 \u82f1 [\u02c8s\u026amjule\u026at\u0259(r)] \u7f8e [\u02c8s\u026amj\u0259le\u026at\u0259r]</p> <p>n. \u6a21\u62df\u5668; \u6a21\u4eff\u8005; \u6a21\u62df\u88c5\u7f6e;</p> <p>\u4f8b\u53e5 Flight simulators are essential for training pilots.</p> <p>\u98de\u884c\u6a21\u62df\u5668\u5bf9\u4e8e\u98de\u884c\u5458\u7684\u57f9\u8bad\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"en/words/#ultimately-","title":"ultimately - \u6700\u7ec8","text":"<p>\u5e38\u89c1\u91ca\u4e49 \u82f1 [\u02c8\u028clt\u026am\u0259tli] \u7f8e [\u02c8\u028clt\u026am\u0259tli]</p> <p>adv. \u6700\u7ec8; \u6700\u540e; \u6839\u672c\u4e0a; \u7ec8\u5f52; \u6700\u57fa\u672c\u5730;</p> <p>\u4f8b\u53e5 Ultimately, you'll have to make the decision yourself.</p> <p>\u6700\u7ec8\u4f60\u8fd8\u662f\u5f97\u81ea\u5df1\u62ff\u4e3b\u610f\u3002</p>"},{"location":"en/words/#seamlessly-","title":"seamlessly - \u65e0\u7f1d\u5730","text":"<p>\u5e38\u89c1\u91ca\u4e49 \u82f1 [\u02c8si\u02d0ml\u0259sli] \u7f8e [\u02c8si\u02d0ml\u0259sli]</p> <p>adv. \u65e0\u7f1d\u5730; \u6d41\u7545\u5730;</p> <p>\u4f8b\u53e5 The two systems were integrated seamlessly.</p> <p>\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u88ab\u65e0\u7f1d\u96c6\u6210\u3002</p>"},{"location":"en/words/#transparent-","title":"transparent - \u900f\u660e\u7684","text":"<p>\u5e38\u89c1\u91ca\u4e49 \u82f1 [tr\u00e6ns\u02c8p\u00e6r\u0259nt] \u7f8e [tr\u00e6ns\u02c8p\u00e6r\u0259nt]</p> <p>adj. \u900f\u660e\u7684; \u660e\u4e86\u7684; \u6613\u61c2\u7684; \u5766\u7387\u7684;</p> <p>\u4f8b\u53e5 Her intentions were completely transparent.</p> <p>\u5979\u7684\u610f\u56fe\u5b8c\u5168\u900f\u660e\u3002</p>"},{"location":"en/words/#illustration-","title":"illustration - \u63d2\u56fe","text":"<p>\u5e38\u89c1\u91ca\u4e49 \u82f1 [\u02cc\u026al\u0259\u02c8stre\u026a\u0283n] \u7f8e [\u02cc\u026al\u0259\u02c8stre\u026a\u0283n]</p> <p>n. \u56fe\u89e3; \u8bf4\u660e; \u63d2\u56fe; \u5b9e\u4f8b;</p> <p>\u4f8b\u53e5 The book had plenty of illustrations to explain the text.</p> <p>\u8fd9\u672c\u4e66\u6709\u5f88\u591a\u63d2\u56fe\u6765\u89e3\u91ca\u6587\u672c\u3002</p>"},{"location":"en/words/#deterministic-","title":"deterministic - \u51b3\u5b9a\u8bba\u7684","text":"<p>\u5e38\u89c1\u91ca\u4e49 \u82f1 [d\u026a\u02cct\u025c\u02d0m\u026a\u02c8n\u026ast\u026ak] \u7f8e [d\u026a\u02cct\u025c\u02d0rm\u026a\u02c8n\u026ast\u026ak]</p> <p>adj. \u51b3\u5b9a\u8bba\u7684; \u5bbf\u547d\u8bba\u7684;</p> <p>\u4f8b\u53e5 In a deterministic universe, every event is caused by previous events.</p> <p>\u5728\u4e00\u4e2a\u51b3\u5b9a\u8bba\u7684\u5b87\u5b99\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\u90fd\u662f\u7531\u4e4b\u524d\u7684\u4e8b\u4ef6\u6240\u5f15\u8d77\u7684\u3002</p> <p>seamlessly</p> <p>collaborate</p> <p>centralized</p> <p>deterministic</p> <p>compatibility</p> <p>explicit</p> <p>rapid</p> <p>vice versa</p> <p>potentially</p> <p>prevented</p> <p>hypothetical</p> <p>drawbacks</p> <p>throughput</p>"},{"location":"fluentbit/problems/","title":"Problems","text":""},{"location":"fluentbit/problems/#_1","title":"\u5e38\u89c1\u95ee\u9898\u96c6\u5408","text":""},{"location":"fluentbit/problems/#_2","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u5f53fluentbit \u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5982\u4f55\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u5bfc\u81f4cpu\u6301\u7eed\u5347\u9ad8\uff0c\u76f4\u5230\u8d44\u6e90\u8017\u5c3d\u4e0d\u53ef\u7528\u3002</p>"},{"location":"fluentbit/problems/#_3","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>output \u5230minio \u9519\u8bef\u4fe1\u606f</p> <pre><code>[2024/08/20 01:49:40] [error] [/root/go/src/fluent-bit/src/flb_http_client.c:1201 errno=32] Broken pipe\n[2024/08/20 01:49:41] [error] [/root/go/src/fluent-bit/src/flb_http_client.c:1201 errno=32] Broken pipe\n[2024/08/20 01:49:41] [error] [output:s3:s3.0] PutObject request failed\n.....\n[2024/08/20 02:09:45] [error] [output:s3:s3.0] PutObject request failed\n[2024/08/20 02:10:05] [error] [output:s3:s3.0] PutObject API responded with error='SignatureDoesNotMatch', message='The request signature we calculated does not match the signature you provided. Check your key and signing method.'\n[2024/08/20 02:10:05] [error] [output:s3:s3.0] Raw PutObject response: HTTP/1.1 403 Forbidden\nAccept-Ranges: bytes\n</code></pre> <p>\u89e3\u51b3, minio \u6587\u4ef6\u540d\u8fc7\u957f</p> <pre><code>- s3_key_format   /$TAG/%Y/%m/%d/.log \n+ s3_key_format   /$TAG[4]/%Y/%m/%d/%H/%M/%S.log\n</code></pre>"},{"location":"fluentbit/problems/#_4","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u4e0a\u4f20\u5230 minio \u65f6 MultipartUpload \u6a21\u5f0f\u9519\u8bef</p> <pre><code>[2024/08/15 02:52:11] [error] [output:s3:s3.2] CreateMultipartUpload: Could not parse response\n[2024/08/15 02:52:11] [error] [output:s3:s3.2] CreateMultipartUpload request failed\n[2024/08/15 02:52:11] [error] [output:s3:s3.2] Could not initiate multipart upload\n[2024/08/15 02:52:19] [error] [output:s3:s3.2] CreateMultipartUpload: Could not parse response\n[2024/08/15 02:52:19] [error] [output:s3:s3.2] CreateMultipartUpload request failed\n</code></pre> <p>\u89e3\u51b3 \uff0c\u5173\u95edMultipartUpload\uff0c\u91c7\u7528\u5355\u5b9e\u4f8b\u4e0a\u4f20\u3002 \u5206\u6279\u4e0a\u4f20\u4f1a\u4ea7\u751f\u591a\u4e2aworker \u8fdb\u7a0b\u6765\u8fdb\u884c\u4e0a\u4f20\u3002</p> <pre><code>use_put_object  On\n</code></pre> <p>^[(?P[^]])] \"(?P\\S+) (?P[^\\\"]?) (?P\\S+)\" ^[(?[^]])] \"(?\\S+)(?: +(?[^\\\"]?)(?: +\\S)?)? (?\\S+)\" (?<code>[^ ]) <p>[2016-04-15T20:17:00.310Z] \"POST /api/v1/locations HTTP/2\" 204 - 154 0 226 100 \"10.0.35.28\" \"nsq2http\" \"cc21d9b0-cf5c-432b-8c7e-98aeb7988cd2\" \"locations\" \"tcp://10.0.2.1:80\"</p> <p>[2024-08-21T01:14:56.707Z] \"HEAD / HTTP/1.1\" 404 NR route_not_found - \"-\" 0 0 0 - \"10.0.0.15\" \"curl/7.81.0\" \"a01beb57-4024-4302-b96a-019c2de2c5e6\" \"10.2.14.4\" \"-\" - - 10.0.2.42:80 10.0.0.15:38970 - -</p>"},{"location":"grafana/alert/","title":"Alert","text":"<p>\u8c03\u7528webhook</p>"},{"location":"grafana/alert/#binbash","title":"!/bin/bash","text":"<p>curl -H \"Content-Type: application/json\" \\ -X POST \\ -d '{\"msg_type\": \"text\",      \"content\": {          \"text\": \"\u6d4b\u8bd5\u4fe1\u606f\"      }     }' \\ https://webhook\u5730\u5740</p> <p>curl -H \"Content-Type: application/json\" \\ -X POST \\ -d '{     \"timestamp\": \"1723776159\",        \"sign\": \"gwg2H/c79MK7BJF8A3uQl0+duKnAbuKxMUXz8ms9BQM=\",      \"msg_type\": \"text\",     \"content\": { \"text\": \"request example\"}   }' \\ https://open.feishu.cn/open-apis/bot/v2/hook/c76b4167-ee86-48eb-a616-2fc7d640bfba</p> <p>{\"msg_type\":\"text\",\"content\":{\"text\":\"request example\"}}</p> <p>[ var='B0' metric='\u767e\u79d1A\u533a_bka54' labels={device=/dev/md127, fstype=xfs, idc=\u767e\u79d1A\u533a, instance=bka54, job=system, mountpoint=/data} value=83.18487280678053 ], [ var='B1' metric='\u767e\u79d1B\u533a_bkb55' labels={device=/dev/md127, fstype=xfs, idc=\u767e\u79d1B\u533a, instance=bkb55, job=system, mountpoint=/data} value=80.64210742368793 ]</p> <p>\u8c03\u7528alertmanager  \u914d\u7f6e\u62a5\u8b66\u89c4\u5219 https://help.aliyun.com/zh/grafana/user-guide/configure-grafana-native-alarm</p> <p>https://www.feishu.cn/flow/api/trigger-webhook/66f1e8fc523fecd5e8886c9b12c14c16</p>"},{"location":"grafana/alert/#usrbinenv-bash","title":"!/usr/bin/env bash","text":"<p>alerts_message='[   {     \"labels\": {        \"alertname\": \"\u78c1\u76d8\u5df2\u6ee1\",        \"dev\": \"sda1\",        \"instance\": \"\u5b9e\u4f8b1\",        \"msgtype\": \"testing\"      },      \"annotations\": {         \"info\": \"\u7a0b\u5e8f\u5458\u5c0f\u738b\u63d0\u793a\u60a8\uff1a\u8fd9\u4e2a\u78c1\u76d8sda1\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5feb\u5904\u7406\uff01\",         \"summary\": \"\u8bf7\u68c0\u67e5\u5b9e\u4f8b\u793a\u4f8b1\"       }   },   {     \"labels\": {        \"alertname\": \"\u78c1\u76d8\u5df2\u6ee1\",        \"dev\": \"sda2\",        \"instance\": \"\u5b9e\u4f8b1\",        \"msgtype\": \"testing\"      },      \"annotations\": {         \"info\": \"\u7a0b\u5e8f\u5458\u5c0f\u738b\u63d0\u793a\u60a8\uff1a\u8fd9\u4e2a\u78c1\u76d8sda2\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5feb\u5904\u7406\uff01\",         \"summary\": \"\u8bf7\u68c0\u67e5\u5b9e\u4f8b\u793a\u4f8b1\",         \"runbook\": \"\u4ee5\u4e0b\u94fe\u63a5http://test-url\u5e94\u8be5\u662f\u53ef\u70b9\u51fb\u7684\"       }   } ]'</p> <p>curl -XPOST -d\"$alerts_message\" http://127.0.0.1:9093/api/v1/alerts</p> <p>curl -H \"Authorization: Bearer B235f8A2565346e4A7fC253D810983b0TCWCUDaxirfvuMLHdwlzQLqeIYbgZvpzsrQsgFSITYDQrzegKYIIdKnNdrNQFeFdCmIdXgwWbqLtlDVUdroeslcBfUvIvgJG\" \"drycc-controller-api.drycc.svc.cluster.local/v2/apps/ehp/metrics\"</p>"},{"location":"linux/patch/","title":"Patch","text":"<p>diff -Naur dir1/ dir2/ &gt; dir_patch.patch patch -p1 -d dir1/ &lt; dir_patch.patch</p>"},{"location":"linux/tools/","title":"Tools","text":"<p>Webmin \u662f\u4e00\u4e2a\u57fa\u4e8eWeb\u7684\u7cfb\u7edf\u914d\u7f6e\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u7ba1\u7406Unix\u7cfb\u7edf  http://www.webmin.com/</p> <p>Filebrowser \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u6587\u4ef6\u7ba1\u7406\u5668\uff0c\u53ef\u901a\u8fc7Web\u8bbf\u95ee\u3002\u5b83\u5141\u8bb8\u4f60\u6d4f\u89c8\u3001\u7f16\u8f91\u3001\u4e0a\u4f20\u3001\u4e0b\u8f7d\u548c\u5220\u9664\u670d\u52a1\u5668\u4e0a\u7684\u6587\u4ef6</p> <p>https://filebrowser.org/</p>"},{"location":"middleware/etcd/","title":"etcd","text":""},{"location":"middleware/etcd/#_1","title":"\u7ef4\u62a4","text":"<p>etcd \u96c6\u7fa4\u9700\u8981\u5b9a\u671f\u7ef4\u62a4\u624d\u80fd\u4fdd\u6301\u53ef\u9760\u6027\u3002etcd \u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u53ef\u4ee5\u81ea\u52a8\u8fdb\u884c\u7ef4\u62a4\uff0c\u5e76\u4e14\u4e0d\u4f1a\u9020\u6210\u505c\u673a\u6216\u6027\u80fd\u5927\u5e45\u4e0b\u964d\u3002</p> <p>\u4e3b\u8981\u901a\u8fc7\u538b\u7f29\uff0c\u7a7a\u95f4\u6574\u7406\u907f\u514d\u7a7a\u95f4\u5230\u8fbe\u9650\u989d etcd\u96c6\u7fa4\u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f\u5f71\u54cd\u96c6\u7fa4\u7684\u4f7f\u7528\u3002</p>"},{"location":"middleware/etcd/#_2","title":"\u65e5\u5fd7\u4fdd\u7559","text":"<p>etcd --snapshot-count \u914d\u7f6e\u538b\u7f29\u524d\u5185\u5b58\u4e2d\u4fdd\u7559\u7684\u5e94\u7528 Raft \u6761\u76ee\u7684\u6570\u91cf\uff0c \u9ed8\u8ba4100,1000. \u7c7b\u4f3ccheckpoint</p> <p>\u9ad8 --snapshot-count \u4f1a\u5728\u5feb\u7167\u524d\u5728\u5185\u5b58\u4e2d\u4fdd\u7559\u66f4\u591a\u7684 Raft \u6761\u76ee\uff0c\u5360\u7528\u5185\u5b58\u591a\uff0c gc \u6162\u3002\u4ece\u5e93\u540c\u6b65\u5feb\u7167\u6162</p> <p>\u4f4e --snapshot-count \u78c1\u76d8\u5237\u65b0\u9891\u7e41\uff0c\u5f71\u54cd\u5e76\u53d1</p>"},{"location":"middleware/etcd/#_3","title":"\u7a7a\u95f4\u9650\u989d","text":""},{"location":"middleware/etcd/#_4","title":"\u9650\u989d\u8bf4\u660e","text":"<p>\u9ed8\u8ba4\u7a7a\u95f4\u4e0d\u662f\u5f88\u59272G\uff0c\u53ef\u6ee1\u8db3\u5927\u90e8\u5206\u5e94\u7528\u573a\u666f\u3002 \u5f53\u4f7f\u7528\u7a7a\u95f4\u8fc7\u5927\u4f1a\u9020\u6210\u6027\u80fd\u4e0b\u964d\uff0c\u5f53\u8fbe\u5230\u9600\u503c\u65f6etcd \u5c31\u4f1a\u53d1\u51fa\u5168\u96c6\u7fa4\u8b66\u62a5\uff0c\u4f7f\u96c6\u7fa4\u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f\uff0c\u53ea\u63a5\u53d7\u8bfb\u53d6\u548c\u5220\u9664\u3002 \u53ea\u6709\u5728\u91ca\u653e\u4e86\u5bc6\u94a5\u7a7a\u95f4\u4e2d\u7684\u8db3\u591f\u7a7a\u95f4\u5e76\u5bf9\u540e\u7aef\u6570\u636e\u5e93\u8fdb\u884c\u4e86\u788e\u7247\u6574\u7406\uff0c\u540c\u65f6\u6e05\u9664\u4e86\u7a7a\u95f4\u914d\u989d\u8b66\u62a5\u540e\uff0c\u96c6\u7fa4\u624d\u80fd\u6062\u590d\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"middleware/etcd/#_5","title":"\u788e\u7247\u6574\u7406","text":"<p>\u538b\u7f29\u7a7a\u95f4\u540e\uff0c\u540e\u7aef\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u51fa\u73b0\u5185\u90e8\u788e\u7247\u3002\u538b\u7f29\u65e7\u7248\u672c\u4f1a\u5728\u540e\u7aef\u6570\u636e\u5e93\u4e2d\u7559\u4e0b\u7a7a\u9699\uff0c\u4ece\u800c\u5728\u5185\u90e8\u9020\u6210 etcd \u788e\u7247\u3002\u788e\u7247\u7a7a\u95f4\u53ef\u4f9b etcd \u4f7f\u7528\uff0c\u4f46\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\u65e0\u6cd5\u4f7f\u7528\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5220\u9664\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u5e76\u4e0d\u80fd\u56de\u6536\u78c1\u76d8\u7a7a\u95f4\u3002</p> <p>\u788e\u7247\u6574\u7406\u8fc7\u7a0b\u4f1a\u5c06\u8fd9\u4e9b\u5b58\u50a8\u7a7a\u95f4\u91ca\u653e\u56de\u6587\u4ef6\u7cfb\u7edf\u3002\u788e\u7247\u6574\u7406\u4ee5\u6bcf\u4e2a\u6210\u5458\u4e3a\u5355\u4f4d\u8fdb\u884c\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u6574\u4e2a\u96c6\u7fa4\u7684\u5ef6\u8fdf\u9ad8\u5cf0\u3002</p>"},{"location":"middleware/etcd/#_6","title":"\u6a21\u62df\u6d4b\u8bd5","text":"<ul> <li>\u914d\u7f6e\u9650\u989d</li> </ul> <pre><code># set a very small 16 MiB quota\n$ etcd --quota-backend-bytes=$((16*1024*1024))\n</code></pre> <ul> <li>\u5199\u5165\u6570\u636e</li> </ul> <pre><code># fill keyspace\n$ while [ 1 ]; do dd if=/dev/urandom bs=1024 count=1024  | ETCDCTL_API=3 etcdctl put key  || break; done\n...\nError:  rpc error: code = 8 desc = etcdserver: mvcc: database space exceeded\n# confirm quota space is exceeded\n$ ETCDCTL_API=3 etcdctl --write-out=table endpoint status\n+----------------+------------------+-----------+---------+-----------+-----------+------------+\n|    ENDPOINT    |        ID        |  VERSION  | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |\n+----------------+------------------+-----------+---------+-----------+-----------+------------+\n| 127.0.0.1:2379 | bf9071f4639c75cc | 2.3.0+git | 18 MB   | true      |         2 |       3332 |\n+----------------+------------------+-----------+---------+-----------+-----------+------------+\n# confirm alarm is raised\n$ ETCDCTL_API=3 etcdctl alarm list\nmemberID:13803658152347727308 alarm:NOSPACE\n</code></pre> <ul> <li>\u91ca\u653e\u7a7a\u95f4</li> </ul> <pre><code># get current revision\n$ rev=$(ETCDCTL_API=3 etcdctl --endpoints=:2379 endpoint status --write-out=\"json\" | egrep -o '\"revision\":[0-9]*' | egrep -o '[0-9].*')\n# compact away all old revisions\n$ ETCDCTL_API=3 etcdctl compact $rev\ncompacted revision 1516\n# defragment away excessive space\n$ ETCDCTL_API=3 etcdctl defrag\nFinished defragmenting etcd member[127.0.0.1:2379]\n# disarm alarm\n$ ETCDCTL_API=3 etcdctl alarm disarm\nmemberID:13803658152347727308 alarm:NOSPACE\n# test puts are allowed again\n$ ETCDCTL_API=3 etcdctl put newkey 123\nOK\n</code></pre> <ul> <li>\u589e\u52a0\u7a7a\u95f4\u9650\u989d</li> </ul> <pre><code>- --auto-compaction-mode=revision\n- --auto-compaction-retention=1000\n- --quota-backend-bytes=8589934592\n\nauto-compaction-mode=revision \u6309\u7248\u672c\u53f7\u538b\u7f29\nauto-compaction-retention=24 \u5c0f\u65f6\nquota-backend-bytes \u8bbe\u7f6eetcd\u6700\u5927\u5bb9\u91cf\u4e3a8G\n</code></pre> <p>\u4fee\u6539\u540e\u91cd\u542f</p>"},{"location":"middleware/etcd/#k3s-etcd","title":"k3s \u5185\u7f6eetcd \u7ef4\u62a4","text":"<p>\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e <code>/var/lib/rancher/k3s/server/db/etcd</code></p> <pre><code># alias k3s_etcdctl=\"ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379   --cert=/var/lib/rancher/k3s/server/tls/etcd/server-client.crt   --key=/var/lib/rancher/k3s/server/tls/etcd/server-client.key   --cacert=/var/lib/rancher/k3s/server/tls/etcd/server-ca.crt\"\n\n# k3s_etcdctl endpoint status --write-out=table\n+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n|        ENDPOINT        |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |\n+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n| https://127.0.0.1:2379 | c02555d2c59f97bf |  3.5.13 |   32 MB |     false |      false |        11 |   30427186 |           30427186 |        |\n+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n\n# k3s_etcdctl endpoint status --write-out=json | egrep -o '\"revision\":[0-9]*' | egrep -o '[0-9].*'\n27951671\n\n# k3s_etcdctl compact 27951671\ncompacted revision 27951671\n\n# k3s_etcdctl  endpoint status --write-out=table\n+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n|        ENDPOINT        |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |\n+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n| https://127.0.0.1:2379 | c02555d2c59f97bf |  3.5.13 |   18 MB |     false |      false |        11 |   30431611 |           30431611 |        |\n+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n\u6570\u636e\u5907\u4efd\n# k3s etcd-snapshot save\n\n/var/lib/rancher/k3s/server/db/etcd/snapshot\n</code></pre>"},{"location":"middleware/etcd/#_7","title":"\u7a7a\u95f4\u76d1\u63a7","text":"<ul> <li>etcd_mvcc_db_total_size_in_use_in_bytes \u5b9e\u9645\u4f7f\u7528\uff0c\u538b\u7f29\u540e\u7684\u4f7f\u7528\u91cf</li> <li>etcd_mvcc_db_total_size_in_bytes \u5b9e\u9645\u78c1\u76d8\u5360\u7528\u7a7a\u95f4</li> </ul>"},{"location":"middleware/etcd/#_8","title":"\u6570\u636e\u5907\u4efd","text":"<pre><code>$ etcdctl snapshot save backup.db\n$ etcdutl --write-out=table snapshot status backup.db\n+----------+----------+------------+------------+\n|   HASH   | REVISION | TOTAL KEYS | TOTAL SIZE |\n+----------+----------+------------+------------+\n| fe01cf57 |       10 |          7 | 2.1 MB     |\n+----------+----------+------------+------------+\n</code></pre>"},{"location":"mysql/MGR/","title":"\u7ec4\u590d\u5236","text":"<p>mysql 8.0 MGR</p>"},{"location":"mysql/MGR/#_2","title":"\u8282\u70b9\u89c4\u5212","text":"<ul> <li>10.1.2.11</li> <li>10.1.2.12</li> <li>10.1.2.14</li> </ul>"},{"location":"mysql/MGR/#_3","title":"\u5b89\u88c5","text":"<pre><code>apt-get install mysql-client-8.0 mysql-server-8.0\n</code></pre>"},{"location":"mysql/MGR/#_4","title":"\u7528\u6237\u7ba1\u7406","text":"<pre><code># \u672c\u5730\u8bbf\u95ee\nalter user 'root'@'localhost' identified with mysql_native_password by 'mysql_4U';\n# \u8fdc\u7aef\u8bbf\u95ee\ncreate user 'root'@'%' identified with mysql_native_password by 'mysql_4U';\ngrant all privileges on *.* to 'root'@'%' with grant option;\nflush privileges;\n# \u590d\u5236\u7528\u6237\nset sql_log_bin=0;\ncreate user 'repl'@'%' identified by 'repl@12345';\ngrant replication slave on *.* to 'repl'@'%';\nflush privileges;\nset sql_log_bin=1;\n</code></pre>"},{"location":"mysql/MGR/#_5","title":"\u914d\u7f6e\u6570\u636e\u5e93","text":"<p><code>vi /etc/mysql/conf.d/mysql.cnf</code></p> <pre><code>[mysqld]\nbasedir=/usr\ndatadir=/var/lib/mysql\n#\u4fee\u6539\nserver_id=3\nsocket=/var/lib/mysql/mysql.sock\nlog-error=/var/lib/mysql/mysqld.log\npid-file=/var/lib/mysql/mysqld.pid\n\nbinlog_checksum=NONE\ngtid_mode=ON\nenforce_gtid_consistency=ON\ndefault_authentication_plugin=mysql_native_password\n#loose-group_replication_recovery_get_public_key=on\nloose-group_replication_recovery_use_ssl=on\nloose-group_replication_group_name=\"80d51c50-3c11-11ee-bd0f-080027fc0450\"\nloose-group_replication_start_on_boot=OFF\n#\u4fee\u6539\nloose-group_replication_local_address=\"10.10.2.11:33061\"\nloose-group_replication_group_seeds=\"10.10.2.12:33061,10.10.2.12\uff1a33061,10.10.2.13:33061\"\nloose-group_replication_bootstrap_group=OFF\ntransaction_write_set_extraction=XXHASH64\n\n[mysql]\nprompt=\"Slave02[\\\\d]&gt; \"\n</code></pre> <p>\u91cd\u542f\u6570\u636e\u5e93</p> <pre><code>systemctl restart mysql\n</code></pre>"},{"location":"mysql/MGR/#_6","title":"\u5b89\u88c5\u63d2\u4ef6","text":"<pre><code> INSTALL PLUGIN group_replication SONAME 'group_replication.so';\n INSTALL PLUGIN clone SONAME 'mysql_clone.so';\n</code></pre> <p>\u67e5\u770b\u63d2\u4ef6</p> <pre><code> show plugins;\n</code></pre>"},{"location":"mysql/MGR/#_7","title":"\u4e3b\u8282\u70b9\u5f00\u542f\u7ec4\u590d\u5236","text":"<pre><code> set global group_replication_bootstrap_group=on;\n start group_replication;\n\n select * from performance_schema.replication_group_members;\n set global group_replication_bootstrap_group=off;\n</code></pre>"},{"location":"mysql/MGR/#_8","title":"\u4ece\u8282\u70b9\u5f00\u542f\u7ec4\u590d\u5236","text":"<pre><code>reset master;\nchange master to master_user=\"repl\",master_password=\"repl@12345\" for channel 'group_replication_recovery';\nstart group_replication;\n</code></pre>"},{"location":"mysql/MGR/#_9","title":"\u67e5\u770b\u7ec4\u590d\u5236","text":"<pre><code> select * from performance_schema.replication_group_members;\n</code></pre>"},{"location":"mysql/MGR/#_10","title":"\u624b\u52a8\u91cd\u542f","text":"<p>\u67e5\u770bgtid</p> <pre><code>select RECEIVED_TRANSACTION_SET from performance_schema.replication_connection_status where  channel_name = 'group_replication_applier' union all  select variable_value from performance_schema.global_variables where  variable_name = 'gtid_executed';\n</code></pre> <p>\u5728\u5e8f\u53f7\u6700\u5927\u7684\u8282\u70b9\u4e0a\u542f\u52a8\u5f15\u5bfc\u7a0b\u5e8f</p> <pre><code> set global group_replication_bootstrap_group=on;\n start group_replication;\n set global group_replication_bootstrap_group=off;\n\n select * from performance_schema.replication_group_members;\n</code></pre> <p>\u5176\u4ed6\u8282\u70b9</p> <pre><code>start group_replication;\n</code></pre>"},{"location":"mysql/MGR/#_11","title":"\u9519\u8bef\u96c6","text":"<p>\u65ad\u7535\u540e\u4e8c\u8fdb\u5236\u65e5\u5fd7\u635f\u574f,\u53d1\u751f\u5728\u4ece\u5e93</p> <pre><code>start group_replication\n[ERROR] [MY-010596] [Repl] Error reading relay log event for channel 'group_replication_applier': corrupted data in log event\n2024-01-10T02:58:16.082182Z 94 [ERROR] [MY-013121] [Repl] Replica SQL for channel 'group_replication_applier': Relay log read failure: Could not parse relay log event entry. The possible reasons are: the source's binary log is corrupted (you can check this by running 'mysqlbinlog' on the binary log), the replica's relay log is corrupted (you can check this by running 'mysqlbinlog' on the relay log), a network problem, the server was unable to fetch a keyring key required to open an encrypted relay log file, or a bug in the source's or replica's MySQL code. If you want to check the source's binary log or replica's relay log, you will be able to know their names by issuing 'SHOW REPLICA STATUS' on this replica. Error_code: MY-013121\n</code></pre> <p>\u89e3\u51b3</p> <pre><code>reset master \nsystemctl restart mysql\nstart group_replication\n</code></pre> <p>\u9519\u8bef</p> <pre><code>[ERROR] [MY-010605] [Repl] Failed in open_index_file() called from Relay_log_info::rli_init_info().\n</code></pre> <p>\u89e3\u51b3</p> <pre><code>/var/lib/mysql# mkdir relaylog\nchown mysql:mysql relaylog/\n</code></pre>"},{"location":"mysql/PrivilegeManagement/","title":"\u6743\u9650\u7ba1\u7406","text":""},{"location":"mysql/PrivilegeManagement/#mysql","title":"mysql \u6570\u636e\u5e93\u7ba1\u7406","text":""},{"location":"mysql/PrivilegeManagement/#_1","title":"\u5b89\u5168\u53ca\u6743\u9650","text":""},{"location":"mysql/PrivilegeManagement/#_2","title":"\u6743\u9650\u5c42\u7ea7","text":"<pre><code>\u5728MySQL\u4e2d\uff0c\u6743\u9650\u53ef\u4ee5\u5206\u4e3a\u591a\u4e2a\u5c42\u7ea7\uff0c\u5305\u62ec\u5168\u5c40\u6743\u9650\u3001\u6570\u636e\u5e93\u7ea7\u6743\u9650\u3001\u8868\u7ea7\u6743\u9650\u3001\u5217\u7ea7\u6743\u9650\u548c\u4f8b\u7a0b\u7ea7\u6743\u9650\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_3","title":"\u5206\u914d\u7684\u539f\u5219","text":"<ul> <li>\u6700\u5c0f\u6743\u9650\u539f\u5219\uff1a\u6bcf\u4e2a\u7528\u6237\u53ea\u6709\u5b8c\u6210\u5176\u5de5\u4f5c\u6240\u5fc5\u9700\u7684\u6700\u5c0f\u6743\u9650\u96c6\u5408\u3002</li> <li>\u6309\u9700\u5206\u914d\uff1a\u6839\u636e\u7528\u6237\u7684\u89d2\u8272\u548c\u804c\u8d23\u5206\u914d\u6743\u9650</li> <li>\u5b9a\u671f\u5ba1\u8ba1\uff1a\u5b9a\u671f\u68c0\u67e5\u7528\u6237\u6743\u9650\uff0c\u786e\u4fdd\u6ca1\u6709\u4e0d\u5fc5\u8981\u7684\u6743\u9650\u9057\u7559\u3002</li> </ul>"},{"location":"mysql/PrivilegeManagement/#_4","title":"\u4e3e\u4f8b","text":"<pre><code>-- \u53ea\u8bfb\u6743\u9650\nGRANT SELECT ON mydb.* TO 'data_analyst'@'localhost';\n\n-- \u8bfb\u5199\u6743\u9650\nGRANT SELECT, INSERT, UPDATE ON mydb.* TO 'app_developer'@'localhost';\n\n-- \u6570\u636e\u5e93\u7ba1\u7406\u5458\u9700\u8981\u6240\u6709\u6743\u9650\nGRANT ALL PRIVILEGES ON mydb.* TO 'db_admin'@'localhost';\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_5","title":"\u5b9a\u671f\u5ba1\u8ba1","text":"<pre><code>-- \u67e5\u770b\u5f53\u524d\u6240\u6709\u7528\u6237\u7684\u6743\u9650\nSELECT * FROM mysql.user\\G;\n\n-- \u67e5\u770b\u7279\u5b9a\u7528\u6237\u7684\u6743\u9650\nSHOW GRANTS FOR 'data_analyst'@'localhost';\n</code></pre> <pre><code>-- \u56de\u6536\u67d0\u4e2a\u7528\u6237\u7684\u67d0\u9879\u6743\u9650\nREVOKE INSERT ON mydb.* FROM 'app_developer'@'localhost';\n\n-- \u5220\u9664\u4e0d\u518d\u9700\u8981\u7684\u7528\u6237\u8d26\u53f7\nDROP USER 'ex_employee'@'localhost';\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_6","title":"\u6570\u636e\u52a0\u5bc6","text":"<ul> <li>\u5bf9\u4e8e\u654f\u611f\u5b57\u6bb5\uff0c\u5982\u5bc6\u7801\u3001\u4e2a\u4eba\u4fe1\u606f\u7b49\uff0c\u59cb\u7ec8\u4f7f\u7528\u52a0\u5bc6\u5b58\u50a8\u3002</li> <li>\u4f7f\u7528\u5f3a\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5982AES\u3002</li> <li>\u4fdd\u62a4\u597d\u5bc6\u94a5\uff0c\u4e0d\u8981\u5728\u4ee3\u7801\u6216\u914d\u7f6e\u6587\u4ef6\u4e2d\u786c\u7f16\u7801\u3002</li> </ul> <p>\u5728MySQL\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684\u52a0\u5bc6\u51fd\u6570\u6765\u52a0\u5bc6\u6570\u636e\u3002</p> <pre><code>-- \u5047\u8bbe\u6211\u4eec\u9700\u8981\u5b58\u50a8\u7528\u6237\u5bc6\u7801\nALTER TABLE user_info ADD COLUMN encrypted_password VARCHAR(255);\n\n-- \u4f7f\u7528AES\u52a0\u5bc6\u7528\u6237\u5bc6\u7801\nUPDATE user_info SET encrypted_password = AES_ENCRYPT('password123', 'my_secret_key');\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#tips","title":"\u5b89\u5168\u4f18\u5316Tips","text":"<ul> <li>\u4f7f\u7528\u590d\u6742\u7684\u5bc6\u7801\uff0c\u5e76\u5b9a\u671f\u66f4\u6362\u3002</li> <li>\u4e0d\u8981\u4f7f\u7528root\u8d26\u6237\u8fdb\u884c\u65e5\u5e38\u64cd\u4f5c\u3002</li> <li>\u5b9a\u671f\u5907\u4efd\u6570\u636e\u5e93\uff0c\u4ee5\u9632\u4e07\u4e00\u3002</li> </ul>"},{"location":"mysql/PrivilegeManagement/#_7","title":"\u6027\u80fd\u914d\u7f6e","text":"<pre><code>mysqld --verbose --help | grep \"Default options\" -A 1\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_8","title":"\u5173\u952e\u914d\u7f6e\u9879","text":"<pre><code>\u300cinnodb_buffer_pool_size\u300d\uff1a InnoDB\u5b58\u50a8\u5f15\u64ce\u7684\u7f13\u51b2\u6c60\u5927\u5c0f\uff0c\u4e00\u822c\u5efa\u8bae\u8bbe\u7f6e\u4e3a\u7cfb\u7edf\u5185\u5b58\u768460%-80%\n\u300cinnodb_log_file_size\u300d\uff1a InnoDB\u7684\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\uff0c\u5bf9\u4e8e\u4e8b\u52a1\u7684\u5199\u5165\u6709\u5f88\u5927\u5f71\u54cd\u3002\u5982\u679c\u8bbe\u7f6e\u5f97\u8fc7\u5c0f\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9891\u7e41\u7684I/O\u5199\u5165\u64cd\u4f5c\n\u300cinnodb_flush_log_at_trx_commit\u300d\uff1a \u63a7\u5236\u65e5\u5fd7\u5237\u65b0\u5230\u78c1\u76d8\u7684\u7b56\u7565\u3002\u503c\u4e3a1\u8868\u793a\u6bcf\u6b21\u4e8b\u52a1\u63d0\u4ea4\u90fd\u4f1a\u5199\u5165\u65e5\u5fd7\uff0c\u786e\u4fdd\u6570\u636e\u7684\u5b89\u5168\u6027\uff0c\u4f46\u53ef\u80fd\u5f71\u54cd\u6027\u80fd\uff1b\u503c\u4e3a2\u62160\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\uff0c\u4f46\u5728\u5d29\u6e83\u65f6\u53ef\u80fd\u4e22\u5931\u6570\u636e\u3002\n\u300cmax_connections\u300d\uff1a \u5141\u8bb8\u7684\u6700\u5927\u8fde\u63a5\u6570\n\u300cquery_cache_size\u300d\uff1a \u67e5\u8be2\u7f13\u5b58\u7684\u5927\u5c0f \u63d0\u5347\u8bfb\u64cd\u4f5c\u7684\u6027\u80fd\u3002\u4f46\u5728\u9ad8\u5e76\u53d1\u5199\u5165\u7684\u573a\u666f\u4e2d\uff0c\u67e5\u8be2\u7f13\u5b58\u53ef\u80fd\u53cd\u800c\u964d\u4f4e\u6027\u80fd\n\u300ctmp_table_size\u300d \u548c \u300cmax_heap_table_size\u300d\uff1a \u51b3\u5b9a\u4e86\u4e34\u65f6\u8868\u7684\u6700\u5927\u5927\u5c0f\uff0c\u5982\u679c\u4e34\u65f6\u8868\u8d85\u8fc7\u8fd9\u4e2a\u5927\u5c0f\uff0c\u5b83\u4f1a\u8f6c\u6362\u4e3a\u78c1\u76d8\u4e0a\u7684MyISAM\u8868\uff0c\u5f71\u54cd\u6027\u80fd\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_9","title":"\u5907\u4efd","text":"<p>\u903b\u8f91\u5907\u4efd\uff0c\u7269\u7406\u5907\u4efd\uff0c\u70ed\u5907\u4efd\uff0c\u51b7\u5907\u4efd\u3002clone</p> <p>\u8fd9\u91cc\u9009\u7528 xtrabackup</p> <pre><code>wget https://downloads.percona.com/downloads/Percona-XtraBackup-8.0/Percona-XtraBackup-8.0.35-30/binary/debian/jammy/x86_64/percona-xtrabackup-80_8.0.35-30-1.jammy_amd64.deb\n</code></pre> <p>\u5907\u4efd\u8bbe\u8ba1\uff1a on-deman \u624b\u52a8\u4e00\u6b21\u89e6\u53d1 sechulder \u5468\u671f\u5907\u4efd\u3002 \u5907\u4efd\u4fdd\u7559\u7b56\u7565</p> <pre><code># \u4e00\u6b21\u5168\u5907\nxtrabackup --backup --parallel=10 --host=10.10.2.13 --user=root --target-dir=/tmp/full -p\nxtrabackup --prepare --use-memory=2G --target-dir=/tmp/full\n\n# \u589e\u91cf\u5907\u4efd\nxtrabackup --backup --host=10.10.2.13 --user=root --target-dir=/tmp/a/inc1 --incremental-basedir=/tmp/a/ -p\n\nxtrabackup --prepare --apply-log-only --target-dir=/tmp/a  \n\nxtrabackup --prepare --apply-log-only --target-dir=/tmp/a --incremental-dir=/tmp/a/inc1/  \n\n# \u538b\u7f29\u5907\u4efd\nxtrabackup --backup  --compress --compress-threads=8 --host=10.10.2.13 --user=root --target-dir=/tmp/c -p\n\n# \u6d41\u5907\u4efd\nxtrabackup --backup --stream=xbstream --host=10.10.2.13 --user=root --target-dir=/tmp/a -p 2&gt;/data/backup/xtrabackup.log &gt; /tmp/backup0625.xbstream\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_10","title":"\u6570\u636e\u5bfc\u51fa\u5bfc\u5165","text":"<pre><code>--\u5bfc\u51fa\u8868\u7ed3\u6784\nmysqldump -uroot -proot -h192.168.6.10 -P3306 --databases XXX \\\n--tables XXX --single-transaction \\\n--hex-blob --no-data --routines --events --triggers --master-data=2 --set-gtid-purged=OFF \\\n--default-character-set=utf8 | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' \\\n-e 's/DEFINER[ ]*=.*FUNCTION/FUNCTION/' \\\n-e 's/DEFINER[ ]*=.*PROCEDURE/PROCEDURE/' \\\n-e 's/DEFINER[ ]*=.*TRIGGER/TRIGGER/' \\\n-e 's/DEFINER[ ]*=.*EVENT/EVENT/' \\\n-e 's/DEFINER[ ]*=.*SQL SECURITY DEFINER/SQL SECURITY DEFINER/' \\\n&gt; /home/mysql/backup/XXX_ddl.sql\n\n--\u5bfc\u51fa\u6570\u636e,\u53ef\u4ee5\u5e26\u6761\u4ef6  --where=\"column1=1\"\nmysqldump -uroot -proot -h192.168.6.10 -P3306 --databases XXX \\\n--tables XXX \\\n--single-transaction --hex-blob --no-create-info \\\n--skip-triggers --master-data=2 \\\n--default-character-set=utf8 &gt; /home/mysql/backup/XXX_data.sql\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_11","title":"\u914d\u7f6e","text":"<p>\u6162\u67e5\u8be2</p> <p>``` \u4e5f\u53ef\u4ee5\u5728MySQL\u547d\u4ee4\u884c\u4e2d\u4fee\u6539\u53c2\u6570\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7 mysql&gt; SET GLOBAL slow_query_log = 1; mysql&gt; SET GLOBAL slow_query_log_file = '/data/mysql/log/query_log/slow_statement.log'; mysql&gt; SET GLOBAL long_query_time = 10; mysql&gt; SET GLOBAL log_output = 'FILE'; \u8fde\u63a5\u6570 --Connections</p>"},{"location":"mysql/PrivilegeManagement/#_12","title":"\u4fdd\u6301\u5728\u7f13\u5b58\u4e2d\u7684\u53ef\u7528\u8fde\u63a5\u7ebf\u7a0b","text":""},{"location":"mysql/PrivilegeManagement/#default-1","title":"default = -1\uff08\u65e0\uff09","text":"<p>thread_cache_size = 16</p>"},{"location":"mysql/PrivilegeManagement/#_13","title":"\u6700\u5927\u7684\u8fde\u63a5\u7ebf\u7a0b\u6570(\u5173\u7cfb\u578b\u6570\u636e\u5e93)","text":""},{"location":"mysql/PrivilegeManagement/#default-151","title":"default = 151","text":"<p>max_connections = 1000</p>"},{"location":"mysql/PrivilegeManagement/#kv","title":"\u6700\u5927\u7684\u8fde\u63a5\u7ebf\u7a0b\u6570(\u6587\u6863\u578b/KV\u578b)","text":""},{"location":"mysql/PrivilegeManagement/#default-100","title":"default = 100","text":""},{"location":"mysql/PrivilegeManagement/#mysqlx_max_connections-700","title":"mysqlx_max_connections = 700","text":"<p>--\u7f13\u51b2\u533a Buffer</p>"},{"location":"mysql/PrivilegeManagement/#default-128m","title":"\u7f13\u51b2\u533a\u5355\u4f4d\u5927\u5c0f\uff1bdefault = 128M","text":"<p>innodb_buffer_pool_size = 128M</p>"},{"location":"mysql/PrivilegeManagement/#70","title":"\u7f13\u51b2\u533a\u603b\u5927\u5c0f\uff0c\u5185\u5b58\u768470%\uff0c\u5355\u4f4d\u5927\u5c0f\u7684\u500d\u6570","text":""},{"location":"mysql/PrivilegeManagement/#default-128m_1","title":"default = 128M","text":"<p>innodb_buffer_pool_size = 6G</p>"},{"location":"mysql/PrivilegeManagement/#mysql-innodb_buffer_pool_instances","title":"\u4ee5\u4e0a\u4e24\u4e2a\u53c2\u6570\u7684\u8bbe\u5b9a\uff0cMySQL\u4f1a\u81ea\u52a8\u6539\u53d8 innodb_buffer_pool_instances \u7684\u503c","text":"<p>--I/O \u7ebf\u7a0b\u6570</p>"},{"location":"mysql/PrivilegeManagement/#io","title":"\u5f02\u6b65I/O\u5b50\u7cfb\u7edf","text":""},{"location":"mysql/PrivilegeManagement/#default-no","title":"default = NO","text":"<p>innodb_use_native_aio = NO</p>"},{"location":"mysql/PrivilegeManagement/#_14","title":"\u8bfb\u6570\u636e\u7ebf\u7a0b\u6570","text":""},{"location":"mysql/PrivilegeManagement/#default-4","title":"default = 4","text":"<p>innodb_read_io_threads = 32</p>"},{"location":"mysql/PrivilegeManagement/#_15","title":"\u5199\u5165\u6570\u636e\u7ebf\u7a0b\u6570","text":""},{"location":"mysql/PrivilegeManagement/#default-4_1","title":"default = 4","text":"<p>innodb_write_io_threads = 32</p> <p>--Open cache</p>"},{"location":"mysql/PrivilegeManagement/#default-5000","title":"default = 5000","text":"<p>open_files_limit = 10000</p>"},{"location":"mysql/PrivilegeManagement/#maxopen_files_limit-10-max_connections2400","title":"\u8ba1\u7b97\u516c\u5f0f\uff1aMAX((open_files_limit-10-max_connections)/2,400)","text":""},{"location":"mysql/PrivilegeManagement/#default-4000","title":"default = 4000","text":"<p>table_open_cache = 4495</p>"},{"location":"mysql/PrivilegeManagement/#16","title":"\u8d85\u8fc716\u6838\u7684\u786c\u4ef6\uff0c\u80af\u5b9a\u8981\u589e\u52a0\uff0c\u4ee5\u53d1\u6325\u51fa\u6700\u5927\u6027\u80fd","text":""},{"location":"mysql/PrivilegeManagement/#default-16","title":"default = 16","text":"<p>table_open_cache_instances = 32  ```</p> <p>binlog \u6e05\u7406</p> <pre><code>## \u81ea\u52a8\u6e05\u7406\nshow variables like '%binlog_expire_logs_seconds%'  \n\nmysql8.0\nmysql 8\u5f00\u59cb expire_logs_days \u5e9f\u5f03 ,\n\u542f\u7528binlog_expire_logs_seconds\u8bbe\u7f6ebinlog\n\u81ea\u52a8\u6e05\u9664\u65e5\u5fd7\u65f6\u95f4,\u4fdd\u5b58\u65f6\u95f4 \n\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff1b\u9ed8\u8ba42592000 30\u5929\n14400   4\u5c0f\u65f6\uff1b86400  1\u5929\uff1b259200  3\u5929\uff1b\nmysql&gt; set global binlog_expire_logs_seconds=86400;\n\n## \u624b\u52a8\u6e05\u7406\n\u67e5\u770b\u65e5\u5fd7\u6587\u4ef6\u3002\nmysql&gt;show binary logs;\n\u7b2c\u4e8c\u6b65\uff1a\u67e5\u770b\u6b63\u5728\u4f7f\u7528\u7684\u65e5\u5fd7\u6587\u4ef6\uff1ashow master status;\nmysql&gt;show master status;\n\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u7684\u65e5\u5fd7\u6587\u4ef6\u662fmysqlhost01-bin.000010\uff0c\n\u90a3\u4e48\u5220\u9664\u65e5\u5fd7\u6587\u4ef6\u7684\u65f6\u5019\u5e94\u8be5\u6392\u9664\u6389\u8be5\u6587\u4ef6\u3002\n\u5220\u9664\u65e5\u5fd7\u6587\u4ef6\u7684\u547d\u4ee4\uff1apurge binary logs to 'mysqlhost01-bin.000010';\nmysql&gt;purge binary logs to 'mysqlhost01-bin.000010';\n\n## \u5207\u6362\u65e5\u5fd7\nflush logs;\n</code></pre> <p>\u65e5\u5fd7</p> <pre><code>    \u91cd\u505a\u65e5\u5fd7\uff08redo log\uff09\n    \u56de\u6eda\u65e5\u5fd7\uff08undo log\uff09\n    \u5f52\u6863\u65e5\u5fd7\uff08binlog\uff09\n    \u9519\u8bef\u65e5\u5fd7\uff08errorlog\uff09\n    \u6162\u67e5\u8be2\u65e5\u5fd7\uff08slow query log\uff09\n    \u4e00\u822c\u67e5\u8be2\u65e5\u5fd7\uff08general log\uff09\n    \u4e2d\u7ee7\u65e5\u5fd7\uff08relay log\uff09\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_16","title":"\u76d1\u63a7","text":""},{"location":"mysql/PrivilegeManagement/#pmm","title":"pmm","text":"<pre><code>mysql \u76d1\u63a7\u7ba1\u7406\u7528\u6237\nCREATE USER 'pmm'@'127.0.0.1' IDENTIFIED BY 'pass' WITH MAX_USER_CONNECTIONS 10;\nGRANT SELECT, PROCESS, REPLICATION CLIENT, RELOAD, BACKUP_ADMIN ON *.* TO 'pmm'@'127.0.0.1';\n</code></pre> <pre><code>server \u7aef \u5b89\u88c5\ncurl -fsSL https://www.percona.com/get/pmm | /bin/bash\n</code></pre> <pre><code>agent \u7aef \u5b89\u88c5\nwget https://repo.percona.com/apt/percona-release_latest.generic_all.deb\ndpkg -i percona-release_latest.generic_all.deb\napt-get update\napt install -y pmm2-client\napt-get install -y qpress\n\n\u914d\u7f6e \u6ce8\u518c server\npmm-admin config --server-insecure-tls --server-url=https://admin:admin@10.10.2.14:443\ncat /usr/local/percona/pmm2/config/pmm-agent.yaml\npmm-admin  add mysql --query-source=perfschema --host=10.10.2.12 --username=pmm --password=123456789\n\npmm-admin  add mysql --query-source=slowlog --host=10.10.2.12 --username=pmm --password=123456789\n\n\u67e5\u770b\npmm-admin status \npmm-admin list \n\n</code></pre>"},{"location":"mysql/PrivilegeManagement/#_17","title":"\u5e38\u7528\u547d\u4ee4","text":"<p>\u67e5\u770b\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684SQL</p> <pre><code>SHOW FULL PROCESSLIST\n</code></pre> <pre><code>show engine innodb status\\G\n</code></pre>"},{"location":"mysql/admin/","title":"mysql \u65e5\u5e38\u7ba1\u7406","text":""},{"location":"mysql/admin/#innodb","title":"\u67e5\u770bInnodb\u5f15\u64ce\u72b6\u6001\uff0c\u67e5\u770b\u4e0a\u6b21\u6b7b\u9501\u8be6\u60c5","text":"<p>SHOW ENGINE INNODB STATUS;</p>"},{"location":"mysql/admin/#_1","title":"\u4fee\u6539\u5bc6\u7801","text":"<pre><code>ALTER USER 'root'@'localhost d ' IDENTIFIED WITH mysql_native_password BY 'pwd';\nflush privileges;\n</code></pre>"},{"location":"mysql/admin/#mysql_1","title":"\u67e5\u770b\u5f53\u524d MySQL \u6267\u884c\u8fdb\u7a0b\u5217\u8868","text":"<p>SHOW FULL PROCESSLIST;</p>"},{"location":"mysql/admin/#mysql-8","title":"\u5982\u679c\u662fMysql 8\u4e4b\u524d\u7684\u7248\u672c\uff0c\u67e5\u770b\u9501\u4fe1\u606f","text":"<p>SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCKS; SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS;</p>"},{"location":"mysql/admin/#mysql-8_1","title":"\u5982\u679c\u662fMysql 8\u4e4b\u540e\u7684\u7248\u672c\uff0c\u67e5\u770b\u9501\u4fe1\u606f","text":"<p>select * from performance_schema.data_locks;  select * from performance_schema.data_lock_waits;</p>"},{"location":"mysql/admin/#mysql-8-sql","title":"\u5982\u679c\u662fMysql 8 \u7248\u672c\u4e4b\u540e\uff0c\u4e00\u53e5SQL\u6392\u67e5\u51fa\u76f8\u5173\u963b\u585e\u539f\u56e0\uff1b","text":"<p>select c.SQL_TEXT  from performance_schema.events_statements_current c  inner join  performance_schema.data_lock_waits w ON c.THREAD_ID  = w.BLOCKING_THREAD_ID or c.THREAD_ID  = w.REQUESTING_THREAD_ID </p>"},{"location":"mysql/admin/#sql","title":"\u4f7f\u7528SQL\u5224\u65ad\uff0c\u6700\u5927\u8fde\u63a5\u6570","text":"<p>show variables like \"max_connections\";</p>"},{"location":"mysql/admin/#mysql_2","title":"\u663e\u793a mysql\u7684\u5f53\u524d\u8fde\u63a5\u6570","text":"<p>SHOW STATUS LIKE 'Threads_connected';</p>"},{"location":"mysql/admin/#mysql_3","title":"\u4e34\u65f6\u4fee\u6539mysql\u914d\u7f6e\uff0c\u91cd\u542f\u6570\u636e\u5e93\u5931\u6548","text":"<p>set GLOBAL max_connections=1000;</p>"},{"location":"mysql/admin/#_2","title":"\u6c38\u4e45\u6027\u8bbe\u7f6e\u65b9\u6848","text":"<p>\u5728[mysqld]\u4e0b\u9762\u6dfb\u52a0\uff1a max_connections=1000</p>"},{"location":"mysql/config/","title":"\u914d\u7f6e\u7ba1\u7406","text":""},{"location":"mysql/config/#_2","title":"\u542f\u52a8\u53c2\u6570","text":"<pre><code>mysqld --verbose --help\n</code></pre>"},{"location":"mysql/config/#_3","title":"\u7cfb\u7edf\u8fd0\u884c\u53d8\u91cf","text":"<pre><code>mysql&gt; SHOW VARIABLES;\nmysql&gt; SHOW STATUS;\n</code></pre>"},{"location":"mysql/config/#_4","title":"\u7cfb\u7edf\u8fd0\u884c\u53d8\u91cf","text":"<pre><code>mysqladmin variables\nmysqladmin extended-status\n</code></pre>"},{"location":"mysql/config/#_5","title":"\u53c2\u6570\u9a8c\u8bc1","text":"<pre><code>mysqld --validate-config --log_error_verbosity=2\n</code></pre>"},{"location":"mysql/config/#_6","title":"\u6b63\u5728\u6267\u884c\u8bed\u53e5\u67e5\u770b","text":"<pre><code> show processlist;\n</code></pre>"},{"location":"mysql/config/#_7","title":"\u67e5\u770b\u8fd0\u884c\u72b6\u6001","text":"<pre><code>mysqladmin status -h 10.10.2.11 -pmysql_4U\n</code></pre>"},{"location":"mysql/config/#_8","title":"\u65e5\u5fd7\u76f8\u5173","text":""},{"location":"mysql/config/#_9","title":"\u6162\u67e5\u8be2\u9608\u503c","text":"<pre><code>long_query_time\n</code></pre>"},{"location":"mysql/config/#table-file-none","title":"\u65e5\u5fd7\u8f93\u51fa\u4f4d\u7f6e table file none","text":"<pre><code>log_output\n</code></pre> <pre><code>general_log\ngeneral_log_file\n</code></pre> <pre><code>slow_query_log\nslow_query_log_file\n</code></pre> <p>session \u4e2d\u5173\u95ed\u64cd\u4f5c\u8bb0\u5f55</p>"},{"location":"mysql/config/#_10","title":"\u9519\u8bef\u65e5\u5fd7","text":"<pre><code>log_error /var/log/mysql/error.log\n</code></pre>"},{"location":"mysql/config/#_11","title":"\u4e8c\u8fdb\u5236\u65e5\u5fd7","text":"<pre><code>\u52a0\u5bc6\nbinlog_encryption\n\nmax_binlog_size  \n# \u65e5\u5fd7\u5b58\u50a8\u4f4d\u7f6e mkdir binlog chmod 700 binlog  chown mysql:mysql -R binlog\nlog_bin                 = /var/lib/mysql/binlog/mysql-bin.log\nrelay-log = /var/lib/mysql/relaylog/mysql-relay.log\n\n</code></pre> <pre><code>binlog_format= ROW #ROW, STATEMENT ,MIXED \n</code></pre>"},{"location":"mysql/config/#_12","title":"\u6162\u67e5\u8be2","text":"<pre><code>slow_query_log_file | /var/lib/mysql/node1-slow.log\n</code></pre>"},{"location":"mysql/config/#_13","title":"\u65e5\u5fd7\u7ba1\u7406","text":"<p>\u65e5\u5fd7\u4fdd\u7559\u65f6\u95f4\u9ed8\u8ba4 30d</p> <pre><code>binlog_expire_logs_auto_purge = ON\nbinlog_expire_logs_seconds = 2592000 \nexpire_logs_days\n</code></pre>"},{"location":"mysql/memory/","title":"Memory","text":"<p>mysql\u5185\u5b58\u8ba1\u7b97 https://www.mysqlcalculator.com/</p> <pre><code>SHOW FULL PROCESSLIST\n\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\u67e5\u770b\u54ea\u4e9b\u4e8b\u52a1\u6b63\u5728\u7b49\u5f85\uff0c\u54ea\u4e9b\u4e8b\u52a1\u6b63\u5728\u963b\u585e\u5b83\u4eec</p> <pre><code>SELECT \n  r.trx_id waiting_trx_id, \n  r.trx_mysql_thread_id waiting_thread, \n  r.trx_query waiting_query, \n  b.trx_id blocking_trx_id, \n  b.trx_mysql_thread_id blocking_thread, \n  b.trx_query blocking_query \nFROM \n  performance_schema.data_lock_waits w \n  INNER JOIN information_schema.innodb_trx b ON b.trx_id = w.blocking_engine_transaction_id \n  INNER JOIN information_schema.innodb_trx r ON r.trx_id = w.requesting_engine_transaction_id;\n</code></pre> <p>\u6216\u8005\uff0c\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u76f4\u63a5\u770bsys\u6570\u636e\u5e93\u4e2d\u7684 innodb_lock_waits \u89c6\u56fe</p> <pre><code>SELECT \n    waiting_trx_id,\n    waiting_pid,\n    waiting_query,\n    blocking_trx_id,\n    blocking_pid,\n    blocking_query\nFROM\n    sys.innodb_lock_waits;\n</code></pre> <p>\u67e5\u770b\u6bcf\u4e2a\u7ebf\u7a0b\u5360\u7528\u591a\u5c11\u5185\u5b58\uff0c\u7136\u540e\u4e58\u4ee5\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\uff08\u4e5f\u5c31\u662f\u6392\u67e5sleep\u7684\uff09\u3002</p> <pre><code>SELECT ( (  @@read_buffer_size \n+@@read_rnd_buffer_size \n+@@sort_buffer_size \n+@@join_buffer_size \n+@@binlog_cache_size \n+@@thread_stack \n+@@max_allowed_packet \n+@@net_buffer_length  )\n) / ( 1024  *1024 ) AS MEMORY_MB;\n</code></pre> <p>\u67e5\u770bMySQL\u5168\u5c40\u5360\u7528\u591a\u5c11\u5185\u5b58</p> <pre><code>select (@@innodb_buffer_pool_size\n+@@innodb_log_buffer_size\n+@@key_buffer_size) / 1024/1024 AS MEMORY_MB;\n</code></pre> <p>\u67e5\u770bperformance_schema\u5360\u7528\u591a\u5c11\u5185\u5b58</p> <pre><code>SELECT SUBSTRING_INDEX(event_name,'/', 2 ) AS\n       code_area, sys.format_bytes(SUM(current_alloc))\n       AS current_alloc\n       FROM sys.x$memory_global_by_current_bytes\n       GROUP BY SUBSTRING_INDEX(event_name,'/', 2 )\n       ORDER BY SUM(current_alloc) DESC;\n</code></pre> <p>\u5185\u5b58\u76f8\u5173\u53c2\u6570 </p> <p>\u5171\u4eab\u5185\u5b58</p> <pre><code>show variables where variable_name in ('innodb_buffer_pool_size','innodb_log_buffer_size','innodb_additional_mem_pool_size','key_buffer_size');\n</code></pre> <p>innodb_buffer_pool_size \u8be5\u90e8\u5206\u7f13\u5b58\u662f InnoDB \u5f15\u64ce\u6700\u91cd\u8981\u7684\u7f13\u5b58\u533a\u57df\uff0c\u662f\u901a\u8fc7\u5185\u5b58\u6765\u5f25\u8865\u7269\u7406\u6570\u636e\u6587\u4ef6\u7684\u91cd\u8981\u624b\u6bb5\uff0c\u5728\u4e91\u6570\u636e\u5e93 MySQL \u4e0a\u4f1a\u91c7\u7528\u5b9e\u4f8b\u89c4\u683c\u914d\u7f6e\u768450% - 80%\u4f5c\u4e3a\u8be5\u90e8\u5206\u5927\u5c0f\uff08\u4e0a\u56fe\u4e3a1000MB * 0.5 = 500MB\uff09\u3002\u5176\u4e2d\u4e3b\u8981\u5305\u542b\u6570\u636e\u9875\u3001\u7d22\u5f15\u9875\u3001undo \u9875\u3001insert buffer\u3001\u81ea\u9002\u5e94\u54c8\u5e0c\u7d22\u5f15\u3001\u9501\u4fe1\u606f\u4ee5\u53ca\u6570\u636e\u5b57\u5178\u7b49\u4fe1\u606f\u3002\u5728\u8fdb\u884c SQL \u8bfb\u548c\u5199\u7684\u64cd\u4f5c\u65f6\uff0c\u9996\u5148\u5e76\u4e0d\u662f\u5bf9\u7269\u7406\u6570\u636e\u6587\u4ef6\u64cd\u4f5c\uff0c\u800c\u662f\u5148\u5bf9 buffer_pool \u8fdb\u884c\u64cd\u4f5c\uff0c\u518d\u901a\u8fc7 checkpoint \u7b49\u673a\u5236\u5199\u56de\u6570\u636e\u6587\u4ef6\u3002\u8be5\u7a7a\u95f4\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u63d0\u5347\u6570\u636e\u5e93\u7684\u6027\u80fd\u3001\u52a0\u5feb SQL \u8fd0\u884c\u901f\u5ea6\uff0c\u7f3a\u70b9\u662f\u6545\u969c\u6062\u590d\u901f\u5ea6\u8f83\u6162\u3002</p> <p>innodb_log_buffer_size \u8be5\u90e8\u5206\u4e3b\u8981\u5b58\u653e redo log \u7684\u4fe1\u606f\uff0c\u5728\u4e91\u6570\u636e\u5e93 MySQL \u4e0a\u4f1a\u8bbe\u7f6e64MB\u7684\u5927\u5c0f\u3002InnoDB \u4f1a\u9996\u5148\u5c06 redo log \u5199\u5728\u8fd9\u91cc\uff0c\u7136\u540e\u6309\u7167\u4e00\u5b9a\u9891\u7387\u5c06\u5176\u5237\u65b0\u56de\u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002\u8be5\u7a7a\u95f4\u4e0d\u9700\u8981\u592a\u5927\uff0c\u56e0\u4e3a\u4e00\u822c\u60c5\u51b5\u4e0b\u8be5\u90e8\u5206\u7f13\u5b58\u4f1a\u4ee5\u8f83\u5feb\u9891\u7387\u5237\u65b0\u81f3 redo log\uff08Master Thread \u4f1a\u6bcf\u79d2\u5237\u65b0\u3001\u4e8b\u52a1\u63d0\u4ea4\u65f6\u4f1a\u5237\u65b0\u3001\u5176\u7a7a\u95f4\u5c11\u4e8e1/2\u65f6\u540c\u6837\u4f1a\u5237\u65b0\uff09\u3002</p> <p>innodb_additional_mem_pool_size \u8be5\u90e8\u5206\u4e3b\u8981\u5b58\u653e InnoDB \u5185\u7684\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u5728\u4e91\u6570\u636e\u5e93 MySQL \u4e2d\u7edf\u4e00\u8bbe\u7f6e\u4e3a8MB\u3002\u901a\u5e38\u662f\u5728 buffer_pool \u4e2d\u7533\u8bf7\u5185\u5b58\u7684\u65f6\u5019\u8fd8\u9700\u8981\u5728\u989d\u5916\u5185\u5b58\u4e2d\u7533\u8bf7\u7a7a\u95f4\u5b58\u50a8\u8be5\u5bf9\u8c61\u7684\u7ed3\u6784\u4fe1\u606f\u3002\u8be5\u5927\u5c0f\u4e3b\u8981\u4e0e\u8868\u6570\u91cf\u6709\u5173\uff0c\u8868\u6570\u91cf\u8d8a\u5927\u9700\u8981\u66f4\u5927\u7684\u7a7a\u95f4\u3002</p> <p>\u79c1\u6709\u5185\u5b58</p> <pre><code>show variables where variable_name in ('read_buffer_size','read_rnd_buffer_size','sort_buffer_size','join_buffer_size','binlog_cache_size','tmp_table_size');\n\n</code></pre> <p>read_buffer_size  \u5206\u522b\u5b58\u653e\u4e86\u5bf9\u987a\u5e8f\u626b\u63cf\u7684\u7f13\u5b58\uff0c\u5f53 thread \u8fdb\u884c\u987a\u5e8f\u626b\u63cf\u6570\u636e\u65f6\u4f1a\u9996\u5148\u626b\u63cf\u8be5 buffer \u7a7a\u95f4\u4ee5\u907f\u514d\u66f4\u591a\u7684\u7269\u7406\u8bfb\u3002</p> <p>read_rnd_buffer_size  \u5206\u522b\u5b58\u653e\u4e86\u5bf9\u968f\u673a\u626b\u63cf\u7684\u7f13\u5b58\uff0c\u5f53 thread \u8fdb\u884c\u968f\u673a\u626b\u63cf\u6570\u636e\u65f6\u4f1a\u9996\u5148\u626b\u63cf\u8be5 buffer \u7a7a\u95f4\u4ee5\u907f\u514d\u66f4\u591a\u7684\u7269\u7406\u8bfb\u3002</p> <p>sort_buffer_size  \u9700\u8981\u6267\u884c order by \u548c group by \u7684 SQL \u90fd\u4f1a\u5206\u914d sort_buffer\uff0c\u7528\u4e8e\u5b58\u50a8\u6392\u5e8f\u7684\u4e2d\u95f4\u7ed3\u679c\u3002\u5728\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5b58\u50a8\u91cf\u5927\u4e8e sort_buffer_size\uff0c\u5219\u4f1a\u5728\u78c1\u76d8\u751f\u6210\u4e34\u65f6\u8868\u4ee5\u5b8c\u6210\u64cd\u4f5c\u3002</p> <p>join_buffer_size  MySQL \u4ec5\u652f\u6301 nest loop \u7684 join \u7b97\u6cd5\uff0c\u5904\u7406\u903b\u8f91\u662f\u9a71\u52a8\u8868\u7684\u4e00\u884c\u548c\u975e\u9a71\u52a8\u8868\u8054\u5408\u67e5\u627e\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u5c06\u975e\u9a71\u52a8\u8868\u653e\u5165 join_buffer\uff0c\u4e0d\u9700\u8981\u8bbf\u95ee\u62e5\u6709\u5e76\u53d1\u4fdd\u62a4\u673a\u5236\u7684 buffer_pool\u3002</p> <p>binlog_cache_size  \u8be5\u533a\u57df\u7528\u6765\u7f13\u5b58\u8be5 thread \u7684 binlog \u65e5\u5fd7\uff0c\u5728\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u6709 commit \u4e4b\u524d\u4f1a\u5148\u5c06\u5176\u65e5\u5fd7\u5b58\u50a8\u4e8e binlog_cache \u4e2d\uff0c\u7b49\u5230\u4e8b\u52a1 commit \u540e\u4f1a\u5c06\u5176 binlog \u5237\u56de\u78c1\u76d8\u4e0a\u7684 binlog \u6587\u4ef6\u4ee5\u6301\u4e45\u5316\u3002</p> <p>tmp_table_size  \u4e0d\u540c\u4e8e\u4e0a\u9762\u5404\u4e2a session \u7ea7\u7684 buffer\uff0c\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e0a\u4fee\u6539\u3002\u8be5\u53c2\u6570\u662f\u6307\u7528\u6237\u5185\u5b58\u4e34\u65f6\u8868\u7684\u5927\u5c0f\uff0c\u5982\u679c\u8be5 thread \u521b\u5efa\u7684\u4e34\u65f6\u8868\u8d85\u8fc7\u5b83\u8bbe\u7f6e\u7684\u5927\u5c0f\u4f1a\u628a\u4e34\u65f6\u8868\u8f6c\u6362\u4e3a\u78c1\u76d8\u4e0a\u7684\u4e00\u5f20 MyISAM \u4e34\u65f6\u8868\u3002</p> <pre><code>set persist global_connection_memory_tracking = 1 ;\nshow global status like 'Global_connection_memory';\n\ntable_open_cache\n</code></pre> <p>performance_schema \u672c\u8eab\u5360\u7528\u7684\u5185\u5b58</p> <pre><code>show engine performance_schema status;\n</code></pre> <p>https://www.modb.pro/db/86827</p> <p>\u788e\u7247\u8868</p> <pre><code>\u5b58\u5728\u788e\u7247\u7684\u8868\nselect concat('optimize table ',table_schema,'.',table_name,';'), data_free, engine from information_schema.tables \nwhere data_free&gt;0 and engine !='MEMORY';\n\n\u6392\u5e8f\nSELECT table_schema, TABLE_NAME, concat(data_free/1024/1024, 'M') as data_free FROM `information_schema`.tables\nWHERE data_free &gt; 3 * 1024 * 1024 AND ENGINE = 'innodb' ORDER BY data_free DESC;\n\u5904\u7406\noptimize table xxxx_TABLES;\n\ngdb -q -batch -ex 'call malloc_stats()' -p  121357\n\ngdb --batch --pid 121357 --ex 'call malloc_trim(0)'\n\npmap  -x 121357 | sort -nrk3\n    Address\uff1a\u8868\u793a\u6b64\u5185\u5b58\u6bb5\u7684\u8d77\u59cb\u5730\u5740\n    Kbytes\uff1a\u8868\u793a\u6b64\u5185\u5b58\u6bb5\u7684\u5927\u5c0f(ps\uff1a\u8fd9\u662f\u865a\u62df\u5185\u5b58)\n    RSS\uff1a\u8868\u793a\u6b64\u5185\u5b58\u6bb5\u5b9e\u9645\u5206\u914d\u7684\u7269\u7406\u5185\u5b58\uff0c\u8fd9\u662f\u7531\u4e8eLinux\u662f\u5ef6\u8fdf\u5206\u914d\u5185\u5b58\u7684\uff0c\u8fdb\u7a0b\u8c03\u7528malloc\u65f6Linux\u53ea\u662f\u5206\u914d\u4e86\u4e00\u6bb5\u865a\u62df\u5185\u5b58\u5757\uff0c\u76f4\u5230\u8fdb\u7a0b\u5b9e\u9645\u8bfb\u5199\u6b64\u5185\u5b58\u5757\u4e2d\u90e8\u5206\u65f6\uff0cLinux\u4f1a\u901a\u8fc7\u7f3a\u9875\u4e2d\u65ad\u771f\u6b63\u5206\u914d\u7269\u7406\u5185\u5b58\u3002\n    Dirty\uff1a\u6b64\u5185\u5b58\u6bb5\u4e2d\u88ab\u4fee\u6539\u8fc7\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u4f7f\u7528mmap\u7cfb\u7edf\u8c03\u7528\u7533\u8bf7\u865a\u62df\u5185\u5b58\u65f6\uff0c\u53ef\u4ee5\u5173\u8054\u5230\u67d0\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4e0d\u5173\u8054\uff0c\u5f53\u5173\u8054\u4e86\u6587\u4ef6\u7684\u5185\u5b58\u6bb5\u88ab\u8bbf\u95ee\u65f6\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6b64\u6587\u4ef6\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\uff0c\u82e5\u6b64\u6bb5\u67d0\u4e00\u9875\u5185\u5b58\u6570\u636e\u540e\u88ab\u66f4\u6539\uff0c\u5373\u4e3aDirty\uff0c\u800c\u5bf9\u4e8e\u975e\u6587\u4ef6\u6620\u5c04\u7684\u533f\u540d\u5185\u5b58\u6bb5(anon)\uff0c\u6b64\u5217\u4e0eRSS\u76f8\u7b49\u3002\n    Mode\uff1a\u5185\u5b58\u6bb5\u662f\u5426\u53ef\u8bfb(r)\u53ef\u5199(w)\u53ef\u6267\u884c(x)\n    Mapping\uff1a\u5185\u5b58\u6bb5\u6620\u5c04\u7684\u6587\u4ef6\uff0c\u533f\u540d\u5185\u5b58\u6bb5\u663e\u793a\u4e3aanon\uff0c\u975e\u533f\u540d\u5185\u5b58\u6bb5\u663e\u793a\u6587\u4ef6\u540d(\u52a0-p\u53ef\u663e\u793a\u5168\u8def\u5f84)\u3002\n\n    \u68c0\u67e5\u4e00\u6bb5\u65f6\u95f4\u540e\u65b0\u589e\u4e86\u54ea\u4e9b\u5185\u5b58\u6bb5\uff0c\u6216\u54ea\u4e9b\u53d8\u5927\n\n    pmap -x 1 &gt; pmap-`date +%F-%H-%M-%S`.log\n\n    icdiff pmap-2023-07-27-09-46-36.log pmap-2023-07-28-09-29-55.log | less -SR\n</code></pre>"},{"location":"mysql/monitor/","title":"\u76d1\u63a7","text":"<p>mysql_exporter</p>"},{"location":"mysql/myshellMGR/","title":"mysql-shell \u7ba1\u7406\u7ec4\u590d\u5236","text":""},{"location":"mysql/myshellMGR/#_1","title":"\u5b89\u88c5","text":"<pre><code>sudo apt-get install mysql-shell\n</code></pre> <p>\u521b\u5efa\u8d85\u7ea7\u7528\u6237</p> <pre><code>create user administrator@'%' identified with 'caching_sha2_password'  by 'password';\ngrant all PRIVILEGES on *.* to administrator@'%' WITH GRANT OPTION;\nflush privileges;\nshow grants for administrator@'%';\n</code></pre>"},{"location":"mysql/myshellMGR/#_2","title":"\u521b\u5efa\u96c6\u7fa4","text":"<pre><code>\u521b\u5efa\u96c6\u7fa4\uff0c\u7b2c\u4e00\u4e2a\u8282\u70b9\nmysqlsh -uadministrator -ppassword -h 10.10.2.11 \n\nshell.options['dba.restartWaitTimeout']=300;\nvar cluster=dba.createCluster('YOURMGR',{disableClone:false});\n\u52a0\u5165\u8282\u70b9 1 \ndba.getCluster().addInstance('administrator:cluster_password@10.10.2.12:3306',{recoveryMethod:'clone'})\n\u52a0\u5165\u8282\u70b9 2\ndba.getCluster().addInstance('administrator:cluster_password@10.10.2.12:3306',{recoveryMethod:'clone'})\n</code></pre> <p>\u67e5\u770b\u72b6\u6001</p> <pre><code>dba.getCluster().status();\n</code></pre> <pre><code>mysql router \n# \u521b\u5efa\u914d\u7f6e\u6587\u4ef6\nmysqlrouter --bootstrap mysql_user@host:port  -d /etc/mysql/conf/router --name myrouter --force --user=mysql\n</code></pre> <pre><code># \u542f\u52a8router\ncd /etc/mysql/conf/router &amp;&amp; sh start.sh\n</code></pre> <pre><code>https://github.com/rluisr/mysqlrouter_exporter\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879apparmor aa-teardown</p> <pre><code># \u9a8c\u8bc1\nmysql -h xxx -P 6446 -pmysql_4U\n\nmysql -h xxx -P 6447 -pmysql_4U\n</code></pre> <pre><code>#mysqlsh \u914d\u7f6e\u9a8c\u8bc1\uff0c\u4fee\u590d\ndba.checkInstanceConfiguration();\ndba.configureInstance();\n</code></pre>"},{"location":"mysql/myshellMGR/#_3","title":"\u6269\u5bb9\u8282\u70b9","text":"<p>\u67e5\u770b\u72b6\u6001</p> <pre><code>dba.getCluster().status();\n</code></pre> <p>\u52a0\u5165\u524d\u9a8c\u8bc1\u96c6\u7fa4</p> <pre><code>dba.checkInstanceConfiguration('user@10.10.2.13:3306');\n</code></pre> <p>\u52a0\u5165\u524d\u914d\u7f6e\u96c6\u7fa4</p> <pre><code>dba.configureInstance('user@10.10.2.13:3306');\n</code></pre> <p>\u52a0\u5165\u96c6\u7fa4</p> <pre><code>dba.getCluster().addInstance('user@10.10.2.13:3306');\n</code></pre> <p>\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4 </p> <pre><code>cluster.rejoinInstance() \n</code></pre>"},{"location":"mysql/myshellMGR/#_4","title":"\u7f29\u5bb9","text":"<pre><code>cluster.removeInstance(\"root@instanceWithOldUUID:3306\", {force: true})\ncluster.rescan()\n</code></pre>"},{"location":"mysql/myshellMGR/#_5","title":"\u91cd\u542f\u96c6\u7fa4","text":"<p>\u5f53\u6240\u6709\u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\u90fd\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u65f6</p> <pre><code>dba.rebootClusterFromCompleteOutage();\n</code></pre> <p>API</p> <pre><code>https://dev.mysql.com/doc/dev/mysqlsh-api-python/8.0/\n</code></pre>"},{"location":"mysql/myshellMGR/#_6","title":"\u8111\u88c2\u573a\u666f","text":"<p>\u5f53\u96c6\u7fa4\u4e2d\u6709\u90e8\u5206\u8282\u70b9\u51fa\u73b0UNREACHABLE\u72b6\u6001\uff0c\u6b64\u65f6\u96c6\u7fa4\u65e0\u6cd5\u505a\u51fa\u51b3\u7b56\uff0c\uff0c\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u5c40\u9762\uff0c\u6b64\u65f6\u53ea\u5269\u4e0b\u4e00\u4e2a\u6d3b\u8dc3\u8282\u70b9\uff0c\u6b64\u8282\u70b9\u53ea\u80fd\u63d0\u4f9b\u67e5\u8be2\uff0c\u65e0\u6cd5\u5199\u5165\uff0c\u6267\u884c\u5199\u5165\u64cd\u4f5c\u4f1ahang\u4f4f\u3002</p> <pre><code>js&gt; cluster.status()\n{\n    \"clusterName\": \"mycluster\",\n    \"defaultReplicaSet\": {\n        \"name\": \"default\",\n        \"primary\": \"192.168.33.21:3306\",\n        \"status\": \"NO_QUORUM\",\n        \"statusText\": \"Cluster has no quorum as visible from '192.168.33.21:3306' and cannot process write transactions. 2 members are not active\",\n        \"topology\": {\n            \"192.168.33.21:3306\": {\n                \"address\": \"192.168.33.21:3306\",\n                \"mode\": \"R/W\",\n                \"readReplicas\": {},\n                \"role\": \"HA\",\n                \"status\": \"ONLINE\"\n            },\n            \"192.168.33.22:3306\": {\n                \"address\": \"192.168.33.22:3306\",\n                \"mode\": \"R/O\",\n                \"readReplicas\": {},\n                \"role\": \"HA\",\n                \"status\": \"UNREACHABLE\"\n            },\n            \"192.168.33.23:3306\": {\n                \"address\": \"192.168.33.23:3306\",\n                \"mode\": \"R/O\",\n                \"readReplicas\": {},\n                \"role\": \"HA\",\n                \"status\": \"(MISSING)\"\n            }\n        }\n    }\n}\n</code></pre> <p>\u4fee\u590d\u8fd9\u79cd\u72b6\u6001\uff0c\u9700\u8981\u6267\u884cforceQuorumUsingPartitionOf\u6307\u5b9a\u5f53\u524d\u6d3b\u8dc3\u8282\u70b9(\u5982\u679c\u662f\u591a\u4e2a\u5219\u9009\u62e9primary node)\uff0c\u6b64\u65f6\u6d3b\u8dc3\u8282\u70b9\u53ef\u4ee5\u63d0\u4f9b\u8bfb\u5199\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u5176\u4ed6\u8282\u70b9\u52a0\u5165\u6b64\u96c6\u7fa4\u3002</p> <pre><code>js&gt; cluster.forceQuorumUsingPartitionOf('root@192.168.33.21:3306')\n</code></pre> <p>\u8282\u70b9\u6709\u54ea\u72b6\u6001</p> <ul> <li>ONLINE - \u8282\u70b9\u72b6\u6001\u6b63\u5e38\u3002</li> <li>OFFLINE - \u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u4f46\u6ca1\u6709\u52a0\u5165\u4efb\u4f55Cluster\u3002</li> <li>RECOVERING - \u5b9e\u4f8b\u5df2\u52a0\u5165Cluster\uff0c\u6b63\u5728\u540c\u6b65\u6570\u636e\u3002</li> <li>ERROR - \u540c\u6b65\u6570\u636e\u53d1\u751f\u5f02\u5e38\u3002</li> <li>UNREACHABLE - \u4e0e\u5176\u4ed6\u8282\u70b9\u901a\u8baf\u4e2d\u65ad\uff0c\u53ef\u80fd\u662f\u7f51\u7edc\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u8282\u70b9crash\u3002</li> <li>MISSING \u8282\u70b9\u5df2\u52a0\u5165\u96c6\u7fa4\uff0c\u4f46\u672a\u542f\u52a8group replication</li> </ul> <p>\u96c6\u7fa4\u6709\u54ea\u4e9b\u72b6\u6001</p> <ul> <li>OK \u2013 \u6240\u6709\u8282\u70b9\u5904\u4e8eonline\u72b6\u6001\uff0c\u6709\u5197\u4f59\u8282\u70b9\u3002</li> <li>OK_PARTIAL \u2013 \u6709\u8282\u70b9\u4e0d\u53ef\u7528\uff0c\u4f46\u4ecd\u6709\u5197\u4f59\u8282\u70b9\u3002</li> <li>OK_NO_TOLERANCE \u2013 \u6709\u8db3\u591f\u7684online\u8282\u70b9\uff0c\u4f46\u6ca1\u6709\u5197\u4f59\uff0c\u4f8b\u5982\uff1a\u4e24\u4e2a\u8282\u70b9\u7684Cluster\uff0c\u5176\u4e2d\u4e00\u4e2a\u6302\u4e86\uff0c\u96c6\u7fa4\u5c31\u4e0d\u53ef\u7528\u4e86\u3002</li> <li>NO_QUORUM \u2013 \u6709\u8282\u70b9\u5904\u4e8eonline\u72b6\u6001\uff0c\u4f46\u8fbe\u4e0d\u5230\u6cd5\u5b9a\u8282\u70b9\u6570\uff0c\u6b64\u72b6\u6001\u4e0bCluster\u65e0\u6cd5\u5199\u5165\uff0c\u53ea\u80fd\u8bfb\u53d6\u3002</li> <li>UNKNOWN \u2013 \u4e0d\u662fonline\u6216recovering\u72b6\u6001\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5176\u4ed6\u5b9e\u4f8b\u67e5\u770b\u72b6\u6001\u3002</li> <li>UNAVAILABLE \u2013 \u7ec4\u5185\u8282\u70b9\u5168\u662foffline\u72b6\u6001\uff0c\u4f46\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5b9e\u4f8b\u521a\u91cd\u542f\u8fd8\u6ca1\u52a0\u5165Cluster\u3002</li> </ul> <p>\u7ec4\u590d\u5236\u4fe1\u606f\u6301\u4e45\u5316 \u5b58\u50a8\u4f4d\u7f6e <code>mysqld-auto.cnf</code> </p> \u67e5\u770b\u4ee3\u7801 <pre><code>mysql_static_variables\": {\n        \"group_replication_ssl_mode\": {\n            \"Value\": \"REQUIRED\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162400774\n            }\n        },\n        \"group_replication_group_name\": {\n            \"Value\": \"f5af33a9-68cb-11ef-8fbc-2a9c829ebee5\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162386269\n            }\n        },\n        \"group_replication_group_seeds\": {\n            \"Value\": \"helmbroker-my01-1:3306,helmbroker-my01-2:3306\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712217411206\n            }\n        },\n        \"group_replication_ip_allowlist\": {\n            \"Value\": \"AUTOMATIC\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162406505\n            }\n        },\n        \"group_replication_local_address\": {\n            \"Value\": \"helmbroker-my01-0:3306\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162402566\n            }\n        },\n        \"group_replication_member_weight\": {\n            \"Value\": \"50\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162410144\n            }\n        },\n        \"group_replication_start_on_boot\": {\n            \"Value\": \"ON\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162417423\n            }\n        },\n        \"group_replication_autorejoin_tries\": {\n            \"Value\": \"3\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162415523\n            }\n        },\n        \"group_replication_recovery_use_ssl\": {\n            \"Value\": \"ON\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162396737\n            }\n        },\n        \"group_replication_view_change_uuid\": {\n            \"Value\": \"f5af3c16-68cb-11ef-8fbc-2a9c829ebee5\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162389707\n            }\n        },\n        \"group_replication_exit_state_action\": {\n            \"Value\": \"READ_ONLY\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162408402\n            }\n        },\n        \"group_replication_communication_stack\": {\n            \"Value\": \"MYSQL\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162419318\n            }\n        },\n        \"group_replication_paxos_single_leader\": {\n            \"Value\": \"OFF\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162422954\n            }\n        },\n        \"group_replication_single_primary_mode\": {\n            \"Value\": \"ON\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162394640\n            }\n        },\n        \"group_replication_member_expel_timeout\": {\n            \"Value\": \"5\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162413567\n            }\n        },\n        \"group_replication_transaction_size_limit\": {\n            \"Value\": \"150000000\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162421121\n            }\n        },\n        \"group_replication_recovery_ssl_verify_server_cert\": {\n            \"Value\": \"OFF\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162398833\n            }\n        },\n        \"group_replication_enforce_update_everywhere_checks\": {\n            \"Value\": \"OFF\",\n            \"Metadata\": {\n                \"Host\": \"\",\n                \"User\": \"root\",\n                \"Timestamp\": 1726712162392318\n            }\n        }\n    }\n</code></pre>"},{"location":"mysql/mysqlslap/","title":"mysqlslap","text":""},{"location":"mysql/mysqlslap/#sql","title":"\u81ea\u5b9a\u4e49sql","text":"<pre><code># cat create.sql\nCREATE TABLE IF NOT EXISTS simple_table (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(100),\n    age INT, \n    email VARCHAR(100)\n);\n\nINSERT INTO simple_table (name, age, email) VALUES ('\u5f20\u4e09', 25, 'zhangsan@example.com');\nINSERT INTO simple_table (name, age, email) VALUES ('\u674e\u56db', 28, 'lisi@example.com');\nINSERT INTO simple_table (name, age, email) VALUES ('\u738b\u4e94', 22, 'wangwu@example.com');\n</code></pre> <pre><code># cat query.sql\nselect * from simple_table;\n</code></pre>"},{"location":"mysql/mysqlslap/#_1","title":"\u538b\u6d4b","text":"<pre><code>mysqlslap --delimiter=\";\" --concurrency=50 --iterations=10 --engine=innodb --create-schema=mydb \\\n--create=create.sql --query=query.sql ENGINE=INNODB  -uroot -pxxxx -h xxx\n</code></pre>"},{"location":"postgres/FunctionsandOperators/","title":"\u65b9\u6cd5\u548c\u51fd\u6570","text":""},{"location":"postgres/FunctionsandOperators/#_1","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f","text":"<p>https://www.postgresql.org/docs/10/functions-conditional.html</p> <p>postgresql\u652f\u6301CASE,COALESCE,NULLIF,GREATEST,LEAST\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0c\u4f7f\u7528\u5b83\u4eec\u6709\u65f6\u5019\u53ef\u4ee5\u7b80\u5316\u8bb8\u591a\u529f\u80fd\u5b9e\u73b0\u3002</p>"},{"location":"postgres/FunctionsandOperators/#case","title":"CASE","text":"<p>CASE\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684if/else\u7b49\uff0c\u5f53\u7b26\u5408\u4e0d\u540c\u6761\u4ef6\u65f6\u5219\u8fdb\u884c\u4e0d\u540c\u7684\u8fd0\u7b97</p> <p>tbl_001\u8868</p> <pre><code>create table tbl_001(id int,name varchar(32),sex varchar(1));\n\ninsert into tbl_001 values(1,'\u5f20\u4e09','m'),(2,'\u674e\u56db','m'),(3,'\u738b\u4e94','f');\n</code></pre> <p>\u6d4b\u8bd5</p> <pre><code>\u7b80\u5355\u5e94\u7528\npostgres=# select case when sex = 'm' then '\u7537' when sex = 'f' then '\u5973' else 'O'  end as sex from tbl_001 ;\n sex \n-----\n \u7537\n \u7537\n \u5973\n(3 rows)\n\n\u7edf\u8ba1\u7537\u5973\u4eba\u6570\npostgres=# select count(sex) as \u7537 from tbl_001 where sex = 'm';\n \u7537 \n----\n  2\n(1 row)\n\npostgres=# select count(sex) as \u5973 from tbl_001 where sex = 'f';\n \u5973 \n----\n  1\n(1 row)\n\n\u4f7f\u7528case \u4e00\u6761\u641e\u5b9a\nselect sum(case when sex = 'm' then 1 else 0 end) as \u7537, sum(case when sex = 'f' then 1 else 0 end) as \u5973 from tbl_001 ;\n \u7537 | \u5973 \n----+----\n  2 |  1\n(1 row)\n\n</code></pre>"},{"location":"postgres/FunctionsandOperators/#coalesce","title":"COALESCE","text":"<pre><code>COALESCE(value [, ...])\n</code></pre> <p>\u8fd4\u56de\u7b2c\u4e00\u4e2a\u975enull</p> <pre><code>postgres=# select coalesce(null,null,1,2,3);\n coalesce \n----------\n        1\n(1 row)\n\npostgres=# select coalesce(null,null,'a','b','c');\n coalesce \n----------\n a\n(1 row)\n\n\nselect coalesce(extract(epoch from max(age(now(), query_start))), 0) from pg_stat_activity where wait_event is not null;\n\n</code></pre>"},{"location":"postgres/FunctionsandOperators/#nullif","title":"NULLIF","text":"<pre><code>NULLIF(value1, value2)\n</code></pre> <p>value1 \u548c value2 \u76f8\u7b49\u8fd4\u56denull \u5426\u5219\u8fd4\u56de value1</p> <pre><code>postgres=# select nullif(1,1),nullif(1,2);\n nullif | nullif \n--------+--------\n        |      1\n(1 row)\n</code></pre>"},{"location":"postgres/FunctionsandOperators/#greatest-and-least","title":"GREATEST and LEAST","text":"<p>\u5206\u522b\u8fd4\u56de\u6700\u5927\u548c\u6700\u5c0f\u503c</p> <pre><code>postgres=# select greatest(1,2,3),greatest('a','b','c');\n greatest | greatest \n----------+----------\n        3 | c\n(1 row)\n\npostgres=# select least(1,2,3),least('a','b','c');\n least | least \n-------+-------\n     1 | a\n(1 row)\n</code></pre>"},{"location":"postgres/FunctionsandOperators/#_2","title":"\u65f6\u95f4\u7c7b\u578b","text":"<p>\u7eaa\u5143\uff0cutc\u65f6\u95f4epoch</p> <pre><code># t\npostgres=# select extract(epoch from now());\n    date_part     \n------------------\n 1586846074.40049\n(1 row)\n\npostgres=# select extract(epoch from timestamp without time zone '1970-01-01 01:00:00');\n date_part \n-----------\n      3600\n(1 row)\n\npostgres=# SELECT TIMESTAMP WITH TIME ZONE 'epoch' + 1586846074.40049 * INTERVAL '1 second' as tsp;\n             tsp              \n------------------------------\n 2020-04-14 14:34:34.40049+08\n(1 row)\n</code></pre> <p>\u65f6\u533a</p> <pre><code>#\u5f53\u524d\u65f6\u533a\npostgres=# show timezone;\n TimeZone \n----------\n PRC\n(1 row)\n\n#\u7cfb\u7edf\u652f\u6301\u7684\u65f6\u533a\npostgres=# select * from pg_timezone_names; \n\n#\u65f6\u533a\npostgres=# select now()::timestamp with time zone, now()::timestamp without time zone;\n              now              |            now             \n-------------------------------+----------------------------\n 2020-04-14 15:44:39.501691+08 | 2020-04-14 15:44:39.501691\n(1 row)\n\n#\u65f6\u533a\u8f6c\u6362\npostgres=# select '2020-04-14 09:07:30.816885+08' at time zone 'prc';\n          timezone          \n----------------------------\n 2020-04-14 09:07:30.816885\n(1 row)\n\npostgres=# select '2016-02-03 09:07:30.816885+08' at time zone 'pst';\n          timezone          \n----------------------------\n 2016-02-02 17:07:30.816885\n</code></pre> <p>\u6ca1\u6709\u65f6\u533a\u4ee3\u8868\u7684\u662f\u7edd\u5bf9\u65f6\u95f4\uff0cabsolute timestamp\uff0c\u5373 UTC (UTC+0) \u65f6\u95f4\u3002</p> <p>\u5e26\u7740\u65f6\u533a\u7684\u4ee3\u8868\u76f8\u5bf9\u65f6\u95f4\uff0crelative timestamp\uff0c\u5373\u5f53\u5730\u65f6\u95f4\uff0c\u5982\u5317\u4eac\u7684\u5f53\u5730\u65f6\u95f4\u662f UTC+8 \u7684\u65f6\u95f4\u3002</p> <p>\u4f7f\u7528\u7684\u4e00\u4e2a\u6700\u4f73\u5b9e\u8df5\u662f\u65f6\u95f4\u7c7b\u578b\u90fd\u8bbe\u4e3a timestamp with time zone \u7c7b\u578b\uff0c\u53ea\u6709\u5728\u6839\u636e timestamp \u8fdb\u884c partition \u65f6\u624d\u4f7f\u7528 timestamp without time zone \u7c7b\u578b\uff0c</p> <p>\u56e0\u4e3a partition \u5fc5\u987b\u4f7f\u7528 immutable \u6570\u636e (\u5373\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6570\u636e\u53d6\u51fa\u6765\u90fd\u4e00\u6837)\uff0c\u800c timestamp with time zone \u7684\u6570\u636e\u503c\u4e0e postgres \u914d\u7f6e\u7684 timezone \u6709\u5173\u3002</p> <p>\u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u7684\u533a\u522b\u662f:</p> <p>\u4ee5\u5f53\u5730\u65f6\u95f4\u5b58\u50a8\u6570\u636e\u5230 timestamp with time zone \u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0cpostgres \u5e95\u5c42\u4f1a\u4ee5 UTC \u65f6\u95f4\u5b58\u50a8\uff0c\u5c55\u793a\u6570\u636e\u65f6\u4f1a\u6839\u636e postgres \u8bbe\u7f6e\u7684 timezone \u663e\u793a\u4e3a\u5f53\u65f6\u65f6\u95f4\u3002</p> <p>\u4ee5\u5f53\u5730\u65f6\u95f4\u5b58\u50a8\u6570\u636e\u5230 timestamp without time zone \u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0cpostgres \u5e95\u5c42\u4ee5\u8f93\u5165\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8\uff0c\u5c55\u793a\u65f6\u4f1a\u539f\u6837\u5c55\u793a\uff0c\u4e0e postgres \u8bbe\u7f6e\u7684\u65f6\u533a\u65e0\u5173\u3002</p> <p>\u65f6\u95f4\u6233\u52a0\u51cf</p> <pre><code>postgres=# select date '2016-02-02 10:00:00'+ interval '10 minutes'; \n</code></pre> <p>\u65f6\u95f4\u6233\u683c\u5f0f\u5316</p> <pre><code>postgres=# select to_char(now(),'YYYY-MM-DD hh24:mi:ss');\n       to_char       \n---------------------\n 2020-04-14 16:14:29\n(1 row)\n\npostgres=# select to_timestamp('2020-04-14 16:14:29','YYYY-MM-DD hh24:mi:ss');\n      to_timestamp      \n------------------------\n 2020-04-14 16:14:29+08\n(1 row)\n</code></pre> <p>\u65f6\u95f4\u6bd4\u8f83</p> <pre><code>select current_date &lt;= to_date('2018-03-12 18:47:35','yyyy-MM-dd hh24:mi:ss');\n\nselect current_timestamp &lt;= to_timestamp('2018-03-12 18:47:35','yyyy-MM-dd hh24:mi:ss');\n</code></pre> <pre><code>--\u521b\u5efa\u968f\u673a\u65e5\u671f\u65f6\u95f4\u51fd\u6570       \nCREATE OR REPLACE FUNCTION rand_date_time(start_date date, end_date date)\n RETURNS TIMESTAMP AS $$  \nDECLARE  \n    interval_days integer;  \n    random_seconds integer;  \n    random_dates integer;  \n    random_date date;  \n    random_time time;\nBEGIN  \n    interval_days := end_date - start_date;  \n    random_dates:= trunc(random()*interval_days);\n    random_date := start_date + random_dates; \n    random_seconds:= trunc(random()*3600*24); \n    random_time:=' 00:00:00'::time+(random_seconds || ' second')::INTERVAL;\n    RETURN random_date +random_time;  \nEND;   \n$$  \nLANGUAGE plpgsql;\n</code></pre>"},{"location":"postgres/FunctionsandOperators/#json","title":"JSON \u7c7b\u578b","text":"<p>postgresql\u652f\u6301\u4e24\u79cdjson\u6570\u636e\u7c7b\u578b\uff1ajson\u548cjsonb\uff0c\u800c\u4e24\u8005\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u6548\u7387,json\u662f\u5bf9\u8f93\u5165\u7684\u5b8c\u6574\u62f7\u8d1d\uff0c\u4f7f\u7528\u65f6\u518d\u53bb\u89e3\u6790\uff0c\u6240\u4ee5\u5b83\u4f1a\u4fdd\u7559\u8f93\u5165\u7684\u7a7a\u683c\uff0c\u91cd\u590d\u952e\u4ee5\u53ca\u987a\u5e8f\u7b49\u3002</p> <p>\u800cjsonb\u662f\u89e3\u6790\u8f93\u5165\u540e\u4fdd\u5b58\u7684\u4e8c\u8fdb\u5236\uff0c\u5b83\u5728\u89e3\u6790\u65f6\u4f1a\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u7a7a\u683c\u548c\u91cd\u590d\u7684\u952e\uff0c\u987a\u5e8f\u548c\u8f93\u5165\u53ef\u80fd\u4e5f\u4e0d\u76f8\u540c\u3002\u4f7f\u7528\u65f6\u4e0d\u7528\u518d\u6b21\u89e3\u6790\u3002</p> <p>\u4e24\u8005\u5bf9\u91cd\u590d\u952e\u7684\u5904\u7406\u90fd\u662f\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u6548\u7387\u7684\u5dee\u522b\uff1ajson\u7c7b\u578b\u5b58\u50a8\u5feb\uff0c\u4f7f\u7528\u6162\uff0cjsonb\u7c7b\u578b\u5b58\u50a8\u7a0d\u6162\uff0c\u4f7f\u7528\u8f83\u5feb\u3002</p> <pre><code>postgres=#  SELECT '{\"bar\": \"baz\", \"balance\":      7.77, \"active\":false}'::json;\n                         json                         \n------------------------------------------------------\n {\"bar\": \"baz\", \"balance\":      7.77, \"active\":false}\n(1 row)\n\npostgres=#  SELECT '{\"bar\": \"baz\", \"balance\":      7.77, \"active\":false}'::jsonb;\n                      jsonb                       \n--------------------------------------------------\n {\"bar\": \"baz\", \"active\": false, \"balance\": 7.77}\n(1 row)\n\n</code></pre> <p>\u6d4b\u8bd5\u8868</p> <pre><code>create table api(jdoc jsonb);\n\ninsert into api values('{\n\"guid\": \"9c36adc1-7fb5-4d5b-83b4-90356a46061a\",\n\"name\": \"Angela Barton\",\n\"is_active\": true,\n\"company\": \"Magnafone\",\n\"address\": \"178 Howard Place, Gulf, Washington, 702\",\n\"registered\": \"2009-11-07T08:53:22 +08:00\",\n\"latitude\": 19.793713,\n\"longitude\": 86.513373,\n\"tags\": [\n\"enim\",\n\"aliquip\",\n\"qui\"\n]}');\n</code></pre> <pre><code>postgres=# SELECT jdoc-&gt;'guid', jdoc-&gt;'name' FROM api WHERE jdoc @&gt; '{\"company\": \"Magnafone\"}';\n                ?column?                |    ?column?     \n----------------------------------------+-----------------\n \"9c36adc1-7fb5-4d5b-83b4-90356a46061a\" | \"Angela Barton\"\n</code></pre> <p>jsonb\u7f3a\u7701\u7684GIN\u64cd\u4f5c\u7b26\u7c7b\u652f\u6301\u4f7f\u7528@&gt;\u3001?\u3001?&amp;\u548c?|\u64cd\u4f5c\u7b26\u67e5\u8be2\uff0c\u5728api\u7684jdoc\u4e0a\u521b\u5efa\u4e00\u4e2agin\u7d22\u5f15\u3002</p> <pre><code>test=# CREATE INDEX idxgin ON api USING gin (jdoc);\nCREATE INDEX\n</code></pre> <p>json\u548cjsonb\u7684\u64cd\u4f5c\u7b26</p> <p>https://www.postgresql.org/docs/9.6/functions-json.html</p>"},{"location":"postgres/FunctionsandOperators/#_3","title":"\u6570\u7ec4\u51fd\u6570\u548c\u64cd\u4f5c\u7b26","text":"<p>http://postgres.cn/docs/11/functions-array.html</p>"},{"location":"postgres/adlock/","title":"\u54a8\u8be2\u9501 adlock","text":"<p>https://github.com/digoal/blog/blob/master/201805/20180524_02.md</p>"},{"location":"postgres/adlock/#_1","title":"\u884c\u7ea7\u9501","text":"<pre><code>select .. for update \n\nselect .. for update skip locked\n\nselect .. for share\n</code></pre>"},{"location":"postgres/archive/","title":"Archive wal\u5f52\u6863","text":""},{"location":"postgres/archive/#_1","title":"\u4ecb\u7ecd","text":"<p>\u6240\u8c13WAL\u65e5\u5fd7\u5f52\u6863\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u5728\u7ebf\u7684WAL\u65e5\u5fd7\u5907\u4efd\u51fa\u6765\u3002</p>"},{"location":"postgres/archive/#_2","title":"\u914d\u7f6e","text":"<p>vi postgresql.conf</p> <pre><code>wal_level='replica'\n\n# - Archiving -\n\narchive_mode = on               # enables archiving; off, on, or always\n                                # (change requires restart)\narchive_command = 'test ! -f /mnt/backup/%f &amp;&amp; cp %p /mnt/backup/%f'\n                                # command to use to archive a logfile segment\n                                # placeholders: %p = path of file to archive\n                                #               %f = file name only\n                                # e.g. 'test ! -f /mnt/server/archivedir/%f &amp;&amp; cp %p /mnt/server/archivedir/%f'\n#archive_timeout = 0            # force a logfile segment switch after this\n                                # number of seconds; 0 disables\n\n</code></pre>"},{"location":"postgres/archive/#_3","title":"\u53c2\u6570\u8bf4\u660e","text":"<ul> <li>wal_level archive \u6216\u66f4\u9ad8\u7ea7\u522b</li> <li>archive_mode on \u5f00\u542f\u5f52\u6863\u6a21\u5f0f\uff0calways \u4e3b\u4ece\u6a21\u5f0f\u65f6\uff0c\u4ece\u5e93\u4e5f\u5f00\u542f\u5f52\u6863\u6a21\u5f0f\u3002\u9700\u8981\u91cd\u542f\u6570\u636e\u5e93</li> <li>archive_command \u5f52\u6863\u65f6\u89e6\u53d1\u7684\u547d\u4ee4\u6216\u811a\u672c\uff0c \u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8\u6570\u636e\u5e93\u3002 systemctl reload postgresql-10 \u5373\u53ef\u3002</li> <li>archive_timeout \u53ef\u4ee5\u7406\u89e3\u4e3a\u8d85\u8fc7\u6307\u5b9a\u65f6\u95f4\u5f3a\u5236\u6267\u884c  select pg_switch_wal(); \u573a\u666f\uff0c \u6570\u636e\u5e93\u4e0d\u662f\u5f88\u6d3b\u8dc3\uff0c\u6570\u636e\u5e93wal\u65e5\u5fd7\u4ea7\u751f\u7684\u8fc7\u6162\u65f6\u3002</li> </ul>"},{"location":"postgres/archive/#_4","title":"\u5f52\u6863\u89e6\u53d1\u6761\u4ef6\u8bf4\u660e\uff1a","text":"<p>1 \u624b\u52a8\u6267\u884c select pg_switch_wal(); 2 WAL \u65e5\u5fd7\u5199\u6ee1\u540e\u89e6\u53d1\u5f52\u6863 WAL \u65e5\u5fd7\u6587\u4ef6\u9ed8\u8ba4\u4e3a 16MB\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728\u7f16\u8bd1 PostgreSQL \u65f6\u901a\u8fc7\u53c2\u6570 \u201c\u2013with-wal-segsize\u201d \u66f4\u6539\uff0c\u7f16\u8bd1\u540e\u4e0d\u80fd\u4fee\u6539\u3002     3 \u5982\u679c\u8bbe\u7f6e archive_timeout\uff0c \u8d85\u65f6\u89e6\u53d1\u3002   </p>"},{"location":"postgres/archive/#_5","title":"\u5f52\u6863\u5907\u4efd\u8bf4\u660e\uff1a","text":"<p>\u5728\u6570\u636e\u5e93data\u76ee\u5f55\u7684pg_wal\u6587\u4ef6\u5939\u4e2d\u5b58\u653e\u7740\u6211\u4eec\u9700\u8981\u5907\u4efd\u7684wal\u6587\u4ef6\uff0c \u5176\u4e2d archive_status\u6587\u4ef6\u5939\u91cc\u9762\u5b58\u653e\u7684\u662f\u72b6\u6001\u6587\u4ef6\uff0c\u53ef\u4ee5\u5f52\u6863\u7684\u6807\u8bb0\u4e3aready\uff0c\u5f52\u6863\u540e\u4e3adone</p>"},{"location":"postgres/archive/#_6","title":"\u7b80\u5355\u5c1d\u8bd5","text":"<p>\u521b\u5efa\u5907\u4efd\u5b58\u50a8\u76ee\u5f55</p> <pre><code>mkdir /mnt/backup/\nchown postgres:postgres /mnt/backup/\nchmod 0700 /mnt/backup/\n</code></pre> <p>\u914d\u7f6e\u6570\u636e\u5e93</p> <pre><code>wal_level='replica'\narchive_mode = on\narchive_command = 'test ! -f /mnt/backup/%f &amp;&amp; cp %p /mnt/backup/%f'\n</code></pre> <p>\u91cd\u542f\u6216reload \u4f7f\u914d\u7f6e\u751f\u6548</p> <p>\u624b\u52a8\u89e6\u53d1,\u67e5\u770b\u7ed3\u679c  select pg_switch_wal(); </p> <p>\u5982\u679c\u9047\u5230\u95ee\u9898\u7ed3\u5408\u67e5\u770b\u6570\u636e\u5e93\u65e5\u5fd7</p> <p>\u67e5\u770b\u5f52\u6863\u72b6\u6001</p> <pre><code>postgres=# select * from pg_stat_archiver ;  \n archived_count |    last_archived_wal     |      last_archived_time       | failed_count |     last_failed_wal      |       last_failed_time        |         stats_reset          \n----------------+--------------------------+-------------------------------+--------------+--------------------------+-------------------------------+------------------------------\n             64 | 00000001000000C3000000A6 | 2019-03-15 09:23:46.991612+08 |           27 | 00000001000000C30000006B | 2019-03-14 14:05:04.921754+08 | 2019-03-07 10:08:45.58083+08\n</code></pre>"},{"location":"postgres/archive/#_7","title":"\u5b9e\u9645\u5e94\u7528","text":"<p>\u76ee\u6807\uff1a\u6309\u65e5\u671f\u5b58\u653ewal\u65e5\u5fd7\u5230/mnt/archdir/</p> <p>\u5f52\u6863\u811a\u672c</p> <pre><code>vi archive.sh     \n#!/bin/bash    \n\nexport LANG=en_US.utf8    \nexport DATE=`date +\"%Y%m%d\"`    \n\nBASEDIR=\"/mnt/archdir\"    \n\nif [ ! -d $BASEDIR/$DATE ]; then    \n  mkdir -p $BASEDIR/$DATE    \n  if [ ! -d $BASEDIR/$DATE ]; then    \n    echo \"error mkdir -p $BASEDIR/$DATE\"    \n    exit 1    \n  fi    \nfi    \n\ncp $1 $BASEDIR/$DATE/$2    \nif [ $? -eq 0 ]; then    \n  exit 0    \nelse    \n  echo -e \"cp $1 $BASEDIR/$DATE/$2 error\"    \n  exit 1    \nfi    \n\necho -e \"backup failed\"    \nexit 1    \n</code></pre> <p>\u6743\u9650</p> <pre><code>chmod 700 archive.sh  \n</code></pre> <p>\u914d\u7f6e\u8c03\u7528\u547d\u4ee4</p> <pre><code>archive_command = 'archive.sh %p %f'  \n</code></pre> <p>\u91cd\u65b0\u52a0\u8f7d\u751f\u6548</p> <pre><code>systemctl reload postgresql-10\n</code></pre>"},{"location":"postgres/archive/#_8","title":"\u6269\u5c55\u9605\u8bfb","text":"<p>\u5982\u4f55\u5220\u9664wal\u6587\u4ef6</p> <pre><code>#\u5207\u6362\u5230\u6570\u636e\u5b58\u653e\u76ee\u5f55\ncd /var/lib/pgsql/10/data/\n#\u67e5\u770b\u6570\u636e\u5e93\u5f53\u524d\u72b6\u6001\n/usr/pgsql-10/bin/pg_controldata .\n#\u6839\u636e\u5f53\u524d\u72b6\u6001\u5220\u9664\u65e0\u7528wal\n/usr/pgsql-10/bin/pg_archivecleanup -d pg_wal/ 00000001000000C30000006D\n</code></pre>"},{"location":"postgres/auto_vacuum_trigger/","title":"auto vacuum \u89e6\u53d1\u673a\u5236","text":""},{"location":"postgres/auto_vacuum_trigger/#_1","title":"\u6570\u636e\u5e93\u81ea\u52a8\u5783\u573e\u56de\u6536\u89e6\u53d1\u6761\u4ef6\u5206\u6790","text":"<p>\u5728postgres \u4e2d \u5783\u573e\u56de\u6536\u7684\u91cd\u8981\u610f\u4e49\u53ca\u5728\u6267\u884c\u5783\u573e\u56de\u6536\u65f6\u5177\u4f53\u90fd\u505a\u4e86\u4e9b\u4ec0\u4e48\u5f88\u591a\u5730\u65b9\u90fd\u6709\u4ecb\u7ecd\u3002</p> <p>\u4f46\u662f\u4f55\u65f6\u89e6\u53d1\u5783\u573e\u56de\u6536\uff0c\u5373\u5783\u573e\u56de\u6536\u7684\u89e6\u53d1\u6761\u4ef6\u662f\u4ec0\u4e48\u3002</p> <p>\u5b98\u7f51\u7684\u4ecb\u7ecd\u4e00\u822c\u662f\u6709\u5982\u4e0b\u51e0\u4e2a\u53c2\u6570\u51b3\u5b9a</p> <pre><code>#autovacuum = on                        # Enable autovacuum subprocess?  'on'\n#autovacuum_vacuum_threshold = 50       # min number of row updates before vacuum\n#autovacuum_analyze_threshold = 50      # min number of row updates before analyze\n#autovacuum_vacuum_scale_factor = 0.2   # fraction of table size before vacuum\n#autovacuum_analyze_scale_factor = 0.1  # fraction of table size before analyze\n#autovacuum_freeze_max_age = 200000000 # maximum XID age before forced vacuum\n</code></pre> <p>\u5927\u6982\u610f\u601d \u5f53\u8868\u4e2d\u7684\u6570\u636e\u66f4\u65b0\u4e3a\u603b\u6570\u91cf\u768420% \u662f\u89e6\u53d1\u5783\u573e\u56de\u6536\uff0c\u4f46\u662f\u5f53\u8868\u4e2d\u603b\u6570\u91cf\u5c0f\u4e8e50\u7684\u65f6\u501920%\u6765\u7684\u592a\u5bb9\u6613\u4e86\uff0c</p> <p>\u8fd9\u6837\u5c31\u4f1a\u8fc7\u4e8e\u9891\u7e41\u7684\u6ee1\u8db3\u89e6\u53d1\u6761\u4ef6\u3002\u4e8e\u662f50\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6700\u4f4e\u95e8\u69db\u3002\u8868\u4e2d\u603b\u6570\u91cf\u572850\u4ee5\u5185\u7684\u5c31\u6682\u65f6\u4e0d\u89e6\u53d1\u5783\u573e\u56de\u6536\u4e86\u3002</p> <ul> <li>threshold = pg_class.reltuples*autovacuum_vacuum_scale_factor+autovacuum_vacuum_threshold</li> </ul> <p>\u5373\uff1aif (\u5f53\u524d\u8868\u66f4\u65b0\u6570&gt; \u89e6\u53d1\u9600\u503c) do ...</p>"},{"location":"postgres/auto_vacuum_trigger/#_2","title":"\u7b49\u53f7\u53f3\u8fb9\u7684\u7406\u89e3","text":"<pre><code>-- \u89e6\u53d1\u81ea\u52a8analyze\npg_class.reltuples*autovacuum_analyze_scale_factor+autovacuum_analyze_threshold\n-- \u89e6\u53d1\u81ea\u52a8autovacuum\npg_class.reltuples*autovacuum_vacuum_scale_factor+autovacuum_vacuum_threshold\n</code></pre> <p>\u4e24\u4e2a\u516c\u5f0f\u76f8\u4f3c\u3002\u5176\u4e2d\u7684\u503c\u90fd\u9664\u4e86pg_class.reltuples \u4ee5\u5916\u90fd\u662f\u6765\u81ea\u4e8e\u914d\u7f6e</p> <p>pg_class.reltuples \u6765\u81ea\u7cfb\u7edf\u7edf\u8ba1\u8868\uff0c\u5728analyze \u540e\u66f4\u65b0\u3002</p> <p>\u6240\u4ee5\u901a\u5e38\u914d\u7f6e\u89e6\u53d1\u53c2\u6570\u65f6\uff0c\u5c3d\u91cf\u5c06analyze \u89e6\u53d1\u6761\u4ef6\u8981\u66f4\u654f\u611f\u6027\u3002</p> <p>\u6d4b\u8bd5\u53c2\u8003</p>"},{"location":"postgres/auto_vacuum_trigger/#_3","title":"\u601d\u8003\u7684\u662f\u7b49\u53f7\u5de6\u8fb9\u7684\u4e8b\u60c5","text":"<p>\u6570\u636e\u5e93\u662f\u5982\u4f55\u77e5\u9053\u5f53\u524d\u66f4\u65b0\u7684\u6570\u91cf, \u6309\u7167\u5df2\u6709\u7684\u7ecf\u9a8c\uff08\u7ecf\u9a8c\u4e0d\u8db3\uff09\u3002</p> <p>\u4e00\u822c\u6570\u636e\u5e93\u4e2d\u8fd9\u79cd\u4fe1\u606f\u662f\u5b58\u5728\u7684\u7edf\u8ba1\u7c7b\u4fe1\u606f\u4e2d\u3002\u4f46\u662f\u7edf\u8ba1\u4fe1\u606f\u901a\u5e38\u662f\u5728analyze\u540e\u66f4\u65b0\u7684\u3002\u6839\u636e\u4e0a\u9762\u7684\u516c\u5f0f\u89e6\u53d1analyze\u7684\u6761\u4ef6\u53c8\u662f\u7531\u5f53\u524d\u8868\u66f4\u65b0\u6570\u6709\u5173\u3002</p> <p>\u4e8e\u662f\u4e4e\u5c31\u9677\u5165\u4e86\u4e00\u79cd\u5faa\u73af\u267b\ufe0f   \u3002</p> <p>1 \u8868\u66f4\u65b0\u6570\u91cf -&gt; analyze</p> <p>2 analyze  \u2014&gt; \u7edf\u8ba1\u4fe1\u606f </p> <p>3 \u7edf\u8ba1\u4fe1\u606f -&gt; \u8868\u66f4\u65b0\u6570\u91cf  </p> <p>\u90a3\u662f\u5148\u6709\u9e21\u8fd8\u662f\u5148\u6709\u86cb\u5462\uff1f</p> <p>\u53ea\u6709\u7ee7\u7eed\u601d\u8003\u624d\u80fd\u627e\u5230\u4e8b\u60c5\u7684\u771f\u76f8\u3002\u3002\u3002</p> <p>\u9996\u5148\u8868\u4e2d\u66f4\u65b0\u7684\u6570\u636e\u91cf\u7edf\u8ba1\u5e94\u8be5\u662f\u4e00\u4e2a\u5f88\u8f7b\u91cf\u5feb\u901f\u7684\u65b9\u6cd5\u3002\u7c7b\u4f3c\u4e8e\u8ba1\u6570\u5668\u5b9e\u73b0,\u5e76\u4e14\u72ec\u7acb\u4e8e\u4f20\u7edf\u7684\u7edf\u8ba1\u4fe1\u606f\u3002\u63a5\u4e0b\u6765\u5728\u6570\u636e\u5e93\u5f00\u59cb\u5bfb\u627e\u8fd9\u79cd\u8ba1\u6570\u5668\u3002</p>"},{"location":"postgres/auto_vacuum_trigger/#_4","title":"\u771f\u76f8","text":"<p>\u2018\u8ba1\u6570\u5668\u2019 \u662f\u6709stats collector \u8fdb\u7a0b\u6765\u7ef4\u62a4\u3002 \u5f53\u6570\u636e\u5e93\u8fdb\u884cdml\u64cd\u4f5c\u65f6\uff0cstats collector \u8fdb\u884c\u5b9e\u65f6\u8ba1\u6570\u7edf\u8ba1\u3002\u8be5\u503c\u5b58\u5728\u4e8epg_stat_all_table \u4e2d</p> <p>\u67e5\u770bpg_stats_all_table \u8868\u5b9a\u4e49</p> <pre><code>postgres=# \\d+ pg_stat_all_tables \n                           \u89c6\u56fe \"pg_catalog.pg_stat_all_tables\"\n        \u680f\u4f4d         |           \u7c7b\u578b           | \u6821\u5bf9\u89c4\u5219 | \u53ef\u7a7a\u7684 | \u9884\u8bbe | \u5b58\u50a8  | \u63cf\u8ff0 \n---------------------+--------------------------+----------+--------+------+-------+------\n relid               | oid                      |          |        |      | plain | \n schemaname          | name                     |          |        |      | plain | \n relname             | name                     |          |        |      | plain | \n seq_scan            | bigint                   |          |        |      | plain | \n seq_tup_read        | bigint                   |          |        |      | plain | \n idx_scan            | bigint                   |          |        |      | plain | \n idx_tup_fetch       | bigint                   |          |        |      | plain | \n n_tup_ins           | bigint                   |          |        |      | plain | \n n_tup_upd           | bigint                   |          |        |      | plain | \n n_tup_del           | bigint                   |          |        |      | plain | \n n_tup_hot_upd       | bigint                   |          |        |      | plain | \n n_live_tup          | bigint                   |          |        |      | plain | \n n_dead_tup          | bigint                   |          |        |      | plain | \n n_mod_since_analyze | bigint                   |          |        |      | plain | \n last_vacuum         | timestamp with time zone |          |        |      | plain | \n last_autovacuum     | timestamp with time zone |          |        |      | plain | \n last_analyze        | timestamp with time zone |          |        |      | plain | \n last_autoanalyze    | timestamp with time zone |          |        |      | plain | \n vacuum_count        | bigint                   |          |        |      | plain | \n autovacuum_count    | bigint                   |          |        |      | plain | \n analyze_count       | bigint                   |          |        |      | plain | \n autoanalyze_count   | bigint                   |          |        |      | plain | \n\u89c6\u56fe\u5b9a\u4e49:\n SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_numscans(c.oid) AS seq_scan,\n    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,\n    sum(pg_stat_get_numscans(i.indexrelid))::bigint AS idx_scan,\n    sum(pg_stat_get_tuples_fetched(i.indexrelid))::bigint + pg_stat_get_tuples_fetched(c.oid) AS idx_tup_fetch,\n    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,\n    pg_stat_get_live_tuples(c.oid) AS n_live_tup,\n    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,\n    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,\n    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,\n    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,\n    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,\n    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,\n    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,\n    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,\n    pg_stat_get_analyze_count(c.oid) AS analyze_count,\n    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count\n   FROM pg_class c\n     LEFT JOIN pg_index i ON c.oid = i.indrelid\n     LEFT JOIN pg_namespace n ON n.oid = c.relnamespace\n  WHERE c.relkind = ANY (ARRAY['r'::\"char\", 't'::\"char\", 'm'::\"char\"])\n  GROUP BY c.oid, n.nspname, c.relname;\n</code></pre> <p>\u539f\u6765\u662f\u8868oid\u4e0a\u5404\u79cd\u7ef4\u5ea6\u7684\u8ba1\u6570\u5668\uff0c</p> <p>\u67e5\u770bpg_class \u7ed3\u6784</p> <pre><code>postgres=# \\d+ pg_class\n                                 \u6570\u636e\u8868 \"pg_catalog.pg_class\"\n        \u680f\u4f4d         |     \u7c7b\u578b     | \u6821\u5bf9\u89c4\u5219 |  \u53ef\u7a7a\u7684  | \u9884\u8bbe |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0 \n---------------------+--------------+----------+----------+------+----------+----------+------\n relname             | name         |          | not null |      | plain    |          | \n relnamespace        | oid          |          | not null |      | plain    |          | \n reltype             | oid          |          | not null |      | plain    |          | \n reloftype           | oid          |          | not null |      | plain    |          | \n relowner            | oid          |          | not null |      | plain    |          | \n relam               | oid          |          | not null |      | plain    |          | \n relfilenode         | oid          |          | not null |      | plain    |          | \n reltablespace       | oid          |          | not null |      | plain    |          | \n relpages            | integer      |          | not null |      | plain    |          | \n reltuples           | real         |          | not null |      | plain    |          | \n relallvisible       | integer      |          | not null |      | plain    |          | \n reltoastrelid       | oid          |          | not null |      | plain    |          | \n relhasindex         | boolean      |          | not null |      | plain    |          | \n relisshared         | boolean      |          | not null |      | plain    |          | \n relpersistence      | \"char\"       |          | not null |      | plain    |          | \n relkind             | \"char\"       |          | not null |      | plain    |          | \n relnatts            | smallint     |          | not null |      | plain    |          | \n relchecks           | smallint     |          | not null |      | plain    |          | \n relhasoids          | boolean      |          | not null |      | plain    |          | \n relhaspkey          | boolean      |          | not null |      | plain    |          | \n relhasrules         | boolean      |          | not null |      | plain    |          | \n relhastriggers      | boolean      |          | not null |      | plain    |          | \n relhassubclass      | boolean      |          | not null |      | plain    |          | \n relrowsecurity      | boolean      |          | not null |      | plain    |          | \n relforcerowsecurity | boolean      |          | not null |      | plain    |          | \n relispopulated      | boolean      |          | not null |      | plain    |          | \n relreplident        | \"char\"       |          | not null |      | plain    |          | \n relispartition      | boolean      |          | not null |      | plain    |          | \n relfrozenxid        | xid          |          | not null |      | plain    |          | \n relminmxid          | xid          |          | not null |      | plain    |          | \n relacl              | aclitem[]    |          |          |      | extended |          | \n reloptions          | text[]       |          |          |      | extended |          | \n relpartbound        | pg_node_tree |          |          |      | extended |          | \n\u7d22\u5f15\uff1a\n    \"pg_class_oid_index\" UNIQUE, btree (oid)\n    \"pg_class_relname_nsp_index\" UNIQUE, btree (relname, relnamespace)\n    \"pg_class_tblspc_relfilenode_index\" btree (reltablespace, relfilenode)\n\u6709 OIDs:yes\n</code></pre> <p>pg_class \u4e2d\u7684\u4fe1\u606f\u662fanalyze \u64cd\u4f5c\u540e\u66f4\u65b0\uff0c\u800c\u8ba1\u6570\u5668\u662foid\u4e0a\u4e0d\u540c\u7ef4\u5ea6\u7684\u7edf\u8ba1\u3002</p> <p>\u7edf\u8ba1\u7ef4\u5ea6\u8bbe\u7f6e</p> <pre><code>#------------------------------------------------------------------------------\n# STATISTICS\n#------------------------------------------------------------------------------\n\n# - Query and Index Statistics Collector -\n\n#track_activities = on\n#track_counts = on\n#track_io_timing = off\n#track_functions = none                 # none, pl, all\n#track_activity_query_size = 1024       # (change requires restart)\n#stats_temp_directory = 'pg_stat_tmp  \u7edf\u8ba1\u4fe1\u606f\u5b58\u653e\u4f4d\u7f6e\n</code></pre> <pre><code>tree pg_stat_tmp/\npg_stat_tmp/\n\u251c\u2500\u2500 db_0.stat\n\u251c\u2500\u2500 db_14187.stat\n\u251c\u2500\u2500 db_16384.stat\n\u251c\u2500\u2500 db_20579.stat\n\u2514\u2500\u2500 global.stat\n</code></pre> <p>\u601d\u8003-&gt;\u8ff7\u60d1-&gt;\u5bfb\u627e\u7b54\u6848-&gt;\u65e5\u6e10\u6e05\u6670 \uff0c\u65e5\u8fdb\u4e00\u6b65</p> <p>pg_statistic \u91cc\u9762\u7684\u5185\u5bb9\u592a\u4e30\u5bcc\u4e86...</p>"},{"location":"postgres/awsome-postgres/","title":"\u5de5\u4f5c\u4e2d\u6240\u4f7f\u7528\u7684postgres","text":"<p>Postgres \u5b9e\u9645\u5e94\u7528\u6982\u89c8</p> <ul> <li>MVCC \u591a\u7248\u672c\u63a7\u5236 </li> </ul> <p>\u4e00\u4e2a\u7ed5\u4e0d\u5f00\u7684\u8bdd\u9898\uff0c \u4e3b\u8981\u662f\u5bf9\u6297\u8868\u7a7a\u95f4\u7684\u81a8\u80c0\u3002\u89e3\u51b3\u5783\u573e\u56de\u6536\u95ee\u9898\uff0c\u4e3b\u4ece\u5e93\u4e4b\u95f4\u4ece\u5e93\u67e5\u8be2\u51b2\u7a81\u95ee\u9898\u3002</p> <p>\u76ee\u524d\u65b9\u6cd5\u6bcf\u65e5\u4f4e\u5cf0\u671f\u5b9a\u65f6 vaccum \uff0cgocron\u81ea\u5b9a\u5b9a\u65f6\u4efb\u52a1 \u3002 \u6839\u636epgstattuple\u5bf9\u78c1\u76d8\u7a7a\u95f4\u5229\u7528\u7387\u8fdb\u884c\u5206\u6790\u3002\u51b3\u5b9a\u662f\u5426vaccum full ,pg_repack</p> <ul> <li>\u6d41\u590d\u5236</li> </ul> <p>\u4e3b\u4ece\u590d\u5236\uff0c\u8bfb\u5199\u5206\u79bb\u7684\u57fa\u7840\u3002\u4e94\u79cd\u540c\u6b65\u65b9\u5f0f</p> <ul> <li>\u903b\u8f91\u8ba2\u9605</li> </ul> <p>\u5927\u7248\u672c\u5347\u7ea7\uff0c\u6570\u636e\u5e76\u5f52\u3002\u8fc1\u79fb</p> <ul> <li>\u6267\u884c\u8ba1\u5212\u8c03\u4f18</li> </ul> <p>\u8c03\u8282\u6210\u672c\u56e0\u5b50\u6bd4\u4f8b\uff0c\u5982\u4e0d\u540c\u7684\u78c1\u76d8\u7c7b\u578b\u6bd4\u4f8b\u6709\u6240\u533a\u522b</p> <ul> <li>\u53c2\u6570\u8c03\u4f18</li> </ul> <p>\u4e3b\u673a \u548c \u670d\u52a1</p> <ul> <li>\u5206\u533a\u8868</li> </ul> <p>\u91c7\u7528pg_pathman ,\u56e0\u4e3a\u90fd\u662f\u6839\u636e\u4e1a\u52a1\u6570\u636e\u91cf\u6765\u51b3\u5b9a\u662f\u5426\u5206\u533a\u3002pg_pathman \u80fd\u591f\u4e0d\u505c\u670d\u7684\u524d\u63d0\u4e0b\u81ea\u52a8\u5206\u533a\u6570\u636e\u3002</p> <ul> <li>\u9ad8\u53ef\u7528</li> </ul> <p>patroni</p> <ul> <li>\u5206\u8868</li> </ul> <p>citus \u6ce8\u610f\u4eb2\u548c\u6027 \u548c\u8868\u4e4b\u95f4\u7684join ddl \u7b49\u9650\u5236\u3002</p> <ul> <li>\u76d1\u63a7\uff0c\u65e5\u5fd7</li> </ul> <p>promethues \u5957\u4ef6\uff0c\u81ea\u5b9a\u4e49\u76d1\u63a7\u9879 \u3002 filebeat elasticsearch kibana \u65e5\u5fd7\u6536\u96c6</p> <ul> <li>\u7edf\u8ba1</li> </ul> <p>\u7ed3\u5408\u6570\u636e\u5e93\u81ea\u5e26\u7684\u7edf\u8ba1\u4fe1\u606f\u53capg_stat_statements \u63d2\u4ef6\u751f\u4ea7\u62a5\u8868</p> <ul> <li>\u538b\u6d4b</li> </ul> <p>pg_bench ,\u81ea\u5b9a\u4e49sql</p> <ul> <li>\u5907\u4efd\u6062\u590d</li> </ul> <p>wal-g \u5168\u91cf\u548c\u5b9e\u65f6\u589e\u91cf</p> <ul> <li>\u8fde\u63a5\u6c60</li> </ul> <p>pgbounch \u4e3b\u8981\u7528\u4e8e\u5206\u8868\u4e2d\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4</p> <ul> <li>FDW</li> </ul>"},{"location":"postgres/bgwriter/","title":"Backgroud Writer \u8fdb\u7a0b","text":"","tags":[]},{"location":"postgres/bgwriter/#_1","title":"\u4e3b\u8981\u4f5c\u7528","text":"<p>\u8d1f\u8d23\u5c06shared buffer \u4e2d\u7684\u5185\u5bb9\u5237\u5199\u5230\u78c1\u76d8\u4e2d\uff0c9.1\u7248\u4e4b\u540e\u90e8\u5206\u5185\u5bb9\u4ea4\u7ed9checkpoint\u5b8c\u6210\u3002</p>","tags":[]},{"location":"postgres/bgwriter/#_2","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code># - Background Writer -\n\n#bgwriter_delay = 200ms                 # 10-10000ms between rounds\n#bgwriter_lru_maxpages = 100            # 0-1000 max buffers written/round\n#bgwriter_lru_multiplier = 2.0          # 0-10.0 multiplier on buffers scanned/round\n#bgwriter_flush_after = 512kB           # measured in pages, 0 disables\n</code></pre> <ul> <li> <p>bgwriter_delay  \u4e24\u6b21\u5199\u5165\u4efb\u52a1\u4e4b\u95f4\u7684\u7761\u7720\u95f4\u9694\u65f6\u95f4</p> </li> <li> <p>bgwriter_lru_maxpages  \u6bcf\u6b21bgwriter\u4efb\u52a1\u5199buffer\u7684\u6700\u5927page\u6570\uff0c\u4e00\u65e6\u8fbe\u5230\u8fd9\u4e2a\u6570\u91cf\uff0cbgwriter\u5c31\u7ed3\u675f\u4efb\u52a1\u5f00\u59cb\u4f11\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4bgwriter\u4f11\u7720200\u6beb\u79d2\uff0c\u7136\u540e\u5199\u5165\u51e0\u5341\u6beb\u79d2\u5c31\u53c8\u5f00\u59cb\u4e86\u4f11\u606f </p> </li> <li> <p>bgwriter_lru_multiplier multiplier(\u4e58\u6570)  \u7528\u4e8e\u8bc4\u4f30\u4e0b\u4e00\u6b21\u5199\u4efb\u52a1\u7684\u6570\u91cf\uff0c\u5176\u4f9d\u636e\u662f\u8fd9\u6bb5\u65f6\u95f4\u5185\u65b0\u7533\u8bf7\u7684buffer\u6570\u91cf\u7684\u500d\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u53c2\u6570\u4e58\u4ee5\u65b0\u589e\u52a0buffer\u5206\u914d\u7684\u6570\u91cf\u540e\u5c0f\u4e8ebgwriter_lru_maxpages\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u4e0b\u4e00\u4e2a\u5199\u4efb\u52a1\u7684\u6570\u91cf\u4f1a\u5c0f\u4e8e\u9884\u671f\u7684\u5199\u5165\u91cf\u3002\u5c06\u8fd9\u4e2a\u53c2\u6570\u8c03\u5927\uff0c\u4f1a\u589e\u52a0bgwriter\u56de\u5199\u810f\u5757\u7684\u6570\u91cf\uff0c\u4e0d\u8fc7\u4f1a\u589e\u52a0\u5199IO\u538b\u529b\uff0c\u5c06\u8fd9\u4e2a\u53c2\u6570\u8c03\u5c0f\uff0c\u53ef\u4ee5\u964d\u4f4e\u5199IO\u538b\u529b\uff0c\u4e0d\u8fc7\u53ef\u80fd\u5bfc\u81f4backend\u5199\u810f\u5757\u7684\u6bd4\u4f8b\u589e\u52a0\u3002\u4e0d\u540c\u8d1f\u8f7d\u7684\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u5e94\u8be5\u662f\u9700\u8981\u505a\u8c03\u6574\u7684\uff0c\u800c\u4e0d\u662f\u53ea\u662f\u7528\u7f3a\u7701\u503c2\u3002\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684\u7cfb\u7edf\u7684\u5199IO\u538b\u529b\u8fd8\u4e0d\u5927\uff0c\u4f46\u662f bgwriter\u5199\u6bd4\u4f8b\u504f\u4f4e\uff0cbackend\u5199\u6bd4\u4f8b\u504f\u9ad8\uff0c\u90a3\u4e48\u5c1d\u8bd5\u52a0\u5927\u8fd9\u4e2a\u53c2\u6570\u8fd8\u662f\u6709\u6548\u7684</p> </li> <li> <p>bgwriter_flush_after \u5199\u5165\u91cf\u8d85\u8fc7\u9600\u503c\u8fdb\u884c\u540e\u8fdb\u884c\u540c\u6b65\u5237 </p> </li> </ul>","tags":[]},{"location":"postgres/checkpoint/","title":"checkpoint \u68c0\u67e5\u70b9","text":""},{"location":"postgres/checkpoint/#_1","title":"\u4f5c\u7528","text":"<p>\u4e00\u822ccheckpoint\u4f1a\u5c06\u67d0\u4e2a\u65f6\u95f4\u70b9\u4e4b\u524d\u7684\u810f\u6570\u636e\u5168\u90e8\u5237\u65b0\u5230\u78c1\u76d8\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u4e00\u81f4\u6027\u4e0e\u5b8c\u6574\u6027\u3002\u5176\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u7f29\u77ed\u5d29\u6e83\u6062\u590d\u65f6\u95f4\u3002</p> <p>\u6570\u636e\u5e93\u9760\u8c31\u7684\u539f\u56e0</p>"},{"location":"postgres/checkpoint/#dml","title":"\u4e00\u6761DML \u5199\u5165\u8fc7\u7a0b","text":"<p>\u5728\u5199\u5165\u6570\u636e\u7684\u65f6\uff0c\u5f53\u4e8b\u52a1\u63d0\u4ea4\u540e\u4fee\u6539\u4fe1\u606f\u987a\u5e8f\u540c\u6b65\u5199\u5165wal\u3002shared buffer\u4e2d\u4fe1\u606f\u5e76\u4e0d\u662f\u9a6c\u4e0a\u843d\u76d8\u3002\u5f02\u6b65\u540c\u6b65\u78c1\u76d8\u3002</p> <p>\u8fd9\u91cc\u5b9e\u73b0\u53cc\u5199:</p> \u4f4d\u7f6e \u662f\u5426\u540c\u6b65 \u65b9\u5f0f \u8d1f\u8d23\u8fdb\u7a0b WAL \u540c\u6b65 \u987a\u5e8f\u5199 walwriter TableFile \u5f02\u6b65 \u968f\u673a\u8bfb\u5199 backgroudwriter <p>\u5373\u4fdd\u969c\u4e86\u6570\u636e\u7684\u5b8c\u6574\u6027\u53c8\u540c\u65f6\u517c\u987e\u7684\u6027\u80fd\u3002</p>"},{"location":"postgres/checkpoint/#_2","title":"\u610f\u5916\u53d1\u751f\u65f6\u5982\u4f55\u6062\u590d","text":"<p>\u6709\u4e86wal \u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u6570\u636e\u4e0d\u4e22\u5931\u3002\u90a3\u4e48\u5177\u4f53\u8be5\u5982\u4f55\u6062\u590d\uff1f</p> <p>\u56e0\u4e3a\u4ea7\u751fwal\u662f\u4e2a\u987a\u5e8f\u5199\u7684\u8fc7\u7a0b\uff0c\u53ea\u8981\u56de\u653ewal\u5c31\u53ef\u91cd\u73b0\u5199\u5165\u8fc7\u7a0b\u3002\u5982\u91cd\u73b0\u4e00\u4e2a\u4e00\u6478\u4e00\u6837\u7684\u4ece\u5e93\u3002</p> <p>\u9996\u5148\u8981\u786e\u5b9a\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5f53\u524d\u6570\u636e\u5e93\u72b6\u6001\u4e0b\u5e94\u8be5\u4ece\u90a3\u4e2a\u5177\u4f53\u4f4d\u7f6e\u5f00\u59cb\u56de\u653e\u3002 \u8fd9\u91cc\u5c31\u9700\u8981checkpoint\u3002</p> <p>\u8fd9\u4e2a\u5177\u4f53\u4f4d\u7f6e\uff08\u68c0\u67e5\u70b9\uff09\u4e4b\u524d\u7684\u6570\u636e\u5df2\u7ecf\u540c\u6b65\u5230\u6570\u636e\u5e93\uff0c\u4e4b\u540e\u7684\u6570\u636e\u8981\u4e48\u5728\u7f13\u5b58\u4e2d\u7684\u810f\u6570\u636e\uff0c\u8981\u4e48\u53ef\u80fd\u610f\u5916\u4e22\u5931\u3002</p> <p>\u68c0\u67e5\u70b9\u53ef\u4f5c\u4e3a\u6e05\u7406WAL\u7684\u4f9d\u636e\uff0c\u4ece\u800c\u907f\u514dWAL\u65e5\u5fd7\u5806\u79ef\u3002</p>"},{"location":"postgres/checkpoint/#checkpoint","title":"Checkpoint \u5177\u4f53\u5de5\u4f5c","text":"<ol> <li>\u8bb0\u5f55\u68c0\u67e5\u70b9\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u8bb0\u5f55\u4e3a redo point\uff08\u91cd\u505a\u4f4d\u70b9\uff09</li> <li>\u5c06 shared buffer \u4e2d\u7684\u6570\u636e\u5237\u5230\u78c1\u76d8\u91cc\u9762\u53bb</li> <li>\u5237\u810f\u7ed3\u675f\uff0c\u68c0\u67e5\u70b9\u4e4b\u524d\u7684\u6570\u636e\u5747\u5df2\u88ab\u5237\u5230\u78c1\u76d8\u5b58\u50a8\uff08\u6570\u636e1\u548c2\uff09</li> <li>\u8bb0\u5f55\u76f8\u5173\u4fe1\u606f</li> <li>\u5c06\u6700\u65b0\u7684\u68c0\u6d4b\u70b9\u8bb0\u5f55\u5728 pg_control \u6587\u4ef6\u4e2d</li> </ol>"},{"location":"postgres/checkpoint/#_3","title":"\u89e6\u53d1\u6761\u4ef6","text":"<ul> <li>\u8d85\u7ea7\u7528\u6237\uff08\u5176\u4ed6\u7528\u6237\u4e0d\u53ef\uff09\u6267\u884cCHECKPOINT\u547d\u4ee4</li> <li>\u6570\u636e\u5e93shutdown</li> <li>\u6570\u636e\u5e93recovery\u5b8c\u6210</li> <li>XLOG\u65e5\u5fd7\u91cf\u8fbe\u5230\u4e86\u89e6\u53d1checkpoint\u9608\u503c</li> <li>\u5468\u671f\u6027\u5730\u8fdb\u884ccheckpoint,\u5468\u671f\u5185\u65e0\u5199\u5165\u4e0d\u6267\u884ccheckpoint</li> <li>\u9700\u8981\u5237\u65b0\u6240\u6709\u810f\u9875</li> </ul>"},{"location":"postgres/checkpoint/#_4","title":"\u76f8\u5173\u53c2\u6570","text":"<pre><code>Postgresql 10\n# - Checkpoints - \n\ncheckpoint_timeout = 5min               # range 30s-1d\nmax_wal_size = 2GB\nmin_wal_size = 1GB\ncheckpoint_completion_target = 0.9      # checkpoint target duration, 0.0 - 1.0\n#checkpoint_flush_after = 256kB         # measured in pages, 0 disables\n#checkpoint_warning = 30s               # 0 disables\n</code></pre> <ul> <li>checkpoint_segments  WAL log\u7684\u6700\u5927\u6570\u91cf\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u503c\u662f3\u3002\u8d85\u8fc7\u8be5\u6570\u91cf\u7684WAL\u65e5\u5fd7\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1checkpoint\u3002 \u65b0\u7248(9.6)\u4f7f\u7528min_wal_size, max_wal_size  \u6765\u52a8\u6001\u63a7\u5236wal\u65e5\u5fd7</li> <li>checkpoint_timeout  \u7cfb\u7edf\u81ea\u52a8\u6267\u884ccheckpoint\u4e4b\u95f4\u7684\u6700\u5927\u65f6\u95f4\u95f4\u9694\u3002\u7cfb\u7edf\u9ed8\u8ba4\u503c\u662f5\u5206\u949f\u3002</li> <li>checkpoint_completion_target \u8be5\u53c2\u6570\u8868\u793acheckpoint\u7684\u5b8c\u6210\u65f6\u95f4\u5360\u4e24\u6b21checkpoint\u65f6\u95f4\u95f4\u9694\u7684\u6bd4\u4f8b\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u503c\u662f0.5,\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2acheckpoint\u9700\u8981\u5728checkpoints\u95f4\u9694\u65f6\u95f4\u768450%\u5185\u5b8c\u6210\u3002</li> <li>checkpoint_warning \u7cfb\u7edf\u9ed8\u8ba4\u503c\u662f30\u79d2\uff0c\u5982\u679ccheckpoints\u7684\u5b9e\u9645\u53d1\u751f\u95f4\u9694\u5c0f\u4e8e\u8be5\u53c2\u6570\uff0c\u5c06\u4f1a\u5728server log\u4e2d\u5199\u5165\u4e00\u6761\u76f8\u5173\u4fe1\u606f\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e3a0\u7981\u7528\u3002</li> </ul>"},{"location":"postgres/checkpoint/#_5","title":"\u8bb0\u5f55\u65e5\u5fd7","text":"<pre><code>\u53c2\u6570\u914d\u7f6e\u5f00\u542f\nlog_checkpoints = on\n</code></pre> <pre><code>\u65e5\u5fd7\u4fe1\u606f\nrestartpoint complete: wrote 12166 buffers (0.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=269.888 s, sync=0.002 s, total=269.892 s; sync files=489, longest=0.001 s, average=0.001 s; distance=156927 kB, estimate=156927 kB\nrecovery restart point at 204F/41B7840\",\"last completed transaction was at log time\n</code></pre> <p>\u901a\u8fc7 pg_stat_bgwriter \u89c6\u56fe\u67e5\u770b</p> <pre><code>select checkpoints_timed,checkpoints_req,checkpoint_write_time,buffers_checkpoint,buffers_clean from pg_stat_bgwriter ;\n-[ RECORD 1 ]---------+------------------------------\ncheckpoints_timed     | 7\ncheckpoints_req       | 0\ncheckpoint_write_time | 1619504\ncheckpoint_sync_time  | 125\nbuffers_checkpoint    | 190388\nbuffers_clean         | 13574\n</code></pre>"},{"location":"postgres/checkpoint/#_6","title":"\u5e94\u7528","text":"<p>\u9884\u9632wal\u5199\u653e\u5927</p>"},{"location":"postgres/checkpoint/#wal","title":"\u5982\u4f55\u5224\u65ad\u662f\u5426\u9700\u8981\u4f18\u5316WAL\uff1f","text":"<p>wal \u6587\u4ef6\u540d\u7ec4\u6210</p> <ul> <li>timeline 8\u4f4d</li> <li>\u903b\u8f91\u53f7 8\u4f4d</li> <li>\u504f\u79fb\u91cf</li> </ul> <p>\u4e0ewal_lsn\u5bf9\u5e94\u5173\u7cfb\u67e5\u770b</p> <pre><code>postgres=# select pg_current_wal_lsn();\n pg_current_wal_lsn \n--------------------\n 5A/AD000000\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# select pg_walfile_name(pg_current_wal_lsn());\n     pg_walfile_name      \n--------------------------\n 000000020000005A000000AC\n\n</code></pre> <p>\u5173\u4e8e\u5982\u4f55\u5224\u65ad\u662f\u5426\u9700\u8981\u4f18\u5316WAL\uff0c\u53ef\u4ee5\u901a\u8fc7\u5206\u6790WAL\uff0c\u7136\u540e\u68c0\u67e5\u4e0b\u9762\u7684\u6761\u4ef6\uff0c\u505a\u4e00\u4e2a\u7c97\u7565\u7684\u5224\u65ad\uff1a</p> <ul> <li>FPI\u6bd4\u4f8b\u9ad8\u4e8e70%</li> <li>HOT_UPDATE\u6bd4\u4f8b\u4f4e\u4e8e70%</li> </ul> <p>FPI\u53caHOT_UPDATE\u67e5\u770b\u65b9\u6cd5</p> <pre><code>/usr/pgsql-10/bin/pg_waldump --stats=record -p /var/lib/pgsql/10/data/pg_wal/ -t 2  -s 15/56098120 -e 15/56098200\n\n-z \u7edf\u8ba1\u4fe1\u606f\n\n-p wal path\n\n-t timeline\n\n-s sart lsn\n\n-e end lsn\n\n\u83b7\u53d6wal lsn psql -c \"checkpoint;select pg_current_wal_lsn\" \n</code></pre> <pre><code>/usr/pgsql-10/bin/pg_waldump --stats=record -s 1095/90000000 -e 1098/70000000 -t 3\nType                                           N      (%)          Record size      (%)             FPI size      (%)        Combined size      (%)\n----                                           -      ---          -----------      ---             --------      ---        -------------      ---\nXLOG/CHECKPOINT_ONLINE                       107 (  0.00)                11342 (  0.00)                    0 (  0.00)                11342 (  0.00)\nXLOG/NEXTOID                                   2 (  0.00)                   60 (  0.00)                    0 (  0.00)                   60 (  0.00)\nXLOG/FPI                                       1 (  0.00)                   49 (  0.00)                   64 (  0.00)                  113 (  0.00)\nTransaction/COMMIT                       2541235 (  3.27)             86401990 (  1.44)                    0 (  0.00)             86401990 (  0.71)\nTransaction/ABORT                            462 (  0.00)                15708 (  0.00)                    0 (  0.00)                15708 (  0.00)\nTransaction/COMMIT                          1337 (  0.00)               181730 (  0.00)                    0 (  0.00)               181730 (  0.00)\nStorage/CREATE                                 3 (  0.00)                  126 (  0.00)                    0 (  0.00)                  126 (  0.00)\nStorage/TRUNCATE                               3 (  0.00)                  138 (  0.00)                    0 (  0.00)                  138 (  0.00)\nCLOG/ZEROPAGE                                 78 (  0.00)                 2340 (  0.00)                    0 (  0.00)                 2340 (  0.00)\nCLOG/TRUNCATE                                  1 (  0.00)                   38 (  0.00)                    0 (  0.00)                   38 (  0.00)\nStandby/LOCK                                   5 (  0.00)                  210 (  0.00)                    0 (  0.00)                  210 (  0.00)\nStandby/RUNNING_XACTS                       2165 (  0.00)               115914 (  0.00)                    0 (  0.00)               115914 (  0.00)\nStandby/INVALIDATIONS                        653 (  0.00)                73814 (  0.00)                    0 (  0.00)                73814 (  0.00)\nHeap2/CLEAN                              3212348 (  4.13)            394164646 (  6.58)            308907392 (  4.97)            703072038 (  5.76)\nHeap2/FREEZE_PAGE                              4 (  0.00)                  261 (  0.00)                 3776 (  0.00)                 4037 (  0.00)\nHeap2/CLEANUP_INFO                           357 (  0.00)                14994 (  0.00)                    0 (  0.00)                14994 (  0.00)\nHeap2/VISIBLE                             231176 (  0.30)             13640564 (  0.23)              1933312 (  0.03)             15573876 (  0.13)\nHeap/INSERT                              2746943 (  3.53)            475090632 (  7.93)            367845268 (  5.92)            842935900 (  6.91)\nHeap/DELETE                              2744490 (  3.53)            148841990 (  2.48)            886729344 ( 14.27)           1035571334 (  8.48)\nHeap/UPDATE                               382906 (  0.49)             32082700 (  0.54)             73490712 (  1.18)            105573412 (  0.86)\nHeap/HOT_UPDATE                         59903887 ( 77.09)           4253014469 ( 71.00)            104818576 (  1.69)           4357833045 ( 35.70)\nHeap/LOCK                                 357336 (  0.46)             19298469 (  0.32)              2406840 (  0.04)             21705309 (  0.18)\nHeap/INPLACE                                1887 (  0.00)               305288 (  0.01)              1981592 (  0.03)              2286880 (  0.02)\nHeap/INSERT+INIT                            1467 (  0.00)              2120913 (  0.04)                    0 (  0.00)              2120913 (  0.02)\nHeap/UPDATE+INIT                               2 (  0.00)                  445 (  0.00)                    0 (  0.00)                  445 (  0.00)\nBtree/INSERT_LEAF                        5397231 (  6.95)            415152935 (  6.93)           4231482284 ( 68.08)           4646635219 ( 38.07)\nBtree/INSERT_UPPER                         34770 (  0.04)              2824004 (  0.05)            125457032 (  2.02)            128281036 (  1.05)\nBtree/SPLIT_L                               4589 (  0.01)             18282344 (  0.31)             12146020 (  0.20)             30428364 (  0.25)\nBtree/SPLIT_R                              30544 (  0.04)            117070220 (  1.95)             47733540 (  0.77)            164803760 (  1.35)\nBtree/DELETE                                9838 (  0.01)              2622892 (  0.04)              2366804 (  0.04)              4989696 (  0.04)\nBtree/UNLINK_PAGE                          14014 (  0.02)              1262698 (  0.02)             39943120 (  0.64)             41205818 (  0.34)\nBtree/NEWROOT                                  1 (  0.00)                   78 (  0.00)                    0 (  0.00)                   78 (  0.00)\nBtree/MARK_PAGE_HALFDEAD                   14014 (  0.02)              1038026 (  0.02)               364100 (  0.01)              1402126 (  0.01)\nBtree/VACUUM                               39493 (  0.05)              3974383 (  0.07)              8039632 (  0.13)             12014015 (  0.10)\nBtree/REUSE_PAGE                           27138 (  0.03)              1248348 (  0.02)                    0 (  0.00)              1248348 (  0.01)\nGin/UPDATE_META_PAGE                          52 (  0.00)                 9476 (  0.00)               144256 (  0.00)               153732 (  0.00)\nGin/INSERT_LISTPAGE                            1 (  0.00)                  358 (  0.00)                    0 (  0.00)                  358 (  0.00)\nSequence/LOG                                9093 (  0.01)               900207 (  0.02)                    0 (  0.00)               900207 (  0.01)\n                                        --------                      --------                      --------                      --------\nTotal                                   77709633                    5989764799 [49.07%]           6215793664 [50.93%]          12205558463 [100%]\n</code></pre> <p>\u4ee5\u4e0a\u4ec5\u4ec5\u662f\u7c97\u7565\u7684\u7ecf\u9a8c\u503c\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\u5e76\u4e14\u8fd9\u4e2aFPI\u6bd4\u4f8b\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u4f4e\u5199\u8d1f\u8f7d\u7684\u7cfb\u7edf\uff0c\u4f4e\u5199\u8d1f\u8f7d\u7684\u7cfb\u7edfFPI\u6bd4\u4f8b\u4e00\u5b9a\u975e\u5e38\u9ad8\uff0c\u4f46\u662f\uff0c\u4f4e\u5199\u8d1f\u8f7d\u7cfb\u7edf\u7531\u4e8e\u5199\u64cd\u4f5c\u5f88\u5c11\uff0c\u56e0\u6b64FPI\u6bd4\u4f8b\u5373\u4f7f\u9ad8\u4e00\u70b9\u4e5f\u6ca1\u592a\u5927\u5f71\u54cd\u3002</p> <p>\u4f18\u5316WAL\u53ca\u526f\u4f5c\u7528</p> <ul> <li> <p>\u5ef6\u957fcheckpoint\u65f6\u95f4\u95f4\u9694 \u5bfc\u81f4crash\u6062\u590d\u65f6\u95f4\u53d8\u957f\u3002crash\u6062\u590d\u65f6\u9700\u8981\u56de\u653e\u7684WAL\u65e5\u5fd7\u91cf\u4e00\u822c\u5c0f\u4e8emax_wal_size\u7684\u4e00\u534a\uff0cWAL\u56de\u653e\u901f\u5ea6(wal_compression=on\u65f6)\u4e00\u822c\u662f50MB/s~150MB/s\u4e4b\u95f4\u3002\u53ef\u4ee5\u6839\u636e\u53ef\u5bb9\u5fcd\u7684\u6700\u5927crash\u6062\u590d\u65f6\u95f4\uff0c\u4f30\u7b97\u51fa\u5141\u8bb8\u7684max_wal_size\u7684\u6700\u5927\u503c\u3002</p> </li> <li> <p>\u8c03\u6574fillfactor \u8fc7\u5c0f\u7684\u8bbe\u7f6e\u4f1a\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u4e0d\u96be\u7406\u89e3\u3002\u53e6\u5916\uff0c\u5bf9\u4e8e\u9891\u7e41\u66f4\u65b0\u7684\u8868\uff0c\u5373\u4f7f\u628afillfactor\u8bbe\u6210100%\uff0c\u6bcf\u4e2apage\u91cc\u8fd8\u662f\u8981\u4e00\u90e8\u5206\u7a7a\u95f4\u88abdead tuple\u5360\u636e\uff0c\u4e0d\u4f1a\u6bd4\u8bbe\u7f6e\u6210\u4e00\u4e2a\u5408\u9002\u7684\u7a0d\u5c0f\u7684fillfactor\u66f4\u8282\u7701\u7a7a\u95f4\u3002</p> </li> <li> <p>\u8bbe\u7f6ewal_compression=on \u9700\u8981\u989d\u5916\u5360\u7528CPU\u8d44\u6e90\u8fdb\u884c\u538b\u7f29\uff0c\u4f46\u5f71\u54cd\u4e0d\u5927</p> </li> </ul> <p>http://www.postgres.cn/news/viewone/1/273</p> <p>\u66f4\u591a\u7ec6\u8282\u8bf4\u660e</p> <p>https://yq.aliyun.com/articles/582847</p> <p>\u539f\u7406</p> <p>https://zhmin.github.io/2019/11/24/postgresql-checkpoint/</p> <p>https://www.modb.pro/db/47042</p>"},{"location":"postgres/citus01/","title":"citus \u7b80\u5355\u5e94\u7528","text":""},{"location":"postgres/citus01/#_1","title":"\u5e38\u7528\u65b9\u6cd5","text":"<p>\u96c6\u7fa4\u7ba1\u7406</p> <pre><code>\u52a0\u5165\u8282\u70b9\nSELECT * from master_add_node('worker-101', 5432);\n\u67e5\u770b\u8282\u70b9\u72b6\u6001\nSELECT * FROM master_get_active_worker_nodes();\n\nselect * from pg_dist_node;\n</code></pre> <p>\u6570\u636e\u5e93\u7ba1\u7406</p> <ul> <li>\u5206\u7247\u8868(distributed table \uff0c hash | append )</li> <li>\u53c2\u8003\u8868(reference table \u6570\u636e\u91cf\u5c0f)</li> <li>\u672c\u5730\u8868(\u539f\u751f\u8868\uff0c\u6ca1\u6709\u4efb\u4f55\u5904\u7406.\u517c\u5bb9\u6027\u9ad8)</li> </ul> <pre><code>\u5bf9\u8868\u8fdb\u884c\u5206\u7247\n\nSELECT create_distributed_table('companies', 'id');\n\n\u5206\u7247\u67e5\u770b\nSELECT * from pg_dist_shard;\n</code></pre> <p>\u5143\u6570\u636e\u8868</p> <pre><code>pg_dist_shard\npg_dist_placement\npg_dist_node\n</code></pre> <p>\u53c2\u6570</p> <p>\u66f4\u591a\u53c2\u8003</p> <p>sql \u9650\u5236</p> <p>1 \u975e\u4eb2\u548c\u6027\u8868\u4e4b\u95f4\u7684outer join </p> <p>\u65b9\u6848\uff1a CTE \u5e7f\u64ad \u3001\u4e34\u65f6\u8868\u3001fdw</p> <p>2 \u672c\u5730\u8868\u53c2\u4e0e\u7684join \u4e0d\u652f\u6301</p> <p>3 postgis \u652f\u6301\u7684\u9650\u5236\uff0c\u590d\u6742\u8ba1\u7b97</p> <p>\u6ce8\u610f\u4e8b\u9879</p> <p>1 max_adptive_executor_pool_size \u9632\u6b62\u4f46\u5e93\u8d1f\u8f7d\u8fc7\u5927</p> <p>2 \u53c2\u8003\u8868\u9ed8\u8ba4\u67e5\u8be2\u6bcf\u6b21\u90fd\u662f\u8bbf\u95ee\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u5206\u5e03\u3002 \u8bbe\u7f6e task_assigment_policy TO 'rond ' \u8f6e\u8be2\u4f7f\u7528</p> <p>3 ddl \u8bed\u8a00\u9700\u8981\u5728\u6bcf\u4e2a\u8282\u70b9\u4e2d\u6267\u884c\u3002</p> <p>https://blog.csdn.net/icreasy3/article/details/90720192</p>"},{"location":"postgres/citus11/","title":"\u73af\u5883\u4ecb\u7ecd","text":"","tags":[]},{"location":"postgres/citus11/#_2","title":"\u7248\u672c\u4fe1\u606f","text":"<ul> <li> <p>centos7</p> </li> <li> <p>postgres 14.4</p> </li> <li> <p>citus 110-2</p> </li> </ul>","tags":[]},{"location":"postgres/citus11/#_3","title":"\u5b89\u88c5\u6b65\u9aa4","text":"<ul> <li> <p>\u5b89\u88c5</p> <p><code>\u7565</code></p> </li> <li> <p>\u914d\u7f6e</p> </li> </ul> <pre><code>sudo pg_conftool 14 main set wal_level logical\nsudo pg_conftool 14 main set listen_addresses '*'\nsudo pg_conftool 14 main set shared_preload_libraries citus\n</code></pre> <pre><code>sudo vi /etc/postgresql/14/main/pg_hba.conf\n</code></pre> <ul> <li>\u521b\u5efa\u6570\u636e\u5e93\u514d\u5bc6\u7801\u767b\u5f55</li> </ul> <p><code>-- Edit .pgpass in the postgres user\u2019s home directory,    hostname:port:database:username:password</code></p>","tags":[]},{"location":"postgres/citus11/#_4","title":"\u8282\u70b9\u4fe1\u606f","text":"nodenanme IP role master01 10.10.20.11 coordinator worker01 10.10.2.12 worker worker02 10.10.2.14 worker","tags":[]},{"location":"postgres/citus11/#_5","title":"\u642d\u5efa\u96c6\u7fa4","text":"<p>\u521b\u5efadatabase&amp;extension</p> <p>\u5728\u6bcf\u4e2aworker\u8282\u70b9\u4e0a\u6267\u884c</p> <pre><code>CREATE DATABASE newbie;\n\\c newbie\nCREATE EXTENSION citus;\n</code></pre> <p>\u5728master\u63a5\u8282\u70b9\u4e0a\u6267\u884c</p> <pre><code>CREATE DATABASE newbie;\n\\c newbie\nCREATE EXTENSION citus;\nSELECT citus_set_coordinator_host('10.10.2.11', 5432);\n#\u6dfb\u52a0worker\u8282\u70b9\nSELECT * from citus_add_node('10.10.2.12', 5432);\nSELECT * from citus_add_node('10.10.2.14', 5432);\n-- ... for all of them\n</code></pre> <p>\u67e5\u770b\u96c6\u7fa4\u8282\u70b9</p> <pre><code>SELECT * FROM citus_get_active_worker_nodes();\n node_name  | node_port \n------------+-----------\n 10.10.2.12 |      5432\n 10.10.2.14 |      5432\n(2 rows)\n</code></pre> <p>\u67e5\u770b\u8282\u70b9\u5206\u8868</p> <pre><code>select * from pg_dist_node;\n nodeid | groupid |  nodename  | nodeport | noderack | hasmetadata | isactive | noderole | nodecluster | metadatasynced | shouldhaveshards \n--------+---------+------------+----------+----------+-------------+----------+----------+-------------+----------------+------------------\n      1 |       0 | 10.10.2.11 |     5432 | default  | t           | t        | primary  | default     | t              | f\n      3 |       2 | 10.10.2.12 |     5432 | default  | t           | t        | primary  | default     | t              | t\n      4 |       3 | 10.10.2.14 |     5432 | default  | t           | t        | primary  | default     | t              | t\n\n</code></pre>","tags":[]},{"location":"postgres/citus11/#_6","title":"\u8868\u7ba1\u7406","text":"","tags":[]},{"location":"postgres/citus11/#_7","title":"\u8868\u7c7b\u578b","text":"<ul> <li>\u672c\u5730\u8868</li> <li>\u53c2\u8003\u8868</li> <li>\u5206\u5e03\u8868</li> </ul>","tags":[]},{"location":"postgres/citus11/#_8","title":"\u672c\u5730\u8868","text":"<p>\u4e0e\u4f20\u7edf\u8868\u4f7f\u7528\u65b9\u5f0f\u4e00\u81f4\uff0c\u6570\u636e\u53ea\u5b58\u653e\u5728master\u8282\u70b9</p>","tags":[]},{"location":"postgres/citus11/#_9","title":"\u53c2\u8003\u8868","text":"<p>\u6bcf\u4e2a\u8282\u70b9(master , worker)\u5305\u542b\u4e00\u4efd\u8868\u7684\u6240\u6709\u6570\u636e\uff0c\u5bf9\u8868\u7684DML\u91c7\u75282pc\u3002\u9002\u7528\u4e8e\u5b58\u653e\u4e1a\u52a1\u5143\u6570\u636e\uff0c\u4fbf\u4e8e\u4e0e\u5206\u5e03\u8868\u8054\u5408\u67e5\u8be2\u4f7f\u7528</p>","tags":[]},{"location":"postgres/citus11/#_10","title":"\u5206\u5e03\u8868","text":"<p>\u6839\u636e\u5206\u5e03\u952e\uff08\u901a\u5e38\u4e3a\u8868\u7684\u6307\u5b9a\u5217\uff09\uff0c\u5c06\u6570\u636e\u5206\u5e03\u5230\u6bcf\u4e2aworker\u8282\u70b9\u4e2d\u3002\u6bcf\u4e2aworker\u8282\u70b9\u5305\u542b\u8868\u7684\u90e8\u5206\u6570\u636e\u5185\u5bb9</p>","tags":[]},{"location":"postgres/citus11/#_11","title":"\u67e5\u770b\u8868\u4fe1\u606f","text":"<pre><code>-- \u5305\u62ec\u53c2\u8003\u8868\u548c\u5206\u5e03\u8868\nselect * from citus_tables ;\n\n-- \u5305\u62ec\u6240\u6709\u7c7b\u578b\u7684\u8868\u53ca\u5206\u5e03\u4fe1\u606f\nselect * from citus_shards ;\n\n--- \u67e5\u770b\u5e93\u5206\u5e03\u8868size\nSELECT logicalrelid AS name,\n       pg_size_pretty(citus_table_size(logicalrelid)) AS size\n  FROM pg_dist_partition where name = '$tablename';\n\n--- \u67e5\u770b\u5206\u5e03\u8868\u5206\u5e03\u5728\u6bcf\u4e2anode\u4e0a\u7684size \nselect table_name, nodename as node_name,round(sum(shard_size)*100.0/citus_table_size(table_name),2) percent, pg_size_pretty(sum(shard_size)) as table_size_node,pg_size_pretty(citus_table_size(table_name)) AS table_size from citus_shards where citus_table_type = 'distributed' group by nodename , table_name;\n\n          table_name           | node_name  | percent | table_size_node | table_size\n-------------------------------+------------+---------+-----------------+------------\nmydistable | 10.10.2.12 |   32.60 | 1424 kB         | 4368 kB\nmydistable | 10.10.2.14 |   60.81 | 2656 kB         | 4368 kB\n(2 rows)\n\n</code></pre>","tags":[]},{"location":"postgres/citus11/#_12","title":"\u8868\u7ba1\u7406","text":"","tags":[]},{"location":"postgres/citus11/#_13","title":"\u53c2\u8003\u8868\u521b\u5efa","text":"<pre><code>SELECT create_reference_table('tablename');\n</code></pre>","tags":[]},{"location":"postgres/citus11/#_14","title":"\u5206\u5e03\u8868\u521b\u5efa","text":"<p>```istributed relations cannot have UNIQUE, EXCLUDE, or PRIMARY KEY constraints that do not include the partition column (with an equality operator if EXCLUDE) SELECT create_distributed_table('tablename', 'column');</p> <pre><code>\n####   \u6ce8\u610f\u4e8b\u9879 \n\n`distributed relations cannot have UNIQUE, EXCLUDE, or PRIMARY KEY constraints that do not include the partition column (with an equality operator if EXCLUDE)`\n\n#### \u4eb2\u548c\u6027\n\n</code></pre> <p>SELECT create_distributed_table('github_events', 'repo_id',                                 colocate_with =&gt; 'github_repo');</p> <pre><code>\n#### \u66f4\u65b0\u8868\u4eb2\u548c\u6027\n\n</code></pre> <p>SELECT update_distributed_table_colocation('A', colocate_with =&gt; 'B');</p> <pre><code>\n#### \u5206\u7247\u6570\u91cf\n\n</code></pre> <p>show citus.shard_count; set citus.shard_count = 64;</p> <pre><code>\n#### \u67e5\u770b\u9ed8\u8ba4\u5206\u5e03\u7b56\u7565\n\n````\nSELECT * FROM pg_dist_rebalance_strategy;\n````\n\n#### \u8bbe\u7f6e\u5206\u5e03\u7b56\u7565\n\n</code></pre> <p>SELECT citus_set_default_rebalance_strategy('by_disk_size');</p> <pre><code>\n#### \u8fdb\u5ea6\u67e5\u770b\n\n</code></pre> <p>SELECT * FROM get_rebalance_progress();</p> <pre><code>\n#### \u5220\u9664\u672c\u5730\u6570\u636e\n\n</code></pre> <p>-- \u5728\u5c06\u666e\u901a\u8868\u8f6c\u5316\u5316\u4e3a\u5206\u5e03\u8868\u6216\u53c2\u8003\u8868\u540e\uff0c\u6e05\u7a7a\u672c\u5730\u6570\u636e\uff0c\u5f85\u6d4b\u8bd5 SELECT truncate_local_data_after_distributing_table('tablename')</p> <pre><code>\n### \u6062\u590d\u8868\u4e3a\u672c\u5730\u8868\n\n</code></pre> <p>select undistribute_table('table_name') select undistribute_table('table_name',cascade_via_foreign_keys=&gt;true); # \u5371\u9669\u64cd\u4f5c\uff0c\u6ce8\u610f\u6240\u6709\u8868\u5173\u8054\u5173\u7cfb</p> <pre><code>\n\n\n## \u51fd\u6570\u7ba1\u7406\n\n### \u81ea\u5b9a\u4e49\u51fd\u6570\n\n</code></pre> <p>CREATE OR REPLACE FUNCTION   delete_campaign(company_id int, campaign_id int) RETURNS void LANGUAGE plpgsql AS $fn$ BEGIN   DELETE FROM campaigns    WHERE id = $2 AND campaigns.company_id = $1;   DELETE FROM ads    WHERE ads.campaign_id = $2 AND ads.company_id = $1; END; $fn$;</p> <pre><code>\n### \u81ea\u5b9a\u4e49\u51fd\u6570\u4e0b\u63a8\n\n</code></pre> <p>SELECT create_distributed_function(   'delete_campaign(int, int)', 'company_id',   colocate_with := 'campaigns' );</p> <pre><code>\n### \u67e5\u770b\u6267\u884c\u8ba1\u5212\uff0c\u67e5\u770b\u5168\u90e8\u7684task\n\n</code></pre> <p>SET citus.explain_all_tasks = 1;</p> <pre><code>\n# \u9ad8\u7ea7\u7279\u6027\n\n## \u91cd\u65b0\u5206\u5e03\n\n\u52a0\u5165\u5220\u9664\u8282\u70b9\u65f6\uff0c\u4e0d\u505c\u670d\u6570\u636e\u8fc1\u79fb\n\n</code></pre> <p>rebalance_table_shards()  #\u6240\u6709 rebalance_table_shards('tabename') #\u4e00\u4e2a\u8868</p> <pre><code>\n## \u79df\u6237\u9694\u79bb\n\n\u5927\u79df\u6237\u5355\u72ec\u5206\u914d\uff0c\u72ec\u4eabworker\u8d44\u6e90\n\n\u521b\u5efa\u5206\u914d\n\n</code></pre> <p>-- \u6839\u636e\u79df\u6237ID\u9694\u79bb\u7684\u5206\u7247 -- \u8fd4\u56de\u65b0\u7684shard id\u3002 SELECT isolate_tenant_to_new_shard('table_name', tenant_id); SELECT isolate_tenant_to_new_shard('table_name', tenant_id\uff0c'CASCADE'); \u2502 isolate_tenant_to_new_shard \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 102240 \u2502</p> <pre><code>\n\u8fc1\u79fb\u5206\u7247\n\n</code></pre> <p>SELECT nodename, nodeport   FROM citus_shards  WHERE shardid = 102240;</p> <p>--  \u5217\u51fa\u53ef\u80fd\u6301\u6709\u8be5\u5206\u7247\u7684\u53ef\u7528\u5de5\u4f5c\u8282\u70b9 SELECT * FROM master_get_active_worker_nodes();</p> <p>-- \u5c06\u5206\u7247\u79fb\u52a8\u5230\u4f60\u9009\u62e9\u7684WORK\u8282\u70b9\u4e0a --\uff08\u5b83\u4e5f\u4f1a\u79fb\u52a8\u4efb\u4f55\u7528CASCADE\u9009\u9879\u521b\u5efa\u7684\u5206\u7247\uff09\u3002 SELECT citus_move_shard_placement(   102240,   'source_host', source_port,   'dest_host', dest_port);</p> <pre><code>\n## \u65f6\u5e8f\u6570\u636e\u5206\u8868\u7ba1\u7406\n\n</code></pre> <p>-- \u81ea\u52a8\u521b\u5efa\u5206\u533a\u8868 SELECT create_time_partitions(   table_name         := 'github_events',   partition_interval := '1 month',   end_at             := now() + '12 months' );</p> <pre><code>\n</code></pre> <p>-- \u67e5\u770b\u5206\u533a\u8868 SELECT partition   FROM time_partitions  WHERE parent_table = 'github_events'::regclass;</p> <pre><code>\n\n\n## \u5f52\u6863\u6570\u636e\u5217\u5b58\n\n</code></pre> <p>--\u8f6c\u5316\u4e3a\u5217\u5b58 CALL alter_old_partitions_set_access_method(   'github_columnar_events',   '2015-01-01 06:00:00' / older_than /,   'columnar' );</p> <pre><code>\n</code></pre> <p>-- \u67e5\u770b\u8868\u7684\u5b58\u50a8\u65b9\u5f0f SELECT partition, access_method   FROM time_partitions  WHERE parent_table = 'github_columnar_events'::regclass;</p> <pre><code>\n# \u8bfb\u5199\u5206\u79bb\n\n</code></pre> <p>-- \u52a0\u5165\u6570\u636e\u5e93\u4ece\u8282\u70b9 select * from citus_add_secondary_node('new-node', 12345, 'primary-node', 12345);</p> <pre><code>\n\n\n</code></pre> <p>-- \u5f00\u542f\u8bfb\u5199\u5206\u79bb citus.use_secondary_nodes     never: (default) All reads happen on primary nodes.     always: Reads run against secondary nodes instead, and insert/update statements are disabled.</p> <pre><code>\n# \u8282\u70b9\u7ba1\u7406\n\n## \u8282\u70b9\u67e5\u770b\n\n</code></pre> <p>select * from pg_dist_node;  nodeid | groupid |  nodename  | nodeport | noderack | hasmetadata | isactive | noderole | nodecluster | metadatasynced | shouldhaveshards  --------+---------+------------+----------+----------+-------------+----------+----------+-------------+----------------+------------------       1 |       0 | 10.10.2.11 |     5432 | default  | t           | t        | primary  | default     | t              | f       3 |       2 | 10.10.2.12 |     5432 | default  | t           | t        | primary  | default     | t              | t       4 |       3 | 10.10.2.14 |     5432 | default  | t           | t        | primary  | default     | t              | t</p> <pre><code>\n## \u5220\u9664\u8282\u70b9\n\n</code></pre> <p>-- \u5220\u9664\u4e00\u4e2a\u8282\u70b9 SELECT * from citus_drain_node('10.0.0.1', 5432);</p> <pre><code>\n</code></pre> <p>-- \u5220\u9664\u591a\u4e2a\u8282\u70b9</p>","tags":[]},{"location":"postgres/citus11/#_15","title":"\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6267\u884c","text":"<p>SELECT * FROM citus_set_node_property(node_hostname, node_port, 'shouldhaveshards', false);</p>","tags":[]},{"location":"postgres/citus11/#_16","title":"citus11 \u7ba1\u7406\u624b\u518c","text":"<p>SELECT * FROM rebalance_table_shards(drain_only := true);</p> <pre><code>\n## \u66f4\u65b0\u8282\u70b9 \n\n</code></pre> <p>select * from citus_update_node(123, 'new-address', 5432);</p> <pre><code>\n## \u52a0\u5165\u5907\u7528\u8282\u70b9\n\n</code></pre> <p>select * from citus_add_inactive_node('new-node', 12345);</p> <pre><code>\n## \u6fc0\u6d3b\u5907\u7528\u8282\u70b9\n\n</code></pre> <p>select * from citus_activate_node('new-node', 12345);</p> <pre><code>\n# \u96c6\u7fa4\u5065\u5eb7\u7ba1\u7406\n\n</code></pre> <p>SELECT * FROM citus_check_cluster_node_health();</p> <pre><code>\n# \u9ad8\u53ef\u7528\u7ba1\u7406\n\n</code></pre> <p>select * from citus_add_secondary_node('new-node', 12345, 'primary-node', 12345);</p> <pre><code>\n</code></pre> <p>select * from citus_update_node(123, 'new-address', 5432); ```</p>","tags":[]},{"location":"postgres/cluster/","title":"cluster \u805a\u65cf\u8868","text":"<p>\u5b58\u50a8\u6570\u636e\u7ebf\u6027\u76f8\u5173\u6027 \u6d4b\u8bd5</p>"},{"location":"postgres/compile_kylin/","title":"kylin\u7cfb\u7edfpostgresql\u7f16\u8bd1\u5b89\u88c5","text":""},{"location":"postgres/compile_kylin/#_1","title":"\u80cc\u666f","text":"<p>\u9e92\u9e9f\u7cfb\u7edf\u9ed8\u8ba4\u81ea\u5e26postgresql10.5</p> <p>\u5b89\u88c5\u8fc7\u7a0b\u4e0ecentos\u57fa\u672c\u76f8\u540c ,</p> <p>\u6ce8\u610f\u4e8b\u9879 </p> <p>1 \u5b89\u88c5postgresql-dev </p> <p>2 \u7f16\u8bd1 postgis \u65f6./configure --with-pgconfig=/usr/bin/pg_config </p> <p>\u4f46\u662f\u5982\u679c\u60f3\u5b89\u88c5\u5176\u4ed6\u7248\u672c\u7684postgres \u9700\u4e00\u756a\u5468\u6298</p> <p>\u9996\u5148\u7b2c\u4e00\u4e2a\u95ee\u9898\u9e92\u9e9f\u7cfb\u7edf\u5bf9openssl\u8fc7\u8fdb\u884c\u6539\u9020\u3002\u5728\u7f16\u8bd1postgres\u652f\u6301ssl\u65f6\u4e0d\u80fd\u901a\u8fc7\u3002</p> <p>\u5176\u6b21\u5b89\u88c5postgres\u5176\u4ed6\u62d3\u5c55\u4e5f\u9700\u8981\u89e3\u51b3\u597d\u5404\u4e2a\u5b89\u88c5\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e5f\u6bd4\u8f83\u6f2b\u957f\u3002</p>"},{"location":"postgres/compile_kylin/#v10postgresql125","title":"\u94f6\u6cb3\u9e92\u9e9fV10\u7f16\u8bd1\u5b89\u88c5postgresql12.5","text":""},{"location":"postgres/compile_kylin/#openssl","title":"\u5b89\u88c5openssl","text":"<p>\u9e92\u9e9fv10 \u7248\u64cd\u4f5c\u7cfb\u7edfopenssl \u88ab\u6307\u5b9a\u4e49\u5b89\u88c5\u5728\u5185\u6838\u4e2d\u3002\u5728\u5b89\u88c5postgresql\u65f6\u652f\u6301openssl\u7f16\u8bd1\u4e0d\u80fd\u901a\u8fc7\u3002</p> <p>\u89e3\u51b3\u601d\u8def\uff0c\u72ec\u7acb\u5b89\u88c5openssl,postgres\u5bf9ssl \u7684\u4f9d\u8d56\u6307\u5411\u72ec\u7acb\u5b89\u88c5\u7684openssl</p> <pre><code>\u67e5\u770b\u539f\u6709\u7248\u672c\nopenssl version\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5\u5bf9\u5e94\u7248\u672c\u7684openssl\nwget https://www.openssl.org/source/openssl-1.1.1d.tar.gz\ntar -zxf openssl-1.1.1d.tar.gz \ncd openssl-1.1.1d/\n./config --prefix=/usr/local/openssl no-zlib \n</code></pre>"},{"location":"postgres/compile_kylin/#_2","title":"\u4f9d\u8d56\u5305\u5b89\u88c5","text":"<pre><code>yum install openldap-devel\nyum install systemd-devel -y\n\n</code></pre>"},{"location":"postgres/compile_kylin/#postgres","title":"\u5b89\u88c5postgres","text":"<pre><code>tar -zxf postgresql-12.5.tar.gz \n\n\u6307\u5b9aopenssl \u8def\u5f84\n./configure --with-openssl --with-includes=/usr/local/openssl/include/openssl --with-libraries=/usr/local/openssl/lib/ --with-systemd\n\n./configure '--enable-rpath' '--prefix=/usr/pgsql-12' '--includedir=/usr/pgsql-12/include' '--libdir=/usr/pgsql-12/lib' '--mandir=/usr/pgsql-12/share/man' '--datadir=/usr/pgsql-12/share' '--with-icu' '--with-llvm' '--with-perl' '--with-python' '--with-tcl' '--with-tclconfig=/usr/lib64' '--with-openssl' '--with-pam' '--with-gssapi' '--with-includes=/usr/include:/usr/local/openssl/include/openssl' '--with-libraries=/usr/lib64:/usr/local/openssl/lib' '--enable-nls' '--enable-dtrace' '--with-uuid=e2fs' '--with-libxml' '--with-libxslt' '--with-ldap' '--with-selinux' '--with-systemd' '--with-system-tzdata=/usr/share/zoneinfo' '--sysconfdir=/etc/sysconfig/pgsql' '--docdir=/usr/pgsql-12/doc' '--htmldir=/usr/pgsql-12/doc/html' 'CFLAGS=-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic' 'LDFLAGS=-Wl,--as-needed' 'LLVM_CONFIG=/usr/lib64/llvm5.0/bin/llvm-config' 'CLANG=/opt/rh/llvm-toolset-7/root/usr/bin/clang' 'PKG_CONFIG_PATH=:/usr/lib64/pkgconfig:/usr/share/pkgconfig' 'PYTHON=/usr/bin/python2'\n\n./configure '--enable-rpath' '--prefix=/usr/pgsql-12' '--includedir=/usr/pgsql-12/include' '--libdir=/usr/pgsql-12/lib' '--mandir=/usr/pgsql-12/share/man' '--datadir=/usr/pgsql-12/share'  '--with-perl' '--with-python' '--with-openssl' '--with-pam' '--with-gssapi' '--with-includes=/usr/include:/usr/local/openssl/include/openssl' '--with-libraries=/usr/lib64:/usr/local/openssl/lib' '--enable-nls' '--enable-dtrace' '--with-uuid=e2fs' '--with-ldap' '--with-selinux' '--with-systemd' '--with-system-tzdata=/usr/share/zoneinfo' \n</code></pre>"},{"location":"postgres/compile_kylin/#postgis","title":"\u5b89\u88c5postgis","text":"<pre><code>http://postgis.net/source/  \n\nYou will also need to install and/or build GEOS, Proj, GDAL, LibXML2 and JSON-C.\n</code></pre> <p>yum install libxml2 libxml2-devel.aarch64  yum install proj-devel yum install sqlite yum install sqlite-devel.aarch64  -y yum install curl-devel</p> <p>make proj-6</p> <p>yum erase proj # \u5c06\u539f\u6765\u7cfb\u7edf\u81ea\u5e26\u7684\u5220\u9664</p> <pre><code>\n</code></pre> <p>gdal-3.1.4</p> <pre><code>wget http://download.osgeo.org/geos/geos-3.8.1.tar.bz2\ntar -jxf geos-3.8.1.tar.bz2\ncd geos-3.8.1\nmake\nmake install\n</code></pre> <p>wget https://download.osgeo.org/postgis/source/postgis-3.0.2.tar.gz</p> <p>./configure --with-pgconfig=/usr/pgsql-12/bin/pg_config --with-geosconfig=/usr/local/bin/geos-config</p> <pre><code>-------------- Dependencies -------------- \n  GEOS config:          /usr/local/bin/geos-config\n  GEOS version:         3.8.1\n  GDAL config:          /usr/local/bin/gdal-config\n  GDAL version:         3.1.4\n  PostgreSQL config:    /usr/pgsql-12/bin/pg_config\n  PostgreSQL version:   PostgreSQL 12.5\n  PROJ4 version:        63\n  Libxml2 config:       /usr/bin/xml2-config\n  Libxml2 version:      2.9.8\n  JSON-C support:       no\n  protobuf support:     no\n  PCRE support:         yes\n  Perl:                 /usr/bin/perl\n  Wagyu:                no\n\n</code></pre> <p>\u95ee\u9898</p> <pre><code>ldd /usr/pgsql-12/lib/postgis-3.so\n    linux-vdso.so.1 (0x0000fffdf6fa0000)\n    libgeos_c.so.1 =&gt; not found\n    libproj.so.15 =&gt; not found\n    libxml2.so.2 =&gt; /lib64/libxml2.so.2 (0x0000fffdf6cc0000)\n    libz.so.1 =&gt; /lib64/libz.so.1 (0x0000fffdf6c80000)\n    liblzma.so.5 =&gt; /lib64/liblzma.so.5 (0x0000fffdf6c30000)\n    libm.so.6 =&gt; /lib64/libm.so.6 (0x0000fffdf6b60000)\n    libdl.so.2 =&gt; /lib64/libdl.so.2 (0x0000fffdf6b30000)\n    libc.so.6 =&gt; /lib64/libc.so.6 (0x0000fffdf69a0000)\n    /lib/ld-linux-aarch64.so.1 (0x0000fffdf6fb0000)\n    libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x0000fffdf6960000)\n</code></pre> <p>\u89e3\u51b3</p> <pre><code>#\u65b0\u5efa\u6587\u4ef6\nvi /etc/ld.so.conf.d/postgis.conf\n#\u6dfb\u52a0\n/usr/local/lib\n\u751f\u6548\nldconfig \n</code></pre> <p>\u67e5\u770b</p> <pre><code>ldd /usr/pgsql-12/lib/postgis-3.so\n    linux-vdso.so.1 (0x0000fffdd96a0000)\n    libgeos_c.so.1 =&gt; /usr/local/lib/libgeos_c.so.1 (0x0000fffdd94f0000)\n    libproj.so.15 =&gt; /usr/local/lib/libproj.so.15 (0x0000fffdd9230000)\n    libxml2.so.2 =&gt; /lib64/libxml2.so.2 (0x0000fffdd90a0000)\n    libz.so.1 =&gt; /lib64/libz.so.1 (0x0000fffdd9060000)\n    liblzma.so.5 =&gt; /lib64/liblzma.so.5 (0x0000fffdd9010000)\n    libm.so.6 =&gt; /lib64/libm.so.6 (0x0000fffdd8f40000)\n    libdl.so.2 =&gt; /lib64/libdl.so.2 (0x0000fffdd8f10000)\n    libc.so.6 =&gt; /lib64/libc.so.6 (0x0000fffdd8d80000)\n    libgeos-3.8.1.so =&gt; /usr/local/lib/libgeos-3.8.1.so (0x0000fffdd8b90000)\n    libstdc++.so.6 =&gt; /lib64/libstdc++.so.6 (0x0000fffdd89e0000)\n    libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x0000fffdd89a0000)\n    libsqlite3.so.0 =&gt; /lib64/libsqlite3.so.0 (0x0000fffdd8870000)\n    libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x0000fffdd8830000)\n    /lib/ld-linux-aarch64.so.1 (0x0000fffdd96b0000)\n</code></pre>"},{"location":"postgres/compile_kylin/#pipelinedb","title":"pipelinedb","text":"<p>\u7f16\u8bd1\u5b89\u88c5zeromq</p> <pre><code>#!/bin/bash                                                                       \n\n\n      # pkg-config may not be necessary to install on all systems  \n      sudo apt-get install -y wget libtool autoconf automake pkg-config  \n\n\n      wget https://github.com/zeromq/libzmq/releases/download/v4.2.5/zeromq-4.2.5.tar.gz &amp;&amp; \\  \n          tar -xvf zeromq-4.2.5.tar.gz &amp;&amp; \\  \n          cd zeromq-4.2.5/ &amp;&amp; \\  \n          ./autogen.sh &amp;&amp; \\  \n          ./configure CPPFLAGS=-DPIC CFLAGS=-fPIC CXXFLAGS=-fPIC LDFLAGS=-fPIC --prefix=/usr &amp;&amp; \\  \n          make &amp;&amp; \\  \n          make install\n</code></pre>"},{"location":"postgres/daily_management/","title":"\u6570\u636e\u5e93\u65e5\u5e38\u7ba1\u7406","text":""},{"location":"postgres/daily_management/#_1","title":"\u65e5\u5e38\u7ba1\u7406","text":"<ul> <li>\u53ef\u7528\u6027</li> <li>\u76d1\u6d4b\u9879</li> </ul>"},{"location":"postgres/daily_management/#_2","title":"\u53ef\u7528\u6027","text":"<ul> <li>\u4e3b\u4ece</li> <li>HA</li> <li>\u5168\u91cf\u5907\u4efd</li> <li>\u589e\u91cf\u5907\u4efd</li> <li>\u6062\u590d</li> </ul>"},{"location":"postgres/daily_management/#_3","title":"\u76d1\u6d4b\u9879","text":""},{"location":"postgres/daily_management/#_4","title":"\u78c1\u76d8\u7a7a\u95f4","text":"<ul> <li>\u5168\u5e93</li> </ul> <pre><code>select pg_size_pretty(sum(pg_database_size(oid))) from pg_database;\n</code></pre> <ul> <li>\u6570\u636e\u5e93</li> </ul> <pre><code>select datname, pg_size_pretty(pg_database_size(oid)) from pg_database order by pg_database_size(oid) desc limit 10;\n</code></pre> <ul> <li>\u8868\u603b</li> </ul> <pre><code> SELECT table_schema || '.' || table_name AS table_full_name, pg_size_pretty(pg_total_relation_size('\"' || table_schema || '\".\"' || table_name || '\"')) AS size\nFROM information_schema.tables where table_schema = 'public' ORDER BY pg_total_relation_size('\"' || table_schema || '\".\"' || table_name || '\"') DESC limit 10;\n</code></pre> <ul> <li> <p>\u8868</p> </li> <li> <p>\u7d22\u5f15</p> </li> </ul>"},{"location":"postgres/daily_management/#_5","title":"\u51b7\u70ed\u6570\u636e","text":"<ul> <li>\u4e0a\u6b21\u7edf\u8ba1\u4fe1\u606f\u66f4\u65b0\u65f6\u95f4</li> <li>\u70ed\u8868dml    qps io</li> <li>\u70ed\u8868qdml</li> <li>\u51b7\u6570\u636e</li> <li>\u51b7\u7d22\u5f15</li> </ul>"},{"location":"postgres/daily_management/#_6","title":"\u7d22\u5f15\u5229\u7528","text":"<ul> <li>\u5168\u8868\u626b\u63cf\u6b21\u6570</li> <li>\u5168\u8868\u626b\u63cf\u8bb0\u5f55\u6570</li> <li>\u9009\u62e9\u6027\u53ef\u80fd\u4e0d\u597d\u7684\u7d22\u5f15</li> <li>\u5229\u7528\u7387\u4f4e\u7684\u7d22\u5f15</li> <li>\u5229\u7528\u7387\u9ad8\u7684\u7d22\u5f15</li> </ul>"},{"location":"postgres/daily_management/#_7","title":"\u8868\u81a8\u80c0","text":"<ul> <li>\u8868</li> <li>\u7d22\u5f15</li> <li>\u7cfb\u7edf\u81a8\u80c0\u65f6\u95f4\u70b9</li> <li>\u5f15\u53d1\u81ea\u52a8\u56de\u6536\u6b21\u6570</li> <li>\u5173\u95ed\u81ea\u52a8\u56de\u6536</li> </ul>"},{"location":"postgres/daily_management/#checkpiont","title":"checkpiont","text":"<ul> <li>\u9891\u7387</li> <li>wal\u81a8\u80c0</li> </ul>"},{"location":"postgres/daily_management/#_8","title":"\u9501","text":"<ul> <li>\u9501\u7b49\u5f85</li> <li>\u6b7b\u9501\u6b21\u6570 \u52a0\u5165\u5b9e\u65f6\u76d1\u63a7</li> <li>\u56de\u6eda\u6b21\u6570 \u52a0\u5165\u5b9e\u65f6\u76d1\u63a7</li> <li>\u9501\u4ea7\u751f\u7684\u67e5\u8be2\u53d6\u6d88 \u52a0\u5165\u5b9e\u65f6\u76d1\u63a7</li> </ul>"},{"location":"postgres/daily_management/#sql","title":"SQL","text":"<ul> <li>\u603b\u8017\u65f6</li> <li>io\u8017\u65f6</li> <li>\u6027\u80fd\u6296\u52a8</li> <li>\u5185\u5b58</li> <li>\u4e34\u65f6\u7a7a\u95f4</li> <li>\u957f\u4e8b\u52a1</li> <li>\u6162\u67e5\u8be2</li> </ul>"},{"location":"postgres/dba/","title":"DBA \u65e5\u5e38","text":""},{"location":"postgres/dba/#_1","title":"\u5907\u4efd \u6062\u590d","text":"<p>\u65f6\u65f6\u70ed\u5907 \u5b9a\u671f\u51b7\u5907 </p>"},{"location":"postgres/dba/#_2","title":"\u5347\u7ea7","text":"<p>\u6bcf\u5e74\u5927\u7248\u672c\u5c0f\u7248\u672c\u5347\u7ea7\uff0c\u65b0\u7279\u6027\u8c03\u7814\uff0c\u6027\u80fd\u6d4b\u8bd5\uff0c\u7a33\u5b9a\u6027\u3002 \u53ef\u7528\u5f53\u524d\u6700\u65b0\u7684\u4e0a\u4e00\u4e2a\u7248\u672c\u3002</p>"},{"location":"postgres/dba/#ha","title":"HA","text":"<p>\u624b\u52a8 \u81ea\u52a8  </p> <p>\u8bfb\u5199\u5206\u79bb sharding \u591a\u526f\u672c</p>"},{"location":"postgres/dba/#_3","title":"\u5b89\u5168","text":"<p>\u6743\u9650\u7ba1\u7406  \u8d44\u6e90\u9694\u79bb </p>"},{"location":"postgres/dba/#_4","title":"\u5ba1\u8ba1","text":"<p>ddl \u6162sql \u9501\u957f\u65f6\u95f4\u5360\u7528     </p>"},{"location":"postgres/dba/#_5","title":"\u5de1\u68c0","text":"<p>\u5b9a\u671f\u5de1\u68c0 awr \u62a5\u544a   </p>"},{"location":"postgres/dba/#_6","title":"\u76d1\u63a7","text":"<p>\u7cfb\u7edf \u6570\u636e\u5e93  </p>"},{"location":"postgres/dba/#_7","title":"\u8bca\u65ad \u4f18\u5316","text":""},{"location":"postgres/dba/#_8","title":"\u80cc\u666f","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u7684\u91ce\u86ee\u751f\u957f\uff0c\u7531\u4ea7\u54c1\u4e3a\u9a71\u52a8\u7684\u5f00\u53d1\uff0c\u4e00\u5207\u4ee5\u5feb\u901f\u4e0a\u7ebf\u4e3a\u76ee\u6807\uff0c\u5728\u5feb\u901f\u8fed\u4ee3\u7684\u8f93\u51fa\u4e2d\u5f88\u96be\u6709\u8d28\u91cf\u7684\u4fdd\u8bc1\u3002</p> <p>\u8fd0\u7ef4\u4eba\u5458\u548cdba\u5f80\u5f80\u4f1a\u5145\u5f53\u6551\u706b\u961f\u5458\uff0c\u8fdb\u5165\u6076\u6027\u5faa\u73af\u3002\u7a0b\u5e8f\u6216\u67b6\u6784\u8bbe\u8ba1\u4e0d\u5408\u7406\uff0c\u5bfc\u81f4\u6570\u636e\u5e93\u4f7f\u7528\u6027\u80fd\u4e0d\u4f73\uff0c\u7a0d\u5fae\u6765\u70b9\u4e1a\u52a1\u91cf\u5c31\u5bfc\u81f4\u6570\u636e\u5e93\u8d1f\u8f7d\u5347\u9ad8\u5f71\u54cd\u4e1a\u52a1\u3002</p>"},{"location":"postgres/dba/#_9","title":"\u600e\u4e48\u529e","text":""},{"location":"postgres/dba/#_10","title":"\u68b3\u7406\u8d23\u4efb\u5212\u5206","text":"<p>\u5fc5\u987b\u6709\u660e\u786e\u7684\u8d23\u4efb\u5212\u5206\uff0c\u5e76\u4e0d\u662f\u7a0b\u5e8f\u4e0a\u7ebf\u540e\u9664\u4e86\u95ee\u9898\u5168\u90e8\u90fd\u662f\u8fd0\u7ef4\u4eba\u5458\u7684\u8d23\u4efb\uff0c\u5982\u679c\u662f\u7a0b\u5e8f\u7684\u95ee\u9898\u5bfc\u81f4\u7684\u6545\u969c\uff0c\u5e94\u8be5\u5c06\u8d23\u4efb\u8ffd\u7a76\u5230\u7814\u53d1\u56e2\u961f\u3002</p> <p>\u8ffd\u8d23\u53ef\u4ee5\u4f5c\u4e3a\u7814\u53d1\u4e0e\u8fd0\u7ef4\u7684\u5171\u540cKPI\u8003\u6838\u6307\u6807\uff0c\u8fd9\u6837\u7814\u53d1\u624d\u6709\u52a8\u529b\u628a\u7a0b\u5e8f\u5f00\u53d1\u597d\uff0c\u800c\u4e0d\u662f\u91ce\u86ee\u778e\u641e\u3002</p>"},{"location":"postgres/dba/#_11","title":"\u5efa\u7acb\u7a0b\u5e8f\u4ea4\u4ed8\u6807\u51c6","text":"<p>\u5fc5\u987b\u5efa\u7acb\u5e94\u7528\u4ea4\u4ed8\u7ed9\u8fd0\u7ef4\u7684\u4ea4\u4ed8\u6807\u51c6\uff0c\u7a0b\u5e8f\u4e0a\u7ebf\u524d\uff0c\u5fc5\u987b\u8981\u7b26\u5408\u8fd0\u884c\u4ea4\u4ed8\u6807\u51c6\u624d\u5141\u8bb8\u4e0a\u7ebf\u3002</p>"},{"location":"postgres/dba/#_12","title":"\u5fc5\u987b\u5305\u62ec\u8bd5\u8fd0\u884c","text":"<p>\u5546\u7528\u524d\uff0c\u5fc5\u987b\u6709\u8bd5\u8fd0\u884c\u9636\u6bb5\u3002\u5efa\u7acb\u7ea6\u675f\u673a\u5236\uff0c\u4f8b\u5982\u8bd5\u8fd0\u884c\u9636\u6bb5\u5982\u679c\u6709N\u6b21\u5e94\u7528\u5f15\u8d77\u7684\u6545\u969c\u6216\u5df2\u53d1\u73b0\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u7a0b\u5e8fBUG\uff0c\u7814\u53d1\u5fc5\u987b\u5168\u90e8\u89e3\u51b3\u540e\uff0c\u624d\u5141\u8bb8\u5546\u7528\u3002</p>"},{"location":"postgres/dba/#_13","title":"\u53d8\u66f4\u5236\u5ea6","text":"<p>\u5efa\u7acb\u53d8\u66f4\u5236\u5ea6\uff0c\u64cd\u4f5c\u89c4\u8303\uff0c\u5c3d\u91cf\u907f\u514d\u53d8\u66f4\u5e26\u6765\u7684\u95ee\u9898\u3002</p>"},{"location":"postgres/dba/#_14","title":"\u5f00\u53d1\u89c4\u7ea6","text":"<p>\u4e8b\u524d\u9632\u8303\uff0c\u5efa\u7acb\u5f00\u53d1\u89c4\u7ea6\uff0c\u907f\u514d\u5f00\u53d1\u9636\u6bb5\u5f15\u5165\u7684\u95ee\u9898\u3002</p>"},{"location":"postgres/dba/#_15","title":"\u57f9\u8bad","text":"<p>\u7ecf\u5e38\u7ed9\u5f00\u53d1\u57f9\u8bad\uff0c\u8ba9\u4ed6\u4eec\u719f\u6089\u6570\u636e\u5e93\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u907f\u514d\u8e29\u5751\u3002</p>"},{"location":"postgres/dba/#sql","title":"SQL\u5ba1\u6838\u673a\u5236","text":"<p>\u5efa\u7acb\u81ea\u52a8\u5316\u6216\u4eba\u4e3a\u7684\u5ba1\u6838\u673a\u5236\uff0c\u6d89\u53ca\u6570\u636e\u5e93\u53d8\u66f4\uff0c\u65b0\u589eSQL\u90fd\u5fc5\u987b\u7ecf\u8fc7\u5ba1\u6838\u3002</p>"},{"location":"postgres/dba/#_16","title":"\u6570\u636e\u5e93\u751f\u547d\u5468\u671f\u7ba1\u7406","text":"<p>\u5efa\u7acb\u5065\u5168\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\u5236\u5ea6\u3002</p>"},{"location":"postgres/debezium/","title":"\u5229\u7528debezium \u5b9e\u73b0\u6570\u636e\u53d8\u66f4\u6355\u83b7","text":"<p>\u6574\u4e2a\u5b9e\u73b0\u4ee5\u529f\u80fd\u6f14\u793a\u4e3a\u76ee\u6807\uff0c\u4fbf\u4e8e\u6d41\u7a0b\u7684\u68b3\u7406\u548c\u7406\u89e3\u3002\u4e0d\u9002\u5408\u6b63\u5f0f\u751f\u6210\u73af\u5883\u4f7f\u7528\u3002</p>","tags":[]},{"location":"postgres/debezium/#debezium","title":"debezium\u7684\u51e0\u79cd\u4f7f\u7528\u65b9\u5f0f","text":"<ul> <li>\u5355\u72ec\u90e8\u7f72 \u4e0b\u6e38\u6570\u636e\u4f20\u8f93\u5230cloud\uff0c\u5b98\u65b9\u76ee\u524d\u4e0d\u63a8\u8350</li> <li>\u4e0ekafka\u8054\u5408\u4f7f\u7528 \u4e0b\u6e38\u6570\u636e\u4f20\u8f93\u5230kafka</li> <li>\u5d4c\u5165\u5f0f \u4f8b\u5982Flink\u4f7f\u7528\u7684debezium\u4f5c\u4e3a\u6570\u636e\u7684source connetor\u6a21\u5757\u4f7f\u7528\uff0c\u5c06\u6570\u636e\u63a5\u5165\u5230Flink\u4e2d</li> </ul> <p>\u8fd9\u91cc\u4f7f\u7528\u4e0ekafka\u8054\u5408\u4f7f\u7528\u7684\u65b9\u5f0f\uff0c\u5c06\u6e90\u7aef\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u53ca\u53d8\u66f4\u5bfc\u5165\u5230kafka\u4e2d\uff0c\u6765\u63d0\u4f9b\u4e0b\u6e38\u4f7f\u7528\u3002</p>","tags":[]},{"location":"postgres/debezium/#mysql-cdc","title":"mysql cdc","text":"<p>\u6e90\u7aef\u6570\u636e\u5e93\u4e3amysql\uff0c \u5229\u7528Debezium \u6355\u83b7mysql\u6570\u636e\u53ca\u53d8\u5316\uff0c\u5e76\u5b9e\u65f6\u5bfc\u5165\u5230kafka\u4e2d\u3002</p>","tags":[]},{"location":"postgres/debezium/#topology","title":"Topology","text":"<pre><code>                   +-------------+\n                   |             |\n                   |    MySQL    |\n                   |             |\n                   +------+------+\n                          |\n                          |\n                          |\n          +---------------v------------------+\n          |                                  |\n          |           Kafka Connect          |\n          |  (Debezium, JDBC connectors)     |\n          |                                  |\n          +---------------+------------------+\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_1","title":"\u542f\u52a8\u670d\u52a1","text":"<pre><code>-- \u542f\u52a8zk\ndocker run -it --rm --name zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 quay.io/debezium/zookeeper:1.9\n\n-- \u542f\u52a8kafka\ndocker run -it --rm --name kafka -p 9092:9092 --link zookeeper:zookeeper quay.io/debezium/kafka:1.9\n\n-- \u542f\u52a8mysql\ndocker run -it --rm --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=debezium -e MYSQL_USER=mysqluser -e MYSQL_PASSWORD=mysqlpw quay.io/debezium/example-mysql:1.9\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_2","title":"\u8bbf\u95ee\u6e90\u6570\u636e\u5e93","text":"<pre><code>-- \u5229\u7528mysql client \u767b\u5f55mysql\u6570\u636e\u5e93\ndocker run -it --rm --name mysqlterm --link mysql --rm mysql:8.0 sh -c 'exec mysql -h\"$MYSQL_PORT_3306_TCP_ADDR\" -P\"$MYSQL_PORT_3306_TCP_PORT\" -uroot -p\"$MYSQL_ENV_MYSQL_ROOT_PASSWORD\"'\nmysql&gt; use inventory;\nmysql&gt; show tables;\n+---------------------+\n| Tables_in_inventory |\n+---------------------+\n| addresses           |\n| customers           |\n| geom                |\n| orders              |\n| products            |\n| products_on_hand    |\n+---------------------+\nmysql&gt; SELECT * FROM customers;\n+------+------------+-----------+-----------------------+\n| id   | first_name | last_name | email                 |\n+------+------------+-----------+-----------------------+\n| 1001 | Sally      | Thomas    | sally.thomas@acme.com |\n| 1002 | George     | Bailey    | gbailey@foobar.com    |\n| 1003 | Edward     | Walker    | ed@walker.com         |\n| 1004 | Anne       | Kretchmar | annek@noanswer.org    |\n+------+------------+-----------+-----------------------+\n4 rows in set (0.00 sec)\n</code></pre>","tags":[]},{"location":"postgres/debezium/#kafka-connect","title":"\u542f\u52a8kafka connect","text":"<pre><code>\u542f\u52a8\ndocker run -it --rm --name connect -p 8083:8083 -e GROUP_ID=1 -e CONFIG_STORAGE_TOPIC=my_connect_configs -e OFFSET_STORAGE_TOPIC=my_connect_offsets -e STATUS_STORAGE_TOPIC=my_connect_statuses --link zookeeper:zookeeper --link kafka:kafka --link mysql:mysql quay.io/debezium/connect:1.9\n\u9a8c\u8bc1\ncurl -H \"Accept:application/json\" localhost:8083/\n{\"version\":\"3.2.0\",\"commit\":\"cb8625948210849f\"} \n</code></pre>","tags":[]},{"location":"postgres/debezium/#mysql-source-connector","title":"\u6ce8\u518c MySQL source connector","text":"<pre><code>-- \u6ce8\u518c\n$ curl -i -X POST -H \"Accept:application/json\" -H \"Content-Type:application/json\" localhost:8083/connectors/ -d '{ \"name\": \"inventory-connector\", \"config\": { \"connector.class\": \"io.debezium.connector.mysql.MySqlConnector\", \"tasks.max\": \"1\", \"database.hostname\": \"mysql\", \"database.port\": \"3306\", \"database.user\": \"debezium\", \"database.password\": \"dbz\", \"database.server.id\": \"184054\", \"database.server.name\": \"dbserver1\", \"database.include.list\": \"inventory\", \"database.history.kafka.bootstrap.servers\": \"kafka:9092\", \"database.history.kafka.topic\": \"dbhistory.inventory\" } }'\n\n-- \u67e5\u770b\u6ce8\u518c\u7684connector \u60c5\u51b5\n$ curl -H \"Accept:application/json\" localhost:8083/connectors/\n$ curl -H  \"Content-Type:application/json\" http://localhost:8083/connectors/inventory-connector | jq\n$ curl -H  \"Content-Type:application/json\" http://localhost:8083/connectors/inventory-connector/status | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#change-events","title":"\u89c2\u5bdf change events","text":"<p>\u200b       \u8fd9\u91cc\u53ef\u4ee5\u5bf9mysql\u6570\u636e\u8fdb\u884cdml\u64cd\u4f5c\uff0c\u5b9e\u65f6\u89c2\u5bdf\u6570\u636e\u53d8\u66f4\u6355\u83b7\u60c5\u51b5</p> <pre><code>$ docker run -it --rm --name watcher --link zookeeper:zookeeper --link kafka:kafka quay.io/debezium/kafka:1.9 watch-topic -a -k dbserver1.inventory.customers\n</code></pre>","tags":[]},{"location":"postgres/debezium/#postgres-cdc","title":"postgres cdc","text":"<p>\u6e90\u7aef\u6570\u636e\u5e93\u4e3apostgres\uff0c \u5229\u7528Debezium \u6355\u83b7postgres\u6570\u636e\u53ca\u53d8\u5316\uff0c\u5e76\u5b9e\u65f6\u5bfc\u5165\u5230kafka\u4e2d\u3002</p>","tags":[]},{"location":"postgres/debezium/#topology_1","title":"Topology","text":"<pre><code>                   +-------------+\n                   |             |\n                   |    MySQL    |\n                   |             |\n                   +------+------+\n                          |\n                          |\n                          |\n          +---------------v------------------+\n          |                                  |\n          |           Kafka Connect          |\n          |  (Debezium, JDBC connectors)     |\n          |                                  |\n          +---------------+------------------+\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_3","title":"\u914d\u7f6e\u6587\u4ef6\u51c6\u5907","text":"<p>\u8fd9\u91cc\u5229\u7528docker-compose \u4e00\u952e\u542f\u52a8\u6240\u6709\u670d\u52a1</p> <ul> <li>docker-compost-postgres.yaml</li> <li>register-postgres.json </li> </ul> <p>docker-compost-postgres.yaml</p> <pre><code>version: '2'\nservices:\n  zookeeper:\n    image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}\n    ports:\n     - 2181:2181\n     - 2888:2888\n     - 3888:3888\n  kafka:\n    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}\n    ports:\n     - 9092:9092\n    links:\n     - zookeeper\n    environment:\n     - ZOOKEEPER_CONNECT=zookeeper:2181\n  postgres:\n    image: quay.io/debezium/example-postgres:${DEBEZIUM_VERSION}\n    ports:\n     - 5432:5432\n    environment:\n     - POSTGRES_USER=postgres\n     - POSTGRES_PASSWORD=postgres\n  connect:\n    image: quay.io/debezium/connect:${DEBEZIUM_VERSION}\n    ports:\n     - 8083:8083\n    links:\n     - kafka\n#     - postgres\n    environment:\n     - BOOTSTRAP_SERVERS=kafka:9092\n     - GROUP_ID=1\n     - CONFIG_STORAGE_TOPIC=my_connect_configs\n     - OFFSET_STORAGE_TOPIC=my_connect_offsets\n     - STATUS_STORAGE_TOPIC=my_connect_statuses\n# For testing newer connector versions, unpack the connector archive into this\n# directory and uncomment the lines below\n#    volumes:\n#     - ./debezium-connector-postgres:/kafka/connect/debezium-connector-postgres\n</code></pre> <p>\u200b      register-postgres.json</p> <pre><code>{\n    \"name\": \"inventory-connector\",\n    \"config\": {\n        \"connector.class\": \"io.debezium.connector.postgresql.PostgresConnector\",\n        \"tasks.max\": \"1\",\n        \"database.hostname\": \"postgres\",\n        \"database.port\": \"5432\",\n        \"database.user\": \"postgres\",\n        \"database.password\": \"postgres\",\n        \"database.dbname\" : \"postgres\",\n        \"database.server.name\": \"dbserver1\",\n        \"schema.include.list\": \"inventory\"\n    }\n}\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_4","title":"\u5f00\u59cb\u6d4b\u8bd5","text":"<pre><code>export DEBEZIUM_VERSION=1.9\n# \u4e00\u952e\u542f\u52a8\u6240\u6709\u670d\u52a1\ndocker-compose -f docker-compose-postgres.yaml up\n\n# Start Postgres connector\ncurl -i -X POST -H \"Accept:application/json\" -H  \"Content-Type:application/json\" http://localhost:8083/connectors/ -d @register-postgres.json\n\n# Consume messages from a Debezium topic\ndocker-compose -f docker-compose-postgres.yaml exec kafka /kafka/bin/kafka-console-consumer.sh \\\n    --bootstrap-server kafka:9092 \\\n    --from-beginning \\\n    --property print.key=true \\\n    --topic dbserver1.inventory.customers\n\n# Modify records in the database via Postgres client\ndocker-compose -f docker-compose-postgres.yaml exec postgres env PGOPTIONS=\"--search_path=inventory\" bash -c 'psql -U $POSTGRES_USER postgres'\n\n# Shut down the cluster\ndocker-compose -f docker-compose-postgres.yaml down\n\n</code></pre>","tags":[]},{"location":"postgres/debezium/#postgres-sourcer-connetor","title":"postgres sourcer connetor","text":"<p>\u533a\u522b\u4e0e\u5b98\u65b9\u63d0\u4f9b\u7684pg docker \u955c\u50cf</p> <p>\u200b   \u5b98\u65b9\u4e2d\u7684pg\u955c\u50cf\u903b\u8f91\u89e3\u7801\u4f7f\u7528\u7684\u662fdecoderbufs\uff0cwal2jon\u3002\u5bf9\u4e8epg\u7248\u672c10+ \u66f4\u63a8\u8350\u4f7f\u7528 logical \u3002\u5e76\u5229\u7528pgoutput\u8fdb\u884c\u89e3\u6790 </p>","tags":[]},{"location":"postgres/debezium/#_5","title":"\u914d\u7f6e\u7ba1\u7406","text":"<p>pg</p> <pre><code>wal_level = logical\n</code></pre> <p>\u200b      \u62e5\u6709repication \u6743\u9650\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u7528\u6237\uff0c\u8fd9\u91cc\u4f7f\u7528\u8d85\u7ea7\u7528\u6237postgres </p> <p>docker-compose-postgres.yaml</p> <p>\u52a0\u5165kakfa-ui \u8bbf\u95eeIP:8080 </p> <p>``` version: '2' services:   zookeeper:     image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}     ports:      - 2181:2181      - 2888:2888      - 3888:3888   kafka:     image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}     ports:      - 9092:9092     links:      - zookeeper     environment:      - ZOOKEEPER_CONNECT=zookeeper:2181   kafka-ui:     image: provectuslabs/kafka-ui:latest      ports:      - 8080:8080     links:      - kafka:kakfa     environment:      - KAFKA_CLUSTERS_0_NAME=mykafka      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092   connect:     image: quay.io/debezium/connect:${DEBEZIUM_VERSION}     ports:      - 8083:8083     links:      - kafka     environment:      - BOOTSTRAP_SERVERS=kafka:9092      - GROUP_ID=1      - CONFIG_STORAGE_TOPIC=my_connect_configs      - OFFSET_STORAGE_TOPIC=my_connect_offsets      - STATUS_STORAGE_TOPIC=my_connect_statuses</p>","tags":[]},{"location":"postgres/debezium/#for-testing-newer-connector-versions-unpack-the-connector-archive-into-this","title":"For testing newer connector versions, unpack the connector archive into this","text":"","tags":[]},{"location":"postgres/debezium/#directory-and-uncomment-the-lines-below","title":"directory and uncomment the lines below","text":"","tags":[]},{"location":"postgres/debezium/#volumes","title":"volumes:","text":"","tags":[]},{"location":"postgres/debezium/#-debezium-connector-postgreskafkaconnectdebezium-connector-postgres","title":"- ./debezium-connector-postgres:/kafka/connect/debezium-connector-postgres","text":"<p>```</p> <p>register-postgres.json</p> <pre><code>{\n    \"name\": \"inventory-connector\",\n    \"config\": {\n        \"connector.class\": \"io.debezium.connector.postgresql.PostgresConnector\",\n        \"database.hostname\": \"postgres\",\n        \"database.port\": \"5432\",\n        \"database.user\": \"postgres\",\n        \"database.password\": \"postgres\",\n        \"database.dbname\": \"postgres\",\n        \"database.server.name\": \"debezium\",\n        \"slot.name\": \"inventory_slot\",\n        \"table.include.list\": \"inventory.orders,inventory.products\",\n        \"publication.name\": \"dbz_inventory_connector\",\n        \"publication.autocreate.mode\": \"all_tables\",\n        \"plugin.name\": \"pgoutput\",  \n            \"topic.creation.default.replication.factor\": 3,\n            \"topic.creation.default.partitions\": 10,\n            \"topic.creation.default.cleanup.policy\": \"delete\",\n            \"topic.creation.default.compression.type\": \"lz4\"\n    }\n}\n</code></pre> <p>\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e</p> <p>https://debezium.io/documentation/reference/1.9/connectors/postgresql.html#postgresql-required-configuration-properties</p> \u5b57\u6bb5\u540d\u79f0 \u63cf\u8ff0 connector.class connector\u7684\u5b9e\u73b0\u7c7b\uff0c\u672c\u6587\u4f7f\u7528\u7684\u662fio.debezium.connector.postgresql.PostgresConnector\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6570\u636e\u5e93\u662fPostgreSQL database.hostname \u6570\u636e\u5e93\u670d\u52a1\u7684IP\u6216\u57df\u540d database.port \u6570\u636e\u5e93\u670d\u52a1\u7684\u7aef\u53e3 database.user \u8fde\u63a5\u6570\u636e\u5e93\u7684\u7528\u6237 database.password \u8fde\u63a5\u6570\u636e\u5e93\u7684\u5bc6\u7801 database.dbname \u6570\u636e\u5e93\u540d database.server.name \u6bcf\u4e2a\u88ab\u76d1\u63a7\u7684\u8868\u5728Kafka\u90fd\u4f1a\u5bf9\u5e94\u4e00\u4e2atopic\uff0ctopic\u7684\u547d\u540d\u89c4\u8303\u662f<code>&lt;database.server.name&gt;.&lt;schema&gt;.&lt;table&gt;</code> slot.name PostgreSQL\u7684\u590d\u5236\u69fd(Replication Slot)\u540d\u79f0 table.include.list \u5982\u679c\u8bbe\u7f6e\u4e86table.include.list\uff0c\u5373\u5728\u8be5list\u4e2d\u7684\u8868\u624d\u4f1a\u88abDebezium\u76d1\u63a7 plugin.name PostgreSQL\u670d\u52a1\u7aef\u5b89\u88c5\u7684\u89e3\u7801\u63d2\u4ef6\u540d\u79f0\uff0c\u53ef\u4ee5\u662fdecoderbufs, wal2json, wal2json_rds, wal2json_streaming, wal2json_rds_streaming \u548c  pgoutput\u3002\u5982\u679c\u4e0d\u6307\u5b9a\u8be5\u503c\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528decoderbufs\u3002   \u672c\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86pgoutput\uff0c\u56e0\u4e3a\u5b83\u662fPostgreSQL 10+\u81ea\u5e26\u7684\u89e3\u7801\u5668\uff0c\u800c\u5176\u4ed6\u89e3\u7801\u5668\u90fd\u5fc5\u987b\u5728PostgreSQL\u670d\u52a1\u5668\u5b89\u88c5\u63d2\u4ef6\u3002 publication.name PostgreSQL\u7aef\u7684WAL\u53d1\u5e03(publication)\u540d\u79f0\uff0c\u6bcf\u4e2aConnector\u90fd\u5e94\u8be5\u5728PostgreSQL\u6709\u81ea\u5df1\u5bf9\u5e94\u7684publication\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u90a3\u4e48publication\u7684\u540d\u79f0\u4e3adbz_publication publication.autocreate.mode \u8be5\u503c\u5728plugin.name\u8bbe\u7f6e\u4e3apgoutput\u624d\u4f1a\u6709\u6548\u3002\u6709\u4ee5\u4e0b\u4e09\u4e2a\u503c\uff1a  all_tables - debezium\u4f1a\u68c0\u67e5publication\u662f\u5426\u5b58\u5728\uff0c\u5982\u679cpublication\u4e0d\u5b58\u5728\uff0cconnector\u5219\u4f7f\u7528\u811a\u672cCREATE  PUBLICATION  FOR ALL  TABLES\u521b\u5efapublication\uff0c\u5373\u8be5\u53d1\u5e03\u8005\u4f1a\u76d1\u63a7\u6240\u6709\u8868\u7684\u53d8\u66f4\u60c5\u51b5\u3002  disabled - connector\u4e0d\u4f1a\u68c0\u67e5\u6709\u65e0publication\u5b58\u5728\uff0c\u5982\u679cpublication\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u521b\u5efaconnector\u4f1a\u62a5\u9519.  filtered - \u4e0eall_tables\u4e0d\u540c\u7684\u662f\uff0cdebezium\u4f1a\u6839\u636econnector\u7684\u914d\u7f6e\u4e2d\u7684table.include.list\u751f\u6210\u751f\u6210\u521b\u5efapublication\u7684\u811a\u672c\uff1a <code>CREATE PUBLICATION &lt;publication_name&gt; FOR TABLE &lt;tbl1, tbl2, tbl3&gt;</code>\u3002\u4f8b\u5982\uff0c\u672c\u4f8b\u5b50\u4e2d\uff0c\u201ctable.include.list\"\u503c\u4e3a\"inventory.orders,inventory.products\u201d\uff0c\u5219publication\u53ea\u4f1a\u76d1\u63a7\u8fd9\u4e24\u4e2a\u8868\u7684\u53d8\u66f4\u60c5\u51b5\u3002","tags":[]},{"location":"postgres/debezium/#_6","title":"\u5f00\u59cb\u6d4b\u8bd5","text":"<pre><code>export DEBEZIUM_VERSION=1.9\ndocker-compose -f docker-compose-postgres.yaml up\n\n# Start Postgres connector\ncurl -i -X POST -H \"Accept:application/json\" -H  \"Content-Type:application/json\" http://localhost:8083/connectors/ -d @register-postgres.json\n\n# Consume messages from a Debezium topic\ndocker-compose -f docker-compose-postgres.yaml exec kafka /kafka/bin/kafka-console-consumer.sh \\\n    --bootstrap-server kafka:9092 \\\n    --from-beginning \\\n    --property print.key=true \\\n    --topic dbserver1.inventory.orders\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_7","title":"\u6570\u636e\u5e93\u9a8c\u8bc1","text":"<pre><code>-- \u6570\u636e\u5e93\u4e2d\u6267\u884c\nselect * from pg_replication_slots where slot_name = 'inventory_slot';\n   slot_name    |  plugin  | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn | wal_status | safe_wal_size | two_phase \n----------------+----------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------+------------+---------------+-----------\n inventory_slot | pgoutput | logical   |  14486 | postgres | f         | t      |       3798 |      |          790 | 0/E7AAE90   | 0/E7AAEC8           | reserved   |               | f\n(1 row)\n\nselect * from pg_publication;\n  oid  |         pubname         | pubowner | puballtables | pubinsert | pubupdate | pubdelete | pubtruncate | pubviaroot \n-------+-------------------------+----------+--------------+-----------+-----------+-----------+-------------+------------\n 49187 | dbz_inventory_connector |       10 | f            | t         | t         | t         | t           | f\n(1 row)\n\n</code></pre>","tags":[]},{"location":"postgres/debezium/#postgres-sinker-connetor","title":"postgres sinker connetor","text":"","tags":[]},{"location":"postgres/debezium/#topology_2","title":"Topology","text":"<pre><code>                   +-------------+\n                   |             |\n                   |   Postgres  |\n                   |             |\n                   +------+------+\n                          |\n                          |\n                          |\n          +---------------v------------------+\n          |                                  |\n          |           Kafka Connect          |\n          |  (Debezium, JDBC connectors)     |\n          |                                  |\n          +---------------+------------------+\n                          |\n                          |\n                          |\n                   +-------------+\n                   |             |\n                   |   Postgres  |\n                   |    citus    |\n                   +------+------+\n\n</code></pre>","tags":[]},{"location":"postgres/debezium/#docker-citus","title":"docker  citus","text":"<pre><code># run PostgreSQL with Citus on port 5500\ndocker run -d --name citus -p 5500:5432 -e POSTGRES_PASSWORD=mypassword citusdata/citus\n\n# connect using psql within the Docker container\ndocker exec -it citus psql -U postgres\n\n# set user postgres password 111111\nalter user postgres with encrypted password '111111';\n\n# or, connect using local psql\npsql -U postgres -d postgres -h localhost -p 5500\n</code></pre> <p>plugin \u4e0b\u8f7d\u5730\u5740\uff0c\u4e0b\u8f7d\u540e\u89e3\u538b\u5230connetor \u6587\u4ef6\u76ee\u5f55\u4e0b\u5e76\u91cd\u65b0\u542f\u52a8kafka connetor</p> <p>https://www.confluent.io/hub/</p> <p>https://d1i4a15mxbxib1.cloudfront.net/api/plugins/confluentinc/kafka-connect-jdbc/versions/10.5.1/confluentinc-kafka-connect-jdbc-10.5.1.zip</p>","tags":[]},{"location":"postgres/debezium/#_8","title":"\u5355\u5f20\u8868","text":"","tags":[]},{"location":"postgres/debezium/#sink-postgresjson","title":"\u914d\u7f6e sink-postgres.json","text":"<pre><code>{\n    \"name\": \"test-jdbc-sink\",\n    \"config\": {\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\n        \"tasks.max\": \"1\",\n        \"connection.url\": \"jdbc:postgresql://10.10.2.13:5432/test?user=postgres&amp;password=111\",\n        \"connection.user\":\"postgres\",\n        \"connection.password\":\"1111\",\n        \"topics\":\"debezium.public.tablename\",\n        \"dialect.name\":\"PostgreSqlDatabaseDialect\",\n        \"table.name.format\": \"public.tablename\",\n        \"auto.create\":\"true\",\n        \"auto.evolve\":\"true\",\n        \"insert.mode\":\"upsert\",\n        \"transforms\": \"unwrap\",\n        \"transforms.unwrap.type\": \"io.debezium.transforms.ExtractNewRecordState\",\n        \"transforms.unwrap.drop.tombstones\": \"false\",\n        \"pk.fields\":\"id\",\n        \"pk.mode\":\"record_key\",\n        \"delete.enabled\" : true\n    }\n}\n</code></pre> <p>\u8bf4\u660e:</p> <pre><code>name : connector \u540d\u79f0\nconnector.xxx : sink \u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\ntopics : kafka\u4e2d\u7684topic\ndialect.name: \u65b9\u8a00\ntable.name.format : sink \u7aef\u4e0etopic \u5bf9\u5e94\u7684\u8868\u540d\u79f0\u3002 \u8868\u540d\u9ed8\u8ba4\u4e3atopic\nauto.create : \u662f\u5426\u81ea\u52a8\u5efa\u8868\ninsert.mode : insert upsert update\ndelete.enabled\uff1a \u9ed8\u8ba4false \u4e0d\u652f\u6301\u5220\u9664\u548c\u66f4\u65b0\npk.fields \uff1a \u4e3b\u952e \npk.mode \uff1a \u4e3b\u952e\u7c7b\u578b\n</code></pre> <p>\u66f4\u591a\u9009\u9879\u8bf7\u53c2\u8003 https://docs.confluent.io/kafka-connect-jdbc/current/sink-connector/sink_config_options.html</p>","tags":[]},{"location":"postgres/debezium/#sink","title":"\u6ce8\u518c sink","text":"<pre><code>curl -i -X POST -H \"Accept:application/json\" -H  \"Content-Type:application/json\" http://localhost:8083/connectors/ -d @sink-postgres.json\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_9","title":"\u591a\u8868","text":"<p>\u200b       \u9ed8\u8ba4\u60c5\u51b5table.name.format \u7684\u503c\u4e3a topics\uff0c</p> <p>\u200b        topics\u7684\u540d\u79f0\u4e3a source connection \u4e2d\u5b9a\u4e49\u7684database.server.name+schema+tablename</p> <p>\u200b       \u8fd9\u6837\u5c31\u4f1a\u5bf9source connection  \u5728\u5b9a\u4e49\u65f6\u6709\u6240\u8981\u6c42\u3002\u5373\u4e0b\u6e38\u7684dbname \u4e0e database.server.name \u5fc5\u987b\u4fdd\u6301\u4e00\u81f4</p> <p>\u200b       \u5426\u5219\u5728\u521b\u5efasink connection \u65f6\u5c06\u4f1a\u51fa\u73b0\u5982\u4e0b\u9519\u8bef</p> <p>\u200b       <code>ERROR:  cross-database references are not implemented</code></p> <p>\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u89e3\u9664\u8fd9\u79cd\u975e\u5fc5\u8981\u7684\u7ed1\u5b9a</p> <p>\u200b    \u81ea\u5b9a\u4e49topics\u3001  table.name.format \u3002\u6620\u5c04\u6e90\u8868\u4e0e\u76ee\u6807\u8868\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u597d\u5904\u662f\u975e\u5e38\u7684\u7075\u6d3b\uff0c\u5f0a\u7aef\u6bcf\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\u90fd\u9700\u8981\u5b9a\u4e49\u3002</p> <p>\u5982\u679c\u662f\u6e90\u8868\u4e0e\u76ee\u6807\u8868\u540d\u79f0\u5b8c\u5168\u4e00\u81f4\u6216\u5b58\u5728\u67d0\u79cd\u89c4\u5f8b\uff0c\u6bd4\u65b9\u52a0\u4e2a\u524d\u7f00\u7b49\u3002\u53ef\u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u6279\u91cf\u5904\u7406\u3001\u975e\u5e38\u9002\u5408\u5c06\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u5e93\u5bfc\u5230\u53e6\u4e00\u4e2a\u5e93\u4e2d\u7684\u573a\u666f\u3002</p> <p>source connetor \u7aef\u4e0d\u9700\u8981\u4fee\u6539    \u3001\u53ea\u9700\u8981\u5728 sink connetor \u7aef\u505a\u5982\u4e0b\u5b9a\u4e49\u3002\u622a\u53d6topic\u7684\u524d\u7f00</p>","tags":[]},{"location":"postgres/debezium/#sink-postgres-alltablesjson","title":"\u914d\u7f6e sink-postgres-alltables.json","text":"<pre><code>{\n    \"name\": \"test-jdbc-sink-alltables\",\n    \"config\": {\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\n        \"tasks.max\": \"1\",\n        \"connection.url\": \"jdbc:postgresql://10.10.2.13:5432/test?user=postgres&amp;password=111\",\n        \"connection.user\":\"postgres\",\n    \"connection.password\":\"1111\",\n        \"topics.regex\": \"dbserver1.public(.*)\",\n        \"transforms\": \"dropPrefix,unwrap\",\n        \"transforms.dropPrefix.type\":\"org.apache.kafka.connect.transforms.RegexRouter\",\n        \"transforms.dropPrefix.regex\":\"dbserver1.public(.*)\",\n        \"transforms.dropPrefix.replacement\":\"$1\",\n        \"transforms.unwrap.type\": \"io.debezium.transforms.ExtractNewRecordState\",\n        \"transforms.unwrap.drop.tombstones\": \"false\",\n        \"dialect.name\":\"PostgreSqlDatabaseDialect\",\n        \"auto.create\":\"true\",\n        \"insert.mode\":\"upsert\",\n        \"pk.mode\":\"record_key\",\n        \"delete.enabled\" : \"true\"\n    }\n}\n</code></pre>","tags":[]},{"location":"postgres/debezium/#kafka-connect-rest-api","title":"Kafka Connect REST API","text":"<p>\u4e3a\u4e86\u65b9\u4fbf\u67e5\u770bjson \u5efa\u8bae\u5b89\u88c5jq </p> <p><code>yum install epel-release jq -y</code></p> <p>\u5b98\u65b9\u6587\u6863</p> <p>https://kafka.apache.org/documentation.html#connect_rest</p>","tags":[]},{"location":"postgres/debezium/#connect","title":"\u83b7\u53d6 Connect \u96c6\u7fa4\u7684\u57fa\u672c\u4fe1\u606f","text":"<pre><code>curl -s -X GET localhost:8083/ | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#kafka-connect-worker","title":"\u5217\u51fa Kafka Connect Worker \u4e0a\u5b89\u88c5\u7684\u63d2\u4ef6","text":"<pre><code># curl -s -X GET localhost:8083/connector-plugins | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_10","title":"\u521b\u5efa\u4e00\u4e2a\u8fde\u63a5\u5668","text":"<pre><code>curl -i -X POST -H \"Accept:application/json\" -H \"Content-Type:application/json\" 192.168.0.40:8083/connectors/ -d @inventory-connector.json\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_11","title":"\u83b7\u53d6\u6240\u6709\u73b0\u6709\u7684\u8fde\u63a5\u5668\u540d\u79f0","text":"<pre><code># curl -s -X GET localhost:8083/connectors/ | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_12","title":"\u83b7\u53d6\u8fde\u63a5\u5668\u7684\u914d\u7f6e\u4fe1\u606f","text":"<pre><code># curl -s -X GET localhost:8083/connectors/inventory-connector | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_13","title":"\u83b7\u53d6\u8fde\u63a5\u5668\u7684\u72b6\u6001\u4fe1\u606f","text":"<pre><code># curl -s -X GET localhost:8083/connectors/inventory-connector/status | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_14","title":"\u83b7\u53d6\u5f53\u524d\u4e3a\u8fde\u63a5\u5668\u8fd0\u884c\u7684\u4efb\u52a1\u5217\u8868","text":"<pre><code># curl -s -X GET localhost:8083/connectors/inventory-connector/tasks | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_15","title":"\u83b7\u53d6\u4efb\u52a1\u7684\u5f53\u524d\u72b6\u6001","text":"<pre><code># curl -s -X GET localhost:8083/connectors/inventory-connector/tasks/0/status | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#topics","title":"\u83b7\u53d6\u8fde\u63a5\u5668\u4f7f\u7528\u7684\u4e3b\u9898(topics)\u5217\u8868","text":"<pre><code># curl -s -X GET localhost:8083/connectors/oracle-scott-connector/topics | jq\n</code></pre>","tags":[]},{"location":"postgres/debezium/#topics_1","title":"\u6e05\u7a7a\u8fde\u63a5\u5668\u7684\u6d3b\u52a8\u4e3b\u9898(topics)\u5217\u8868","text":"<pre><code># curl -s -X PUT localhost:8083/connectors/oracle-scott-connector/topics/reset\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_16","title":"\u6682\u505c\u8fde\u63a5\u5668\u4efb\u52a1","text":"<pre><code># curl -s -X PUT localhost:8083/connectors/inventory-connector/pause\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_17","title":"\u6062\u590d\u8fde\u63a5\u5668\u4efb\u52a1","text":"<pre><code># curl -s -X PUT localhost:8083/connectors/inventory-connector/resume\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_18","title":"\u5220\u9664\u8fde\u63a5\u5668","text":"<pre><code># curl -s -X DELETE localhost:8083/connectors/inventory-connector\n</code></pre>","tags":[]},{"location":"postgres/debezium/#_19","title":"\u66f4\u65b0\u8fde\u63a5\u5668","text":"<pre><code># curl -i -X PUT -H \"Accept:application/json\" -H \"Content-Type:application/json\" localhost:8083/connectors/inventory-connector/config -d @inventory-connector.json\n</code></pre>","tags":[]},{"location":"postgres/debezium/#tasks","title":"\u91cd\u542f\u8fde\u63a5\u5668\u548c\u4efb\u52a1(tasks)","text":"<ul> <li>\u8bed\u6cd5</li> </ul> <pre><code>POST /connectors/{name}/restart?includeTasks=&lt;true|false&gt;&amp;onlyFailed=&lt;true|false&gt;\n# \"includeTasks=true\": \u91cd\u65b0\u542f\u52a8\u8fde\u63a5\u5668\u5b9e\u4f8b\u548c\u4efb\u52a1\u5b9e\u4f8b\n# \"includeTasks=false\"(\u9ed8\u8ba4): \u4ec5\u91cd\u65b0\u542f\u52a8\u8fde\u63a5\u5668\u5b9e\u4f8b\n# \"onlyFailed=true\": \u4ec5\u91cd\u65b0\u542f\u52a8\u5177\u6709 FAILED \u72b6\u6001\u7684\u5b9e\u4f8b\n# \"onlyFailed=false\"(\u9ed8\u8ba4): \u91cd\u65b0\u6240\u6709\u5b9e\u4f8b\n</code></pre> <ul> <li>\u793a\u4f8b</li> </ul> <pre><code># curl -s -X POST localhost:8083/connectors/inventory-connector/restart\n</code></pre> <ul> <li>\u9ed8\u8ba4\u53ea\u91cd\u65b0\u542f\u52a8\u8fde\u63a5\u5668\u5e76\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u5176\u6240\u6709\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u60a8\u4e5f\u53ef\u4ee5\u91cd\u65b0\u542f\u52a8\u5931\u8d25\u7684\u5355\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u518d\u6b21\u83b7\u53d6\u5176\u72b6\u6001\uff1a</li> </ul> <pre><code># curl -s -X POST localhost:8083/connectors/inventory-connector/tasks/0/restart\n# curl -s -X GET localhost:8083/connectors/inventory-connector/tasks/0/status | jq\n</code></pre>","tags":[]},{"location":"postgres/delete/","title":"\u5220\u9664\u6570\u636e","text":""},{"location":"postgres/delete/#deleteupdate-limit","title":"\u5220\u9664\u6570\u636e DELETE|UPDATE LIMIT","text":"<p>\u5bf9\u6570\u636e\u8fdb\u884c\u5f52\u6863\u5b8c\u6bd5\u540e\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u6e05\u7406\u3002</p> <p>postgres \u6682\u4e0d\u652f\u6301 delete limit \u7528\u6cd5 \u3002\u6839\u636e\u6761\u4ef6\u5220\u9664\u5927\u91cf\u6570\u636e\u65f6\u3002</p> <p>\u4f7f\u7528with\u6a21\u62df\u5fc5\u987b\u6709PK\u6216\u8005\u975e\u7a7aUK</p> <pre><code>with t1 as (select id from t where create_time &lt; '2020-01-01 00:00:00' limit 10) \n                  delete from t where id in (select * from t1);\n</code></pre>"},{"location":"postgres/delete/#_2","title":"\u8868\u4e4b\u95f4\u4f9d\u8d56\u987a\u5e8f","text":"<pre><code>with recursive fk_tree as (\n  -- All tables not referencing anything else\n  select t.oid as reloid, \n         t.relname as table_name, \n         s.nspname as schema_name,\n         null::text as referenced_table_name,\n         null::text as referenced_schema_name,\n         1 as level\n  from pg_class t\n    join pg_namespace s on s.oid = t.relnamespace\n  where relkind = 'r'\n    and not exists (select *\n                    from pg_constraint\n                    where contype = 'f'\n                      and conrelid = t.oid)\n    and s.nspname = 'public' -- limit to one schema \n\n  union all \n\n  select ref.oid, \n         ref.relname, \n         rs.nspname,\n         p.table_name,\n         p.schema_name,\n         p.level + 1\n  from pg_class ref\n    join pg_namespace rs on rs.oid = ref.relnamespace\n    join pg_constraint c on c.contype = 'f' and c.conrelid = ref.oid\n    join fk_tree p on p.reloid = c.confrelid\n  where ref.oid != p.reloid  -- do not enter to tables referencing theirselves.\n), all_tables as (\n  -- this picks the highest level for each table\n  select schema_name, table_name,\n         level, \n         row_number() over (partition by schema_name, table_name order by level desc) as last_table_row\n  from fk_tree\n)\nselect schema_name, table_name, level\nfrom all_tables at\nwhere last_table_row = 1\norder by level;\n</code></pre>"},{"location":"postgres/delete/#_3","title":"\u5220\u9664\u540e\u78c1\u76d8\u7a7a\u95f4\u91ca\u653e","text":"<p>\u5220\u9664\u5927\u91cf\u6570\u636e\u540e<code>analyze</code>\u53ca\u65f6\u66f4\u65b0\u6570\u636e\u7edf\u8ba1\u4fe1\u606f </p> <p>\u5982\u9700\u56de\u6536\u5220\u9664\u6570\u636e\u6240\u5360\u7528\u7684\u7a7a\u95f4 <code>vacuum full</code> , \u6ce8\u610f\u4e8b\u9879\uff0c<code>\u00b7\u4f1a\u9501\u00b7</code>\uff0c\u5f71\u54cd\u7ebf\u4e0a\u4e1a\u52a1</p> <p>\u65e0\u9501\u65b9\u5f0f\uff0c\u53c2\u8003</p> <ul> <li>pg_repack</li> </ul>"},{"location":"postgres/dts/","title":"DTS \u6570\u636e\u8fc1\u79fb\u670d\u52a1","text":"","tags":[]},{"location":"postgres/dts/#_1","title":"\u5b9e\u73b0\u76ee\u6807","text":"<p>\u200b       \u5e73\u6ed1\u5c06\u73b0\u6709\u5728\u7ebf\u4e1a\u52a1\u6570\u636e\u5e93\u6570\u636e\u8fc1\u79fb\u5230\u65b0\u6570\u636e\u5e93\u4e2d\u3002</p> <p>\u200b        \u5982\u6570\u636e\u5e93\u5927\u7248\u672c\u5347\u7ea7\u3001\u539fpg\u6570\u636e\u5e93\u8fc1\u79fb\u5230citus\u96c6\u7fa4\u3001 \u591a\u6570\u636e\u6e90\u6c47\u603b\u7b49\u4e1a\u52a1\u573a\u666f\u3002</p>","tags":[]},{"location":"postgres/dts/#_2","title":"\u8fc1\u79fb\u524d\u539f\u5e93\u68c0\u67e5","text":"<ul> <li>\u914d\u7f6e\u68c0\u67e5</li> </ul> <p><code>-- \u6e90\u7aef   wal_level = logical   max_replication_slots = \u5927\u4e8e1    max_wal_senders =    max_worker_processes    -- \u76ee\u6807\u7aef   max_replication_slots\uff0c\u5927\u4e8e\u7b49\u4e8e\u8be5\u5b9e\u4f8b\u603b\u5171\u9700\u8981\u521b\u5efa\u7684\u8ba2\u9605\u6570   max_logical_replication_workers\uff0c\u5927\u4e8e\u7b49\u4e8e\u8be5\u5b9e\u4f8b\u603b\u5171\u9700\u8981\u521b\u5efa\u7684\u8ba2\u9605\u6570   max_worker_processes</code></p> <ul> <li>\u8868\u5fc5\u987b\u5b58\u5728\u4e3b\u952e\u6216\u552f\u4e00\u7ea6\u675f\uff0c\u4f5c\u4e3a\u590d\u5236\u6807\u8bc6\u3002</li> </ul> <p><code>-- \u6ca1\u6709\u4e3b\u952e\u6216\u7d22\u5f15\u7684\u8868   select relname as table_name from pg_stat_user_tables where relid not in (select pc.oid  from pg_class pc join pg_index pi  on pc.oid = pi.indrelid join pg_stat_user_tables psut on psut.relid = pc.oid  where indisunique = 't' and  indisprimary = 't');</code></p> <p><code>-- \u7279\u6b8a\u8868\u7684\u53d1\u5e03\u5904\u7406   alter table table_name       REPLICA IDENTITY { DEFAULT | USING INDEX index_name | FULL | NOTHING }</code></p> <ul> <li> <p>\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u907f\u514dDDL\u64cd\u4f5c</p> </li> <li> <p>\u539f\u5e93\u53d1\u751f\u6545\u969c\u5207\u6362\uff0c\u8fc1\u79fb\u5931\u8d25\u300211\u7248\u672c\u524d\u4e0d\u5177\u5907failover slot</p> </li> <li> <p>\u539f\u6570\u636e\u5fc5\u987b\u9884\u7559\u8db3\u591f\u7684\u78c1\u76d8\u7a7a\u95f4\u5b58\u50a8\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684wal\u65e5\u5fd7</p> </li> <li> <p>\u53d1\u5e03\u7aef\u9700\u4e3a\u6570\u636e\u5e93\u4e3b\u8282\u70b9</p> </li> <li> <p>\u6570\u636e\u5e93\u7528\u6237\u53ca\u6743\u9650</p> </li> <li> <p>\u6e90\u6570\u636e\u5e93\u8fde\u63a5</p> </li> </ul>","tags":[]},{"location":"postgres/dts/#_3","title":"\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>Sequence\u4e0d\u4f1a\u6309\u7167\u6e90\u5e93\u7684Sequence\u6700\u5927\u503c\u4f5c\u4e3a\u521d\u59cb\u503c\u53bb\u9012\u589e\uff0c\u9700\u8981\u5728\u4e1a\u52a1\u5207\u6362\u524d\uff0c\u5728\u6e90\u5e93\u4e2d\u67e5\u8be2\u5bf9\u5e94Sequence\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5728\u76ee\u6807\u5e93\u4e2d\u5c06\u5176\u4f5c\u4e3a\u5bf9\u5e94Sequence\u7684\u521d\u59cb\u503c\u3002</li> <li>FLOAT\u6216DOUBLE\u7684\u5217\u7684\u8fc1\u79fb\u7cbe\u5ea6\u662f\u5426\u7b26\u5408\u4e1a\u52a1\u9884\u671f</li> <li>\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u7684\u6570\u636e\u53d8\u66f4\u4ec5\u652f\u6301DML\uff0c\u5982 INSERT\u3001UPDATE\u3001DELETE\u64cd\u4f5c</li> <li>DDL \u64cd\u4f5c\u4e0d\u4f1a\u540c\u6b65\uff0c\u53ef\u4f7f\u7528\u89e6\u53d1\u5668\u5b8c\u6210</li> </ul>","tags":[]},{"location":"postgres/dts/#_4","title":"\u8fc1\u79fb\u8fc7\u7a0b","text":"<ul> <li>\u6570\u636e\u7ed3\u6784\u8fc1\u79fb</li> </ul> <p>```   -- \u5907\u4efd\u51fa\u539f\u59cb\u6570\u636e\u7ed3\u6784   pg_dump \\      --format=plain \\      --no-owner \\      --schema-only \\      --file=schema.sql \\      --schema=target_schema \\      postgres://user:pass@host:5432/db</p> <p>-- \u5728\u76ee\u6807\u7aef\u521b\u5efa\u8868\u7ed3\u6784   \\i schema.sql   -- \u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u8c03\u6574\u8868\u7ed3\u6784</p> <p>```</p> <ul> <li> <p>\u5b58\u91cf\u8fc1\u79fb</p> </li> <li> <p>\u589e\u91cf\u8fc1\u79fb</p> </li> </ul> <p>```   \u5728\u521b\u5efaslot\u65f6\uff0c\u5728\u6e90\u6570\u636e\u5e93\u7aef\u521b\u5efaSNAPSHOT\u5feb\u7167\uff0c\u57fa\u4e8e\u5feb\u7167\u5b8c\u6210\u5168\u91cf\u53ca\u589e\u91cf\u6570\u636e\u8fc1\u79fb   -- \u53d1\u5e03   select pg_create_logical_replication_slot('logical_slot_name001','pgoutput');   create publication pub1 for all tables   -- \u8be6\u7ec6\u8bed\u6cd5   CREATE PUBLICATION name       [ FOR TABLE [ ONLY ] table_name [ * ] [, ...]         | FOR ALL TABLES ]       [ WITH ( publication_parameter [= value] [, ... ] ) ]   URL: https://www.postgresql.org/docs/12/sql-createpublication.html</p> <p>-- \u8ba2\u9605   create  subscription sub1 connection 'hostaddr= xxx port=xxx user=xxx dbname=xxx'     publication pub1 with(create_slot='false',slot_name='logical_slot_name001');    -- \u8be6\u7ec6\u8bed\u6cd5   CREATE SUBSCRIPTION subscription_name       CONNECTION 'conninfo'       PUBLICATION publication_name [, ...]       [ WITH ( subscription_parameter [= value] [, ... ] ) ]</p> <p>\u53c2\u6570\u8bf4\u660e   subscription_parameter   copy_data :  The default is true ,\u5b58\u91cf\u6570\u636e\u662f\u5426\u8fc1\u79fb   create_slot: The default is true. \u521b\u5efaslot   enabled : The default is true \u662f\u5426\u9a6c\u4e0a\u5f00\u542f\u590d\u5236   slot_name: synchronous_commit (enum) The default value is off.   connect (boolean) :    URL: https://www.postgresql.org/docs/12/sql-createsubscription.html</p> <p>--\u7981\u6b62\u6216\u5f00\u542f\u8ba2\u9605   ALTER SUBSCRIPTION mysub DISABLE;   ALTER SUBSCRIPTION mysub ENABLE   ALTER SUBSCRIPTION name REFRESH PUBLICATION    -- \u5982\u679c\u53d1\u5e03\u7aef\u4fee\u6539\uff0c\u8ba2\u9605\u7aef\u5237\u65b0\u8ba2\u9605   ALTER SUBSCRIPTION name REFRESH PUBLICATION    ```</p>","tags":[]},{"location":"postgres/dts/#_5","title":"\u8fc7\u7a0b\u76d1\u63a7","text":"","tags":[]},{"location":"postgres/dts/#_6","title":"\u53d1\u5e03\u7aef","text":"<pre><code>-- \u53d1\u5e03\u7aef\nselect * from pg_stat_replication ;\nselect * from pg_replication_slots ;\nselect * from pg_publication;\nselect * from pg_publication_tables ;\nselect pg_size_pretty(pg_wal_location_diff(pg_current_wal_insert_location(), sent_location)), pg_size_pretty(pg_wal_location_diff(pg_current_wal_insert_location(), replay_location)), * from pg_stat_replication ;\n</code></pre>","tags":[]},{"location":"postgres/dts/#_7","title":"\u8ba2\u9605\u7aef","text":"<pre><code>-- \u8ba2\u9605\u7aef\nselect * from pg_subscription ;\nselect * from pg_stat_subscription ;\nselect * from pg_replication_origin_status ;\nselect pg_size_pretty(pg_wal_location_diff(received_lsn, latest_end_lsn)), * from pg_stat_subscription ;\n</code></pre>","tags":[]},{"location":"postgres/dts/#_8","title":"\u7ed3\u679c\u68c0\u9a8c","text":"<ul> <li>\u8868\u7ed3\u6784\uff0c\u8868\u6570\u91cf\uff0c\u7d22\u5f15\u6570\u91cf</li> <li>\u8868\u4e2d\u6570\u636e\u91cf\u3001\u6570\u636e\u6761\u6570</li> <li>\u6570\u636e\u5185\u5bb9</li> </ul>","tags":[]},{"location":"postgres/dts/#_9","title":"\u8fc1\u79fb\u540e\u5904\u7406","text":"<ul> <li>\u65b0\u6570\u636e\u5e93\u5e8f\u5217\u5904\u7406\uff0c\u4e1a\u52a1\u5207\u5272\u524d\u5904\u7406</li> </ul> <p><code>-- sql \u53c2\u8003   do language plpgsql $$   declare     nsp name;     rel name;     val int8;   begin     for nsp,rel in select nspname,relname from pg_class t2 , pg_namespace t3 where t2.relnamespace=t3.oid and t2.relkind='S'     loop       execute format($_$select last_value from %I.%I$_$, nsp, rel) into val;       raise notice '%',       format($_$select setval('%I.%I'::regclass, %s);$_$, nsp, rel, val+1);     end loop;   end;   $$;</code></p> <ul> <li>\u5220\u9664\u903b\u8f91\u590d\u5236slot \uff0c\u53d1\u5e03\u8ba2\u9605\u3002\u4e1a\u52a1\u5207\u5272\u540e\u5904\u7406</li> </ul> <pre><code>DROP PUBLICATION mypublication;\nDROP SUBSCRIPTION mysub;\nselect pg_drop_replication_slot('myslot');\n</code></pre>","tags":[]},{"location":"postgres/dts/#_10","title":"\u4e1a\u52a1\u5207\u5272","text":"<p>\u200b   \u7565</p>","tags":[]},{"location":"postgres/dts/#_11","title":"\u5931\u8d25\u64a4\u56de","text":"<ul> <li>\u589e\u91cf\u56de\u6d41 </li> </ul> <p>\u4e3b\u8981\u662f\u8003\u8651\u5982\u679c\u65b0\u6570\u636e\u5e93\u9047\u5230\u95ee\u9898\u9700\u8981\u5207\u6362\u56de\u539f\u6765\u7684\u6570\u636e\u5e93\u573a\u666f\u3002</p>","tags":[]},{"location":"postgres/explain/","title":"Explain \u6267\u884c\u8ba1\u5212","text":""},{"location":"postgres/explain/#_1","title":"\u6587\u6cd5","text":"<pre><code>EXPLAIN [ ( option [, ...] ) ] statement\nEXPLAIN [ ANALYZE ] [ VERBOSE ] statement\n\n\u8fd9\u91cc option\u53ef\u4ee5\u662f\uff1a\n\n    ANALYZE [ boolean ]\n    VERBOSE [ boolean ]\n    COSTS [ boolean ]\n    BUFFERS [ boolean ]\n    TIMING [ boolean ]\n    SUMMARY [ boolean ]\n    FORMAT { TEXT | XML | JSON | YAML }\n</code></pre>"},{"location":"postgres/explain/#_2","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u8bb0\u4f4f\u5f53\u4f7f\u7528\u4e86ANALYZE\u9009\u9879\u65f6\u8bed\u53e5\u4f1a\u88ab\u5b9e\u9645\u6267\u884c. \u5982\u6267\u884cdml \u65f6\u5c06\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u5b9e\u9645\u7684\u64cd\u4f5c\u3002</p> <p>\u907f\u514d\u6c61\u67d3\u6570\u636e\u7684\u65b9\u5f0f</p> <pre><code>BEGIN;\nEXPLAIN ANALYZE ...;\nROLLBACK;\n</code></pre>"},{"location":"postgres/explain/#_3","title":"\u4e00\u4e2a\u4f8b\u5b50","text":"<pre><code>postgres=# explain analyze select * from tbl;\n                                                    QUERY PLAN                                                    \n------------------------------------------------------------------------------------------------------------------\n Seq Scan on tbl  (cost=0.00..144248.48 rows=10000048 width=8) (actual time=0.091..780.145 rows=10000000 loops=1)\n Planning time: 0.124 ms\n Execution time: 1046.394 ms\n(3 rows)\n</code></pre> <p>Seq Scan \u987a\u5e8f\u626b\u63cf cost \u4ee3\u4ef7\u6210\u672c, \u542f\u52a8\u6210\u672c..\u603b\u6210\u672c actual \u5b9e\u9645\u503c  </p>"},{"location":"postgres/explain/#cost","title":"cost\u8ba1\u7b97","text":"<p>cost\u7684\u8ba1\u7b97\u4f9d\u636e \u6570\u636e\u5e93\u4e2d\u7684\u7edf\u8ba1\u4fe1\u606f\u53ca\u6210\u672c\u56e0\u5b50\u76f8\u5173</p> <ul> <li>\u7edf\u8ba1\u4fe1\u606f select * from pg_stats;</li> <li>\u6210\u672c\u56e0\u5b50 </li> </ul> <pre><code># - Planner Cost Constants -\n\n#seq_page_cost = 1.0                    # measured on an arbitrary scale\nrandom_page_cost = 1.1                  # same scale as above\n#cpu_tuple_cost = 0.01                  # same scale as above\n#cpu_index_tuple_cost = 0.005           # same scale as above\n#cpu_operator_cost = 0.0025             # same scale as above\n#parallel_tuple_cost = 0.1              # same scale as above\n#parallel_setup_cost = 1000.0   # same scale as above\n#min_parallel_table_scan_size = 8MB\n#min_parallel_index_scan_size = 512kB\neffective_cache_size = 666666\n</code></pre>"},{"location":"postgres/explain/#_4","title":"\u5f71\u54cd\u6267\u884c\u8ba1\u5212\u7684\u53c2\u6570\u8bbe\u7f6e","text":"<pre><code>\u5f00\u5173\nenable_bitmapscan\nenable_gathermerge\nenable_hashagg\nenable_hashjoin\nenable_indexonlyscan\nenable_indexscan\nenable_material\nenable_mergejoin\nenable_nestloop\nenable_seqscan\nenable_sort\nenable_tidscan\n\n\u5173\u8054\nfrom_collapse_limit \njoin_collapse_limit\ngeqo_threshold\n</code></pre> <p>\u8bbe\u7f6e</p> <ul> <li>session set enable_bitmapscan = default;</li> <li>\u5168\u5c40 postgresql.conf</li> <li>\u7528\u6237\u7ea7 alter user postgres set enable_bitmapscan = off;</li> <li>\u6570\u636e\u5e93\u7ea7\u522b alter database postgres set enable_bitmapscan = off;</li> </ul> <p>\u67e5\u770b </p> <ul> <li>session show enable_bitmapscan;</li> <li>\u7528\u6237\u7ea7\u522b select * from pg_user;</li> </ul>"},{"location":"postgres/explain/#explain","title":"\u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55explain\u4fe1\u606f","text":"<p>\u901a\u8fc7auto_explain \u6269\u5c55\u53ef\u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55explain\u4fe1\u606f</p> <p>\u6587\u6863 \u5b98\u7f51 \u6587\u6863 \u4e2d\u6587</p>"},{"location":"postgres/explain/#sql","title":"SQL \u5728\u7ebf\u5206\u6790\u5de5\u5177","text":"<p>https://explain.depesz.com</p> <p>https://explain.dalibo.com/</p>"},{"location":"postgres/extention/","title":"\u6570\u636e\u5e93\u62d3\u5c55","text":"<ul> <li> <p>\u6d41\u8ba1\u7b97\u6570\u636e\u5e93\u4ea7\u54c1 pipelineDB *</p> </li> <li> <p>\u63a8\u8350\u6570\u636e\u5e93\u4ea7\u54c1 recDB</p> </li> <li> <p>\u65f6\u5e8f\u6570\u636e\u5e93 timescaleDB *</p> </li> <li> <p>\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u63d2\u4ef6 citus *</p> </li> <li> <p>\u5217\u5b58\u50a8\u63d2\u4ef6 IMCS, cstore\u7b49</p> </li> <li> <p>\u9762\u5411OLAP\u7684codegen\u6570\u636e\u5e93 pg_LLVM</p> </li> <li> <p>\u5411\u91cf\u8ba1\u7b97\u63d2\u4ef6 vops</p> </li> <li> <p>\u6570\u636e\u5e93\u6027\u80fd\u5206\u6790 pg_stat_statements pg_buffercache</p> </li> <li> <p>\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\u6587\u4ef6\u7cfb\u7edf adminpack</p> </li> <li> <p>\u52a0\u5bc6\u6570\u636e pgcrypto</p> </li> <li> <p>\u9884\u70ed\u7f13\u5b58 pg_prewarm</p> </li> <li> <p>\u68c0\u67e5\u5b58\u50a8\uff0c\u7279\u522b\u662f\u8868\u81a8\u80c0 pgstattuple </p> </li> <li> <p>\u6a21\u7cca\u641c\u7d22 pg_trgm</p> </li> <li> <p>\u8fde\u63a5\u5230\u8fdc\u7a0b\u670d\u52a1\u5668 postgres_fdw</p> </li> <li> <p>k\u8fd1\u90bb\uff08KNN\uff09\u641c\u7d22 btree_gist</p> </li> </ul> <p>\u6bd4\u5982\u68c0\u7d2210\u5de6\u53f3\u7684\u6570\u636e\uff0c\u4ef7\u683c\u5728100\u5de6\u53f3\u7684\u6570\u636e\u3002</p> <pre><code>create index idx_value_001 on t_talbe01 USING gist(value);\nselect * from t_table01 where value &lt;-&gt; 100 limit 10;\n</code></pre>"},{"location":"postgres/fillfactor/","title":"fillfactor \u586b\u5145\u56e0\u5b50","text":""},{"location":"postgres/fillfactor/#_1","title":"\u4ecb\u7ecd","text":"<p>PostgreSQL\u6bcf\u4e2a\u8868\u548c\u7d22\u5f15\u7684\u6570\u636e\u90fd\u662f\u7531\u5f88\u591a\u4e2a\u56fa\u5b9a\u5c3a\u5bf8\u7684\u9875\u9762\u5b58\u50a8\uff08\u901a\u5e38\u662f 8kB\uff0c\u4e0d\u8fc7\u5728\u7f16\u8bd1\u670d\u52a1\u5668\u65f6[\u2013with-blocksize]\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u4e0d\u540c\u7684\u5c3a\u5bf8\uff09       \u4e00\u4e2a\u8868\u7684\u586b\u5145\u56e0\u5b50(fillfactor)\u662f\u4e00\u4e2a\u4ecb\u4e8e 10 \u548c 100 \u4e4b\u95f4\u7684\u767e\u5206\u6570\u3002100(\u5b8c\u5168\u586b\u5145)\u662f\u9ed8\u8ba4\u503c\u3002\u5982\u679c\u6307\u5b9a\u4e86\u8f83\u5c0f\u7684\u586b\u5145\u56e0\u5b50\uff0cINSERT \u64cd\u4f5c\u4ec5\u6309\u7167\u586b\u5145\u56e0\u5b50\u6307\u5b9a\u7684\u767e\u5206\u7387\u586b\u5145\u8868\u9875\u3002\u6bcf\u4e2a\u9875\u4e0a\u7684\u5269\u4f59\u7a7a\u95f4\u5c06\u7528\u4e8e\u5728\u8be5\u9875\u4e0a\u66f4\u65b0\u884c\uff0c\u8fd9\u5c31\u4f7f\u5f97 UPDATE \u6709\u673a\u4f1a\u5728\u540c\u4e00\u9875\u4e0a\u653e\u7f6e\u540c\u4e00\u6761\u8bb0\u5f55\u7684\u65b0\u7248\u672c\uff0c\u8fd9\u6bd4\u628a\u65b0\u7248\u672c\u653e\u7f6e\u5728\u5176\u5b83\u9875\u4e0a\u66f4\u6709\u6548\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4ece\u4e0d\u66f4\u65b0\u7684\u8868\u5c06\u586b\u5145\u56e0\u5b50\u8bbe\u4e3a 100 \u662f\u6700\u4f73\u9009\u62e9\uff0c\u4f46\u662f\u5bf9\u4e8e\u9891\u7e41\u66f4\u65b0\u7684\u8868\uff0c\u8f83\u5c0f\u7684\u586b\u5145\u56e0\u5b50\u5219\u66f4\u52a0\u6709\u6548\u3002</p> <p>PostgresSQL \u4f7f\u7528Heap-Only Tuple \u6280\u672f \u4f1a\u5728\u65e7\u884c\u4e0e\u65b0\u884c\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u94fe\u8868\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u4e0d\u9700\u8981\u66f4\u65b0\u7d22\u5f15\u4e86\uff0c\u7d22\u5f15\u9879\u4ecd\u4f1a\u6307\u5411\u65e7\u884c\uff0c\u901a\u8fc7\u94fe\u8868\u53ef\u4ee5\u627e\u5230\u65b0\u884c\u3002\u56e0\u6b64Heap-Only Tuple \u7684\u94fe\u8868\u4e0d\u80fd\u8de8\u6570\u636e\u5757\u3002</p>"},{"location":"postgres/fillfactor/#_2","title":"\u793a\u4f8b","text":"<pre><code>create table t_fillfactor01(id int ,name varchar  , blog text ) WITH (fillfactor=70);\nCREATE TABLE\nnew_test=# \\d+ t_fillfactor01\n                         Table \"public.t_fillfactor01\"\n Column |       Type        | Modifiers | Storage  | Stats target | Description \n--------+-------------------+-----------+----------+--------------+-------------\n id     | integer           |           | plain    |              | \n name   | character varying |           | extended |              | \n blog   | text              |           | extended |              | \nOptions: fillfactor=70\n</code></pre>"},{"location":"postgres/fillfactor/#_3","title":"\u6d4b\u8bd5","text":"<pre><code>/****************************************************************************************\n    \u521b\u5efa\u6d4b\u8bd5\u8868\n    test1\u8bbe\u7f6efillfactor=100\n    test2\u8bbe\u7f6efillfactor=80\n    drop table if exists  test1;\n    drop table if exists  test2;\n****************************************************************************************/ \ncreate table test1(\n    objectid bigserial not null,                --\u552f\u4e00\u7f16\u53f7\uff0c\u4e3b\u952e\n    name text not null,                         --\u540d\u79f0\n    describe text,                              --\u5907\u6ce8\n    generate timestamptz default now() not null,--\u521b\u5efa\u65e5\u671f\n    constraint pk_test1_objectid primary key(objectid)\n)with (fillfactor=100); \n\ncreate table test2(\n    objectid bigserial not null,                --\u552f\u4e00\u7f16\u53f7\uff0c\u4e3b\u952e\n    name text not null,                         --\u540d\u79f0\n    describe text,                              --\u5907\u6ce8\n    generate timestamptz default now() not null,--\u521b\u5efa\u65e5\u671f\n    constraint pk_test2_objectid primary key(objectid)\n)with (fillfactor=80); \n\n/****************************************************************************************\n    \u521b\u5efa\u968f\u673a\u751f\u6210\u4e2d\u6587\u5b57\u7b26\u51fd\u6570\ndrop function if exists gen_random_zh(int,int);\n****************************************************************************************/ \n\ncreate or replace function gen_random_zh(int,int)\n    returns text\nas $$\n    select string_agg(chr((random()*(20901-19968)+19968 )::integer) , '')  from generate_series(1,(random()*($2-$1)+$1)::integer); $$ language sql; \n\n/****************************************************************************************\n    \u5bfc\u5165\u6d4b\u8bd5\u6570\u636e\n****************************************************************************************/ \ninsert into test1(name)\n  select gen_random_zh(8,32) from generate_series(1,10000); \n\ninsert into test2(name)\n    select gen_random_zh(8,32) from generate_series(1,10000);\n\n/****************************************************************************************\n    \u67e5\u770btest1\u6570\u636e\u5728\u9875\u4e2d\u7684\u5e03\u5c40\n****************************************************************************************/\n\nselect ctid,objectid from test1 limit 500;\n\u7565\n\nselect ctid,objectid from test2 limit 500;\n\u7565\n\n---test1 --- fillfactor = 100\n select ctid from test1 where objectid = 93;\n ctid \n-------- \n(1,18) (1 row) \nupdate test1 set name=gen_random_zh(8,32) where objectid = 93; \nselect ctid from test1 where objectid = 93; \nctid \n---------- \n(133,31) (1 row) \n\n--test2 --- fillfactor = 80 \nselect ctid from test2 where objectid = 93;\nctid \n-------- \n(1,32) (1 row)\nupdate test2 set name=gen_random_zh(8,32) where objectid = 93;\nselect ctid from test2 where objectid = 93; \nctid \n-------- \n(1,58) (1 row)\n\n--------------------- \n</code></pre> <p>\u53ef\u4ee5\u770b\u5230test1\u4e2d\u56e0\u4e3a\u586b\u5145\u7387\u4e3a100%,update\u540e\u7b2c\u4e00\u9875\u4e2d\u6ca1\u6709\u4f4d\u7f6e\u5b58\u50a8\u65b0\u7684\u6570\u636e\u4e86,\u6240\u4ee5\u68c0\u67e5\u6700\u5927\u7684\u9875\u6587\u4ef6\u662f\u5426\u8fd8\u6709\u4f4d\u7f6e,\u5982\u679c\u6709\u76f4\u63a5\u63d2\u5165,\u5982\u679c\u6ca1\u6709\u5219\u518d\u65b0\u5efa\u4e00\u9875\u540e\u63d2\u5165,\u5728\u672c\u4f8b\u4e2d\u8df3\u8fc7\u4e86132\u4e2a\u9875\u6587\u4ef6.</p> <p>test2\u4e2d\u56e0\u4e3a\u586b\u5145\u7387\u4e3a80%,\u8fd8\u670920%\u7684\u7a7a\u95f4\u53ef\u4ee5\u5b58\u50a8\u6570\u636e,\u56e0\u6b64update\u540e\u76f4\u63a5\u5728\u5386\u53f2\u6570\u636e\u6240\u5728\u7684\u9875\u540e\u9762\u63d2\u5165\u6570\u636e.</p>"},{"location":"postgres/fillfactor/#fillfactor","title":"fillfactor \u7684\u8bbe\u7f6e","text":"<p>fillfactor \u7684\u8bbe\u7f6e\u53ef\u76f4\u63a5\u5f71\u54cdhotupdate\u7684\u6bd4\u4f8b\uff0c \u901a\u8fc7wal\u65e5\u5fd7\u7684\u89e3\u6790\u53ef\u4ee5\u67e5\u770bhotupdate\u7684\u60c5\u51b5 checkpoint</p>"},{"location":"postgres/ha_fd/","title":"\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u8bbe\u8ba1\u5206\u6790","text":""},{"location":"postgres/ha_fd/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u96c6\u7fa4\uff1a \u4e00\u7ec4\u591a\u4e2a\u540c\u65f6\u5bf9\u5916\u63d0\u4f9b\u76f8\u540c\u670d\u52a1\u7684\u5b9e\u4f53\u673a\u7ec4\u6210\u4e00\u4e2a\u96c6\u7fa4\u3002\u8fd9\u91cc\u7684\u96c6\u7fa4\u4e3a\u4e3b\u4ece\u7ed3\u6784\uff0c\u53ef\u5199\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\uff0c\u5176\u4ed6\u53ea\u8bfb\u8282\u70b9\u4e3a\u4ece\u8282\u70b9\u3002</p> <p>\u9ad8\u53ef\u7528\uff1a \u5728\u53d1\u751f\u5c40\u90e8\u6545\u969c\u65f6\u5bf9\u6574\u4f53\u4e1a\u52a1\u5f71\u54cd\u5f88\u4f4e\u3002\u5373\u4e0d\u53ef\u7528\u7684\u65f6\u95f4\u8981\u5c3d\u91cf\u7684\u77ed\u3002</p> <p>\u5bf9\u5916\u90e8\u5e94\u7528\u7684\u8bbf\u95ee\u6765\u8bf4\uff0c\u65e0\u9700\u5173\u6ce8\u5982\u4f55\u5b9e\u73b0\uff0c\u5982\u540c\u53ea\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\u3002\u5e76\u80fd\u5f97\u5230\u6301\u7eed\u7684\u670d\u52a1\u80fd\u529b\u3002</p>"},{"location":"postgres/ha_fd/#_2","title":"\u7ec4\u7ec7\u7ed3\u6784","text":""},{"location":"postgres/ha_fd/#_3","title":"\u9ad8\u53ef\u7528\u57fa\u77f3","text":"<ul> <li>\u5197\u4f59</li> <li>\u5207\u6362\u673a\u5236</li> <li>\u540c\u6b65\u7b56\u7565</li> </ul>"},{"location":"postgres/ha_fd/#_4","title":"\u5197\u4f59","text":"<p>\u907f\u514d\u5355\u70b9\u6545\u969c\u7684\u672c\u8d28\u662f\u5197\u4f59,\u4e0d\u540c\u7ea7\u522b\u7684\u5197\u4f59\u5e26\u6765\u7684\u662f\u4e0d\u540c\u7ea7\u522b\u7684\u9ad8\u53ef\u7528\u3002</p>"},{"location":"postgres/ha_fd/#_5","title":"\u5355\u673a\u5197\u4f59","text":"<ul> <li>\u5b58\u50a8 </li> </ul> <p>\u591a\u5757\u786c\u76d8\u505araid\uff0c\u7f51\u7edc\u5b58\u50a8\uff0c\u5916\u90e8\u5b58\u50a8\uff0c\u5171\u4eab\u5b58\u50a8\uff0c\u5feb\u7167\u7b49</p> <ul> <li>\u7f51\u7edc </li> </ul> <p>\u591a\u7f51\u5361bond</p> <ul> <li>\u7535\u6e90 </li> </ul> <p>\u591a\u7535\u6e90\uff0cUPS\u7b49</p> <p>\u7531\u4e8e\u6bcf\u4e2a\u5355\u673a\u4e0a\u90fd\u7528\u4e00\u4efd\u5b8c\u6574\u7684\u6570\u636e\u3002\u5f53\u5355\u673a\u53d1\u751f\u6545\u969c\u65f6\u53ef\u4fdd\u969c\u4ecd\u7136\u80fd\u591f\u63d0\u4f9b\u670d\u52a1\u3002</p>"},{"location":"postgres/ha_fd/#_6","title":"\u591a\u673a\u5197\u4f59","text":"<p>\u4e0d\u8981\u628a\u9e21\u86cb\u653e\u5728\u540c\u4e00\u4e2a\u7bee\u5b50\u91cc\u3002</p> <ul> <li>\u8282\u70b9\u95f4\u7f51\u7edc,\u4ea4\u6362\u673a</li> <li>\u5206\u5e03\u5728\u4e0d\u540c\u673a\u67dc</li> <li>\u5206\u5e03\u5728\u4e0d\u540c\u6570\u636e\u4e2d\u5fc3</li> </ul>"},{"location":"postgres/ha_fd/#_7","title":"\u540c\u6b65\u7b56\u7565","text":"<ul> <li>\u5f02\u6b65</li> <li>\u534a\u540c\u6b65</li> <li>\u5168\u540c\u6b65</li> </ul> <p>\u6027\u80fd: \u5f02\u6b65 &gt; \u534a\u540c\u6b65  &gt;  \u5168\u4e0d\u540c\u6b65</p> <p>\u6570\u636e\u53ef\u9760\u6027\uff1a \u5168\u540c\u6b65 &gt; \u534a\u540c\u6b65 &gt; \u5f02\u6b65</p> <p>\u6027\u80fd\u548c\u6570\u636e\u53ef\u9760\u6027\u7efc\u5408\u8003\u91cf</p>"},{"location":"postgres/ha_fd/#_8","title":"\u5207\u6362\u673a\u5236\u7ec4\u6210","text":"<p>\u5728\u53d1\u751f\u5f02\u5e38\u60c5\u51b5\uff0c\u5e94\u8be5\u6709\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\u914d\u5408\u540c\u65f6\u5b8c\u6210\u5207\u6362</p> <ul> <li>\u7edf\u4e00\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1</li> </ul> <p>\u901a\u8fc7\u670d\u52a1\u53d1\u73b0\uff0c\u96c6\u7fa4\u5bf9\u5916\u4f53\u7edf\u8bbf\u95ee\u5165\u53e3,\u8d1f\u8f7d\u5747\u8861\u3002</p> <p>\u5bf9\u5e94\u7528\u8bbf\u95ee\u6570\u636e\u5e93\u96c6\u7fa4\u8fdb\u884c\u63a5\u8026\u3002\u5f53\u540e\u7aef\u6570\u636e\u5e93\u8282\u70b9\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5bf9\u5e94\u7528\u65e0\u611f\u3002</p> <p>\u53ef\u9009\u53d6 DNS \u6216 consul </p> <ul> <li>\u6570\u636e\u5e93\u7ba1\u7406 MDB</li> </ul> <p>\u5bf9\u96c6\u7fa4\u591a\u5b9e\u4f53\u673a\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u81ea\u5b9a\u6545\u969c\u5207\u6362\u673a\u5236\u3002\u5e76\u5b8c\u6210\u6545\u969c\u8f6c\u79fb\u3002</p> <p>MDB\u4e0eDB\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u3002\u53ef\u5728DB\u53d1\u751f\u610f\u5916\u65f6\u5bf9DB\u8fdb\u884c\u91cd\u65b0\u542f\u52a8\u3002</p> <p>\u53ef\u9009\u7528 patroni</p> <ul> <li>\u7ba1\u7406\u914d\u7f6e\u4e2d\u5fc3</li> </ul> <p>\u63a5\u6536\u96c6\u7fa4\u4e2d\u5b9e\u4f53\u673a\u5fc3\u8df3\u4fe1\u606f\uff0c\u5b9e\u65f6\u638c\u63e1\u96c6\u7fa4\u4e2d\u5b9e\u4f53\u673a\u72b6\u6001\u3002\u53ef\u5bf9\u96c6\u7fa4\u8fdb\u884c\u9009\u4e3b\u3002</p> <p>\u53ef\u9009\u7528 DCS \uff0cetcd \u3001zookeeper\u3001 consul\u3001 raft</p> <p>\u53e6\u5916\u8fd9\u4e9b\u7ec4\u4ef6\u672c\u8eab\u5c31\u6709\u5b8c\u5584\u7684\u9ad8\u53ef\u7528\u65b9\u6848</p>"},{"location":"postgres/ha_fd/#_9","title":"\u7edf\u4e00\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u9ad8\u53ef\u7528","text":"<p>\u7531\u4e8e\u8be5\u7ec4\u4ef6\u5c5e\u4e8e\u65e0\u72b6\u6001\u5e94\u7528\u3002\u5197\u4f59\u548c\u670d\u52a1\u53ef\u7528\u6027\u72b6\u6001\u5224\u65ad\u5373\u53ef\u6ee1\u8db3\u9ad8\u53ef\u7528\u3002\u670d\u52a1\u53ef\u7528\u6027\u5224\u65ad\u901a\u7528\u7684app\u57fa\u672c\u90fd\u53ea\u8eab\u652f\u6301\u3002</p> <ul> <li>\u4e8c\u5c42 keepalived</li> <li>\u56db\u5c42 haproxy</li> <li>\u4e03\u5c42 dns</li> </ul> <p>\u5176\u4ed6:  consul ,zookeeper \u7b49  \u670d\u52a1\u6ce8\u518c\uff0c\u670d\u52a1\u53d1\u73b0\u7ba1\u7406\u4e2d\u5fc3\u3002</p>"},{"location":"postgres/ha_fd/#mdb","title":"\u6570\u636e\u5e93\u7ba1\u7406 MDB \u9ad8\u53ef\u7528","text":"<p>\u7531\u4e8e\u4e00\u53f0\u8282\u70b9\u4e0a\uff0c\u53ea\u6709\u4e00\u4e2aMDB\u3002MDB \u53d1\u751f\u4ee5\u5916\uff0c\u4e0eMDB\u540c\u5c5e\u4e8e\u4e00\u53f0\u8282\u70b9\u4e0a\u7684DB\u5c06\u5904\u4e8e\u6258\u7ba1\u72b6\u6001\u3002</p> <p>MDB \u9ad8\u53ef\u7528\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u662f\u5197\u4f59\uff0c\u56e0\u4e3aDMB \u53ea\u5bf9\u672c\u8282\u70b9\u4e0a\u7684DB\u8d1f\u8d23\u3002\u5197\u4f59\u610f\u4e49\u4e0d\u660e\u663e\u3002</p> <p>\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f MDB \u8fdb\u7a0b\u5b9e\u65f6\u4e0e\u672c\u8282\u70b9\u7684\u64cd\u4f5c\u7cfb\u7edf\u901a\u4fe1\uff0c\u53d1\u9001\u5fc3\u8df3\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u5f53\u64cd\u4f5c\u7cfb\u7edf\u8d85\u51fa\u4e00\u5b9a\u65f6\u95f4\u540e\u6ca1\u6709\u6536\u5230\u5fc3\u8df3\u4fe1\u606f\uff0c\u5c06\u53d1\u751f\u91cd\u542f\u7cfb\u7edf\u3002 </p> <p>DB \u5fe0\u8bda\u4e0e MDB \uff0c\u4e00\u8363\u4ff1\u8363\uff0c\u4e00\u635f\u4ff1\u635f\u3002\u540c\u751f\u5171\u4ea1\u3002</p>"},{"location":"postgres/ha_fd/#_10","title":"\u5207\u6362\u673a\u5236\u8bbe\u7f6e","text":"<p>\u5207\u6362\u673a\u5236\u7684\u914d\u7f6e\u7ba1\u7406\u90fd\u662f\u5728MDB\u4e0a\u6765\u5b8c\u6210\u3002</p> <p>\u96c6\u7fa4\u8282\u70b9\u5177\u4f53\u7684\u7ba1\u7406\u8005\uff0c\u5982\u4f55\u5c06\u8fd9\u4e9b\u5197\u4f59\u8282\u70b9\u7edf\u4e00\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002</p> <p>\u5728\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\u53d1\u751f\u65f6\u4f5c\u51fa\u76f8\u5e94\u7684\u51b3\u7b56\uff0c\u5373\u5bf9\u5e94\u7684\u8c03\u6574\u3002</p> <p>\u6545\u969c\u5f02\u5e38\u7c7b\u578b\u4e3b\u8981\u5206\u4e24\u7c7b\uff1a</p> <ul> <li>\u7ec4\u4ef6\u6a21\u5757\u5f02\u5e38</li> <li>\u7ec4\u4ef6\u6a21\u5757\u95f4\u901a\u4fe1\u5f02\u5e38</li> </ul>"},{"location":"postgres/ha_fd/#_11","title":"\u7ec4\u4ef6\u6a21\u5757\u5f02\u5e38","text":"<p>\u6839\u636e\u7ec4\u4ef6\u7ed3\u6784\u56fe\uff0c \u5bf9\u5916\u7edf\u4e00\u8bbf\u95ee\u548c\u8282\u70b9\u72b6\u6001\u4fe1\u606f\u7ec4\u4ef6\u672c\u8eab\u652f\u6301\u9ad8\u53ef\u7528\u3002\u8fd9\u91cc\u4e0d\u5728\u8003\u8651\u3002</p> <p>\u63a5\u4e0b\u6765\u5206\u522b\u5bf9\u5982\u4e0b\u7ec4\u4ef6\u5f02\u5e38\u6545\u969c\u53d1\u751f\u65f6\u8fdb\u884c\u5206\u6790</p> <ul> <li>DB</li> <li>MDB</li> <li>OS </li> </ul>"},{"location":"postgres/ha_fd/#db","title":"DB\u5f02\u5e38","text":"<p>DB \u7684\u53ef\u7528\u6027\u6709MDB\u8fdb\u884c\u76d1\u63a7\u3002\u5b9e\u65f6\u6536\u96c6DB\u4fe1\u606f\u5e76\u56de\u62a5\u7ed9\u8282\u70b9\u72b6\u6001\u4fe1\u606f\u7ec4\u4ef6\u3002 \u6536\u96c6\u4fe1\u606f\u4e3b\u8981\u5305\u62ec\uff1a \u5f53\u524d\u53ef\u7528\u6027\u72b6\u6001\uff0c\u4e3b\u4ece\u7c7b\u578b\uff0c\u4e3b\u4ece\u62d3\u6251\uff0c\u4e3b\u4ece\u5ef6\u957f\uff0c\u5f53\u524dLSN\uff0cTimeLine\u7b49</p> <p>\u5f53MDB \u53d1\u73b0DB\u5f02\u5e38\u65f6\u9996\u5148\u5c1d\u8bd5\u5bf9DB\u8fdb\u884c\u91cd\u542f\u5904\u7406\uff0c\u5bb6\u4e11\u5148\u4e0d\u5916\u626c\uff0c\u5185\u90e8\u77db\u76fe\u5185\u90e8\u5148\u5904\u7406\u3002\u5982\u679c\u91cd\u542f\u4e0d\u80fd\u89e3\u51b3\uff0c\u628a\u5f02\u5e38\u4fe1\u606f\u4e0a\u62a5\u4e2a\u4e2d\u5fc3\u3002DB\u8282\u70b9\u5728\u96c6\u7fa4\u4e2d\u5254\u9664\u3002\u82e5\u5f53\u524d\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\uff0c\u96c6\u7fa4\u91cd\u65b0\u9009\u4e3b\u3002</p>"},{"location":"postgres/ha_fd/#mdb_1","title":"MDB \u5f02\u5e38","text":""},{"location":"postgres/ha_fd/#_12","title":"\u901a\u4fe1\u5f02\u5e38","text":"<ul> <li>\u901a\u4fe1\u65ad\u5f00</li> <li>\u901a\u4fe1\u6062\u590d</li> </ul>"},{"location":"postgres/high_level_sql/","title":"\u9ad8\u7ea7SQL","text":"<ul> <li>\u5206\u7ec4\u96c6</li> <li>\u6392\u5e8f\u96c6</li> <li>\u5047\u8c61\u96c6</li> <li>\u7a97\u53e3\u51fd\u6570</li> <li>\u9012\u5f52</li> </ul>"},{"location":"postgres/high_level_sql/#_1","title":"\u9012\u5f52\u5e94\u7528","text":"<p>\u9012\u5f52\u52a0\u901fcount(distint) \u67e5\u8be2\u3002 \u4f7f\u7528\u573a\u666f\uff0c\u6570\u636e\u5206\u5e03\uff1a\u5927\u6570\u636e\u96c6\u4f46\u5176\u4e2d\u7684\u7c7b\u578b\u5374\u5f88\u5c11</p> <pre><code>-- \u521b\u5efa\u8868\ntest1=# create table recurive_t(user_id int,free float,info text);\nCREATE TABLE\n-- \u52a0\u5165\u6570\u636e\ntest1=# insert into recurive_t select 1 ,generate_series(0,1000000),'user 1 pay !!!';\ntest1=# insert into recurive_t select 2 ,generate_series(0,2000000),'user 2 pay !!!';\ntest1=# insert into recurive_t select 3 ,generate_series(0,3000000),'user 3 pay !!!';\ntest1=# insert into recurive_t select 4 ,generate_series(0,4000000),'user 4 pay !!!';\ntest1=# insert into recurive_t select 5 ,generate_series(0,4000000),'user 5 pay !!!';\ntest1=# analyze recurive_t ;\nANALYZE\n</code></pre> <pre><code>-- count(distinct()) \u67e5\u8be2\ntest1=# explain analyze select count(distinct(user_id)) from recurive_t ;\n                                                                  QUERY PLAN                                                                   \n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n Aggregate  (cost=10000412944.36..10000412944.37 rows=1 width=8) (actual time=2793.108..2793.108 rows=1 loops=1)\n   -&gt;  Seq Scan on recurive_t  (cost=10000000000.00..10000377992.29 rows=13980829 width=4) (actual time=0.006..1065.338 rows=14000005 loops=1)\n Planning time: 0.054 ms\n Execution time: 2793.144 ms\n(4 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a2793.548 ms (00:02.794)\n</code></pre> <pre><code>-- group by \u67e5\u8be2\ntest1=# explain analyze select user_id from recurive_t group by user_id;\n                                                                                      QUERY PLAN                                                                                      \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n Group  (cost=1000.46..511742.60 rows=5 width=4) (actual time=8.073..1119.549 rows=5 loops=1)\n   Group Key: user_id\n   -&gt;  Gather Merge  (cost=1000.46..511742.57 rows=10 width=4) (actual time=8.072..1138.226 rows=15 loops=1)\n         Workers Planned: 2\n         Workers Launched: 2\n         -&gt;  Group  (cost=0.43..510741.40 rows=5 width=4) (actual time=0.053..845.258 rows=5 loops=3)\n               Group Key: user_id\n               -&gt;  Parallel Index Only Scan using recurive_t_user_id_idx on recurive_t  (cost=0.43..496178.03 rows=5825345 width=4) (actual time=0.050..694.273 rows=4666668 loops=3)\n                     Heap Fetches: 1803282\n Planning time: 0.133 ms\n Execution time: 1138.276 ms\n(11 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a1139.009 ms (00:01.139)\n</code></pre> <pre><code>-- \u6dfb\u52a0\u7d22\u5f15\uff0c\u5bf9\u4f18\u5316\u6ca1\u6709\u6548\u679c\ntest1=# create index ON recurive_t (user_id );\nCREATE INDEX\n\u65f6\u95f4\uff1a5990.992 ms (00:05.991)\ntest1=# explain analyze select count(distinct(user_id)) from recurive_t ;\n                                                                             QUERY PLAN                                                                             \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------\n Aggregate  (cost=613020.52..613020.53 rows=1 width=8) (actual time=3180.517..3180.517 rows=1 loops=1)\n   -&gt;  Index Only Scan using recurive_t_user_id_idx on recurive_t  (cost=0.43..578020.51 rows=14000005 width=4) (actual time=0.089..1531.050 rows=14000005 loops=1)\n         Heap Fetches: 14000005\n Planning time: 0.288 ms\n Execution time: 3180.570 ms\n(5 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a3181.520 ms (00:03.182)\n</code></pre> <pre><code>--- \u753b\u91cd\u70b9\uff0c\u5229\u7528\u9012\u5f52\u67e5\u8be2\u3002\u6548\u679c\u60ca\u4eba\ntest1=# explain analyze with recursive skip as(\n    (\n      select min(t.user_id) as user_id from recurive_t t\n    )\n    union\n    (\n      select (select min(t.user_id) from recurive_t t where t.user_id &gt; s.user_id )\n         from skip s\n    )\n)\nselect count(*) from skip;\n                                                                                       QUERY PLAN                                                                                        \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n Aggregate  (cost=54.94..54.95 rows=1 width=8) (actual time=0.271..0.271 rows=1 loops=1)\n   CTE skip\n     -&gt;  Recursive Union  (cost=0.47..52.67 rows=101 width=4) (actual time=0.051..0.256 rows=6 loops=1)\n           -&gt;  Result  (cost=0.47..0.48 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=1)\n                 InitPlan 3 (returns $1)\n                   -&gt;  Limit  (cost=0.43..0.47 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=1)\n                         -&gt;  Index Only Scan using recurive_t_user_id_idx on recurive_t t_1  (cost=0.43..525904.40 rows=15394398 width=4) (actual time=0.042..0.042 rows=1 loops=1)\n                               Index Cond: (user_id IS NOT NULL)\n                               Heap Fetches: 1\n           -&gt;  WorkTable Scan on skip s  (cost=0.00..5.02 rows=10 width=4) (actual time=0.031..0.032 rows=1 loops=6)\n                 SubPlan 2\n                   -&gt;  Result  (cost=0.47..0.48 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=6)\n                         InitPlan 1 (returns $3)\n                           -&gt;  Limit  (cost=0.43..0.47 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=6)\n                                 -&gt;  Index Only Scan using recurive_t_user_id_idx on recurive_t t  (cost=0.43..188135.76 rows=5131466 width=4) (actual time=0.025..0.025 rows=1 loops=6)\n                                       Index Cond: ((user_id IS NOT NULL) AND (user_id &gt; s.user_id))\n                                       Heap Fetches: 4\n   -&gt;  CTE Scan on skip  (cost=0.00..2.02 rows=101 width=0) (actual time=0.054..0.263 rows=6 loops=1)\n Planning time: 0.415 ms\n Execution time: 0.373 ms\n(20 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a1.872 ms\n</code></pre>"},{"location":"postgres/high_level_sql/#with","title":"WITH","text":"<p>\u5229\u7528with as \u4e0d\u9700\u8981\u4fee\u6539\u7d22\u5f15\uff0c\u6307\u5b9a\u67e5\u8be2\u8ba1\u5212</p> <pre><code>select * from T where A=1 and B = 2;\n\n\u6267\u884c\u8ba1\u5212\u53ef\u80fd\u4f7f\u7528A\u7d22\u5f15\uff0c\u4e5f\u53ef\u80fd\u8d70B\u7d22\u5f15\n\nWITH T_a as (\n select * from T where A = 1;\n)\nselect * from T_a where B = 1;\n\n\u6267\u884c\u8ba1\u5212\u8d70A \u7d22\u5f15 \n</code></pre> <p>\u66f4\u591a\u53c2\u8003</p> <p>https://www.jianshu.com/p/50292ad0d7eb</p>"},{"location":"postgres/hll/","title":"HyperLogLog","text":"","tags":[]},{"location":"postgres/hll/#_1","title":"\u4f7f\u7528\u573a\u666f","text":"<p>\u5728\u5e94\u7528\u4e2d\u7edf\u8ba1\u53bb\u91cd\u540e\u7684\u4e2a\u6570\uff0c\u4f20\u7edf\u7684\u65b9\u6cd5\u901a\u5e38\u662f\u8fd9\u4e48\u64cd\u4f5c count(distict(xxx))\u3002 \u5982\u679c\u6570\u636e\u91cf\u53d8\u5927\uff0c\u6216\u7edf\u8ba1\u9891\u7e41\uff0c\u6027\u80fd\u4f1a\u8d8a\u6765\u8d8a\u5dee\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u8fd1\u4f3c\u7edf\u8ba1\u8ba1\u7b97\u65b9\u6cd5hll</p> <pre><code>create extension hll;\n</code></pre> <p>HyperLogLog \u662f\u4e00\u79cd\u7b97\u6cd5, \u53ef\u4ee5\u7528\u6765\u4f30\u7b97\u6570\u636e\u96c6\u7684\u57fa\u6570. \u57fa\u6570\u662f\u6307\u4e00\u4e2a\u96c6\u5408\u4e2d\u4e0d\u540c\u503c\u7684\u6570\u76ee, \u7b49\u540c\u4e8e <code>COUNT(DISTINCT field)</code> \u8fd4\u56de\u503c. \u5bf9\u4e8e\u8d85\u5927\u6570\u636e\u96c6\u6765\u8bf4, \u7cbe\u786e\u7684\u57fa\u6570\u7edf\u8ba1\u5f80\u5f80\u9700\u8981\u6d88\u8017\u5927\u91cf\u7684\u5185\u5b58\u4e0e\u65f6\u95f4, \u5e76\u4e14\u6d88\u8017\u7684\u5185\u5b58\u4e0e\u65f6\u95f4\u4f1a\u968f\u7740\u6570\u636e\u96c6\u57fa\u6570\u7684\u589e\u52a0\u800c\u6210\u6bd4\u4f8b\u589e\u52a0. \u800c HyperLogLog \u80fd\u591f\u5728\u5e38\u6570\u7ea7\u7684\u5185\u5b58\u4e0e\u65f6\u95f4\u4e0b, \u4ee5\u6781\u4f4e\u7684\u8bef\u5dee\u6765\u83b7\u53d6\u6570\u636e\u96c6\u57fa\u6570\u7684\u8fd1\u4f3c\u7edf\u8ba1.</p>","tags":[]},{"location":"postgres/hll/#_2","title":"\u7b80\u5355\u4f8b\u5b50","text":"<pre><code>-- \u5546\u5e97\u7684\u5230\u8bbf\u7edf\u8ba1\nCREATE TABLE store_visitors (\n            store_id              integer, -- \u5546\u5e97ID\n            distinct_visitors     hll   -- \u4e0d\u91cd\u590d\u7684\u5ba2\u6237\u6570\n    );\n\n-- \u65b0\u5e97\u94fa\u6ce8\u518c\nINSERT INTO store_visitors(id, set) VALUES (1, hll_empty());\n\n-- \u6a21\u62df\u5ba2\u6237\u5230\u8bbf\u8fc7\u7a0b\nUPDATE store_visitors SET set = hll_add(set, hll_hash_integer(12345)) WHERE id = 1;\nUPDATE store_visitors SET set = hll_add(set, hll_hash_integer(12346)) WHERE id = 1;\nUPDATE store_visitors SET set = hll_add(set, hll_hash_integer(12345)) WHERE id = 1;\n\n-- \u7edf\u8ba1\u7ed3\u679c\nSELECT hll_cardinality(set) FROM store_visitors WHERE id = 1;\n</code></pre> <p>hll \u6570\u636e\u7ed3\u6784\u53ea\u4f7f\u7528\u5f88\u5c11\u7684\u5185\u5b58\uff0c\u800c\u4e14\u4e0d\u4f1a\u968f\u7740\u6570\u636e\u91cf\u7684\u589e\u52a0\u6027\u80fd\u4e0b\u964d\u3002\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u5b9e\u65f6\u7edf\u8ba1\u3002</p>","tags":[]},{"location":"postgres/hll/#_3","title":"\u66f4\u5b9e\u7528\u7684\u4f8b\u5b50","text":"","tags":[]},{"location":"postgres/hll/#_4","title":"\u521b\u5efa\u6d4b\u8bd5\u6570\u636e\u8868\u53ca\u6570\u636e","text":"<pre><code>CREATE TABLE github_events\n(\n    event_id bigint,\n    event_type text,\n    event_public boolean,\n    repo_id bigint,\n    payload jsonb,\n    repo jsonb,\n    user_id bigint,\n    org jsonb,\n    created_at timestamp\n);\n\n\\COPY github_events FROM events.csv CSV\n\u6570\u636e\u6e90 https://examples.citusdata.com/events.csv\n</code></pre>","tags":[]},{"location":"postgres/hll/#_5","title":"\u4f20\u7edf\u7edf\u8ba1","text":"<pre><code>-- \u6bcf\u5206\u949f \u6700\u5c0f\u7c92\u5ea6 events\u6570\u91cf \nCREATE TABLE github_events_rollup_minute\n(\n    created_at timestamp,\n    event_count bigint\n);\n\n-- \u8f7d\u5165\u6570\u636e\nINSERT INTO github_events_rollup_minute(\n    created_at,\n    event_count\n)\nSELECT\n    date_trunc('minute', created_at) AS created_at,\n    COUNT(*) AS event_count\nFROM github_events\nGROUP BY 1\n\n</code></pre> <p>\u4e00\u4e9b\u9650\u5236</p> <ul> <li>\u4e0d\u53ef\u4ee5\u8fdb\u884cdistinct\u7edf\u8ba1</li> <li>\u4e0d\u901a\u7ef4\u5ea6\u7684\u7edf\u8ba1\u90fd\u9700\u8981\u5efa\u8868\u3002\u590d\u6742\u5ea6\u9ad8\u3002\u5982\u6309\u65f6\u95f4\u7edf\u8ba1\uff0c\u6309\u4e8b\u4ef6\u7c7b\u578b\u7edf\u8ba1\uff0c\u6309\u65f6\u95f4\u548c\u4e8b\u4ef6\u7c7b\u578b\u7efc\u5408\u7edf\u8ba1\u3002</li> </ul>","tags":[]},{"location":"postgres/hll/#hll","title":"\u4f7f\u7528hll \u7edf\u8ba1","text":"<p>\u200b   \u5f97\u76ca\u4e8ehll \u53ef\u4ee5\u5bf9\u4e24\u4e2a\u6216\u591a\u4e2a\u96c6\u5408\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u3002</p> <pre><code>-- \u4e00\u5f20\u8868\u641e\u5b9a\u591a\u7ef4\u7edf\u8ba1\nCREATE TABLE github_events_rollup_minute(\n    created_at timestamp,\n    event_type text,\n    distinct_user_id_count hll\n);\n\n-- \u8f7d\u5165\u6570\u636e\nINSERT INTO github_events_rollup_minute(\n    created_at,\n    event_type,\n    distinct_user_id_count\n)\n\nSELECT\n    date_trunc('minute', created_at) AS created_at,\n    event_type,\n    hll_add_agg(hll_hash_bigint(user_id))\nFROM github_events\nGROUP BY 1, 2;\n\n</code></pre> <pre><code>-- \u6309\u65f6\u95f4\u7ef4\u5ea6\u7edf\u8ba1\nSELECT\n    EXTRACT(HOUR FROM created_at) AS hour,\n    hll_cardinality(hll_union_agg(distinct_user_id_count)) AS distinct_count\nFROM\n    github_events_rollup_minute\nWHERE\n    created_at BETWEEN '2016-12-01 00:00:00'::timestamp AND '2016-12-01 23:59:59'::timestamp\nGROUP BY 1\nORDER BY 1;\n\n  hour |  distinct_count\n-------+------------------\n     5 |  10598.637184899\n     6 | 17343.2846931687\n     7 | 18182.5699816622\n     8 | 12663.9497604266\n(4 rows)\n</code></pre> <pre><code>-- \u6309\u4e8b\u4ef6\u7c7b\u578b\u7ef4\u5ea6\u7edf\u8ba1\nSELECT\n    EXTRACT(HOUR FROM created_at) AS hour,\n    hll_cardinality(hll_union_agg(distinct_user_id_count)) AS distinct_push_count\nFROM\n    github_events_rollup_minute\nWHERE\n    created_at BETWEEN '2016-12-01 00:00:00'::timestamp AND '2016-12-01 23:59:59'::timestamp\n    AND event_type = 'PushEvent'::text\nGROUP BY 1\nORDER BY 1;\n\n\n hour | distinct_push_count\n------+---------------------\n    5 |    6206.61586498546\n    6 |    9517.80542100396\n    7 |    10370.4087640166\n    8 |    7067.26073810357\n(4 rows)\n</code></pre>","tags":[]},{"location":"postgres/hll/#_6","title":"\u5206\u5e03\u5f0f\u6570\u636e\u5e93","text":"<p>\u200b   \u5728\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u4e2d\u8fdb\u884ccount(distinct(xxx)) \u7edf\u8ba1\uff0c\u4f20\u7edf\u65b9\u5f0f\u5b9e\u73b0\u7684\u903b\u8f91</p> <ul> <li>\u5728\u6bcf\u4e2a\u5206\u7247\u4e0a\u8fdb\u884cdistinct\u7684\u7ed3\u679c\u8fdb\u884c\u6c47\u603b\u540e\uff0c\u518d\u6b21count(distinct())\u3002\u6700\u7ec8\u53ea\u80fd\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fdb\u884c\u805a\u5408\u3002</li> <li>map/reduce  \u6027\u80fd\u8f83\u5dee</li> </ul> <p>\u200b    citus\u5229\u7528hll \u8f7b\u677e\u89e3\u51b3</p> <pre><code>CREATE EXTENSION hll;\n</code></pre> <pre><code>SET citus.count_distinct_error_rate TO 0.005;\n</code></pre> <pre><code>CREATE TABLE github_events\n(\n    event_id bigint,\n    event_type text,\n    event_public boolean,\n    repo_id bigint,\n    payload jsonb,\n    repo jsonb,\n    user_id bigint,\n    org jsonb,\n    created_at timestamp\n);\n\nSELECT create_distributed_table('github_events', 'user_id');\n\n\\COPY github_events FROM large_events.csv CSV\n\n-- \u5f00\u59cb\u7edf\u8ba1\nSELECT\n    COUNT(DISTINCT user_id)\nFROM\n    github_events;\n\n-- \u5f00\u59cb\u7edf\u8ba1\nSELECT\n    COUNT(DISTINCT user_id)\nFROM\n    github_events\nWHERE\n    event_type = 'PushEvent'::text;\n</code></pre>","tags":[]},{"location":"postgres/hll/#_7","title":"\u53c2\u6570\u4f18\u5316","text":"<p>\u200b           \u5728\u5206\u6790\u578b\u6570\u636e\u5e93PostgreSQL\u7248\u4e2d, HyperLogLog \u7684\u8bef\u5dee\u4e0e\u5185\u5b58\u6d88\u8017\u91cf\u53d7\u5982\u4e0b\u53c2\u6570\u63a7\u5236:</p> <ul> <li>log2m, \u8be5\u53c2\u6570\u63a7\u5236\u7740 HyperLogLog \u5bf9\u6570\u636e\u96c6\u57fa\u6570\u4f30\u7b97\u7684\u8bef\u5dee\u4e3a: <code>1.04 / math.sqrt(2 ** log2m)</code>. \u8be5\u53c2\u6570\u540c\u65f6\u4e5f\u63a7\u5236\u7740 HyperLogLog \u5185\u5b58\u6d88\u8017\u91cf.</li> <li>regwidth, \u8be5\u53c2\u6570\u4e0e log2m \u4e00\u8d77\u51b3\u5b9a\u4e86 HyperLogLog \u5185\u5b58\u6d88\u8017\u91cf\u6700\u591a\u4e3a <code>(2 ** log2m) * regwidth / 8</code> \u5b57\u8282. \u540c\u65f6\u8be5\u51fd\u6570\u4e5f\u51b3\u5b9a\u4e86 HyperLogLog \u6240\u80fd\u4f30\u7b97\u6570\u636e\u96c6\u57fa\u6570\u7684\u6700\u5927\u503c.</li> </ul> <pre><code>\u9ed8\u8ba4\u503c\nhll(log2m=11, regwidth=5, expthresh=-1, sparseon=1) \n</code></pre> <pre><code>\u8bbe\u7f6e\u53c2\u6570\nselect hll_set_defaults(16,5,-1,1);\n</code></pre>","tags":[]},{"location":"postgres/hotupdate/","title":"hot update","text":""},{"location":"postgres/hotupdate/#what-is-hot","title":"What is HOT","text":"<p>HOT\u662f\u201cHeap Only Tuple\u201d\uff08\u4ec5\u5143\u7ec4\u5806\uff09\u7684\u7f29\u5199, \u7528\u6765\u63d0\u9ad8update\u6548\u7387\u3002</p> <p>\u884c\u7684\u65b0\u7248\u672c\u548c\u65e7\u7248\u672c\u4f4d\u4e8e\u540c\u4e00\u5757\u4e2d\u65f6\uff0c\u8be5\u884c\u7684\u5916\u90e8\u5730\u5740\uff08\u539f\u59cb\u884c\u6307\u9488\uff09\u4fdd\u6301\u4e0d\u53d8\uff0c\u5229\u7528hot link\u6307\u9488\u8fdb\u884c\u8f6c\u53d1\u5730\u5740\u3002\u7d22\u5f15\u4e0d\u9700\u8981\u4efb\u4f55\u6539\u52a8\u3002</p>"},{"location":"postgres/hotupdate/#_1","title":"\u524d\u63d0\u6761\u4ef6","text":"<ul> <li> <p>\u5305\u542b\u66f4\u65b0\u884c\u7684\u5757\u4e2d\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4</p> </li> <li> <p>\u5728\u5df2\u4fee\u6539\u503c\u7684\u4efb\u4f55\u5217\u4e0a\u5747\u672a\u5b9a\u4e49\u7d22\u5f15</p> </li> </ul>"},{"location":"postgres/hotupdate/#_2","title":"\u751f\u4ea7\u5e94\u7528","text":"<p>\u4f7f\u7528fillfactor\u4ee5\u83b7\u53d6HOT\u66f4\u65b0</p>"},{"location":"postgres/hotupdate/#_3","title":"\u4f8b\u5b50","text":"<p>\u5efa\u8868</p> <pre><code>CREATE TABLE mytable (\n   id  integer PRIMARY KEY,\n   val integer NOT NULL\n) WITH (autovacuum_enabled = off);\n\nINSERT INTO mytable\nSELECT *, 0\nFROM generate_series(1, 235) AS n; \n\n</code></pre> <p>8k page \u7269\u7406\u5206\u5e03</p> <pre><code>SELECT ctid, id, val\nFROM mytable;\n  ctid   | id  | val \n---------+-----+-----\n (0,1)   |   1 |   0\n (0,2)   |   2 |   0\n (0,3)   |   3 |   0\n (0,4)   |   4 |   0\n (0,5)   |   5 |   0\n...\n (0,224) | 224 |   0\n (0,225) | 225 |   0\n (0,226) | 226 |   0\n (1,1)   | 227 |   0\n (1,2)   | 228 |   0\n (1,3)   | 229 |   0\n (1,4)   | 230 |   0\n (1,5)   | 231 |   0\n (1,6)   | 232 |   0\n (1,7)   | 233 |   0\n (1,8)   | 234 |   0\n (1,9)   | 235 |   0\n(235 rows)\n</code></pre> <p>\u9875\u5185\u65e0\u8db3\u591f\u5269\u4f59\u7a7a\u95f4,\u8de8\u9875\u66f4\u65b0</p> <pre><code>postgres=# update mytable set val = 100 where id = 5;\nUPDATE 1\npostgres=# select ctid,* from mytable where id = 5;\n  ctid  | id | val \n--------+----+-----\n (1,10) |  5 | 100\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# select  n_tup_upd, n_tup_hot_upd from pg_stat_all_tables where relname = 'mytable';\n n_tup_upd | n_tup_hot_upd \n-----------+---------------\n         1 |             0\n(1 \u884c\u8bb0\u5f55)\n\n</code></pre> <p>\u9875\u5185\u6709\u8db3\u591f\u5269\u4f59\u7a7a\u95f4\uff0c\u9875\u5185hot \u66f4\u65b0</p> <pre><code>postgres=# update mytable set val = 100 where id = 230;\nUPDATE 1\npostgres=# select ctid,* from mytable where id = 230;\n  ctid  | id  | val \n--------+-----+-----\n (1,11) | 230 | 100\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# select  n_tup_upd, n_tup_hot_upd from pg_stat_all_tables where relname = 'mytable';\n n_tup_upd | n_tup_hot_upd \n-----------+---------------\n         2 |             1\n(1 \u884c\u8bb0\u5f55)\n</code></pre> <p>\u9875\u5185\u6709\u8db3\u591f\u7a7a\u95f4\uff0c\u4f46\u662f\u66f4\u65b0\u7684\u5b57\u6bb5\u5305\u542b\u7d22\u5f15\u7684\u60c5\u51b5,\u6ca1\u6709\u53d1\u751fhot \u66f4\u65b0</p> <pre><code>postgres=# create index ON mytable (val );\nCREATE INDEX\npostgres=# update mytable set val = 100 where id = 231;\nUPDATE 1\npostgres=# select ctid,* from mytable where id = 231;\n  ctid  | id  | val \n--------+-----+-----\n (1,12) | 231 | 100\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# select  n_tup_upd, n_tup_hot_upd from pg_stat_all_tables where relname = 'mytable';\n n_tup_upd | n_tup_hot_upd \n-----------+---------------\n         3 |             1\n(1 \u884c\u8bb0\u5f55)\n\n</code></pre> <p>more</p>"},{"location":"postgres/hypopg-index/","title":"PostgreSQL \u4e2d\u7684\u5047\u8bbe\u7d22\u5f15","text":"<p>github</p>"},{"location":"postgres/hypopg-index/#_1","title":"\u80cc\u666f","text":"<p>\u6570\u636e\u5e93\u4e2d\u7d22\u5f15\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u81f3\u5173\u91cd\u8981\u3002\u5f80\u5f80\u91c7\u7528\u521b\u5efa\u65b0\u7684\u7d22\u5f15\u7684\u65b9\u5f0f\u6765\u4f18\u5316\u73b0\u6709\u6570\u636e\u5e93\u3002</p> <p>\u6d4b\u8bd5\u73af\u5883\u901a\u5e38\u4e0e\u6b63\u5f0f\u73af\u5883\u7684\u6570\u636e\u91cf\u6570\u636e\u5206\u5e03\u4e0d\u540c\uff0c\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u7d22\u5f15\u6548\u679c\u4e0d\u80fd\u5b8c\u5168\u4ee3\u8868\u771f\u5b9e\u7684\u8fd0\u884c\u73af\u5883\u7d22\u5f15\u7684\u6548\u679c\u3002 \u4f46\u662f\u521b\u5efa\u4e00\u4e2a\u7d22\u5f15\u4f1a\u5360\u7528\u7cfb\u7edf\u7684\u8d44\u6e90\u5e76\u4e14\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u3002\u5bf9\u6b63\u5728\u8fd0\u884c\u7684\u7cfb\u7edf\u4f1a\u5e26\u6765\u989d\u5916\u7684\u538b\u529b\u3002 \u5982\u679c\u65b0\u7684\u7d22\u5f15\u5e76\u4e0d\u7406\u60f3\u6216\u4e0d\u751f\uff0c\u518d\u628a\u7d22\u5f15\u5220\u9664\u6548\u5c82\u4e0d\u662f\u65e2\u8d39\u65f6\u6709\u8d39\u529b\uff0c\u5bf9\u7ebf\u4e0a\u8fd0\u884c\u7684\u6570\u636e\u5e93\u4e5f\u4e0d\u53cb\u597d\u3002</p> <p>\u521b\u5efa\u5047\u8bbe\u7d22\u5f15\u51e0\u4e4e\u4e0d\u9700\u8981\u5360\u7528\u7cfb\u7edf\u7684\u8d44\u6e90\uff0c\u672c\u8d28\u4e0a\u662f\u5229\u7528\u6570\u636e\u5e93\u7684\u7edf\u8ba1\u4fe1\u606f\u6765\u6a21\u62df\u7d22\u5f15\u4f7f\u7528\u7684\u6548\u679c\u3002</p> <p>\u521b\u5efa\u5b8c\u6210\u540e\u53ef\u901a\u8fc7explain \u6765\u9a8c\u8bc1\u7d22\u5f15\uff0c\u9884\u5148\u4e86\u89e3\u65b0\u7d22\u5f15\u7684\u4f7f\u7528\u6548\u679c\u3002</p>"},{"location":"postgres/hypopg-index/#_2","title":"\u5b89\u88c5","text":"<ul> <li>RHEL/Rocky Linux</li> </ul> <pre><code>yum install hypopg\n</code></pre> <ul> <li>Debian / Ubuntu</li> </ul> <pre><code>#  XY is the major version\napt install postgresql-XY-hypopg\n</code></pre> <ul> <li>\u6e90\u7801\u5b89\u88c5</li> </ul> <pre><code>wget https://github.com/HypoPG/hypopg/archive/master.zip\n\nunzip master.zip\ncd hypopg-master\n\nmake\nsudo make install\n\nmake install\n</code></pre>"},{"location":"postgres/hypopg-index/#_3","title":"\u4ecb\u7ecd","text":"<p>HypoPG \u521b\u5efa\u7684\u7d22\u5f15 \u53ea\u5b58\u5728\u5f53\u524d\u8fde\u63a5\u7684\u79c1\u6709\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u4efb\u4f55\u5176\u4ed6\u8fd0\u884c\u4e2d\u7684\u8fde\u63a5\u3002</p>"},{"location":"postgres/hypopg-index/#_4","title":"\u652f\u6301","text":"<ul> <li>btree</li> <li>brin</li> <li>hash (requires PostgreSQL 10 or above)</li> <li>bloom (requires the bloom extension to be installed)</li> </ul>"},{"location":"postgres/hypopg-index/#_5","title":"\u4f7f\u7528","text":""},{"location":"postgres/hypopg-index/#_6","title":"\u521b\u5efa","text":"<pre><code>CREATE EXTENSION hypopg ;\n\\dx\n                     List of installed extensions\n  Name   | Version |   Schema   |             Description\n---------+---------+------------+-------------------------------------\n hypopg  | 1.1.0   | public     | Hypothetical indexes for PostgreSQL\n</code></pre>"},{"location":"postgres/hypopg-index/#_7","title":"\u793a\u4f8b","text":""},{"location":"postgres/hypopg-index/#_8","title":"\u521b\u5efa\u6d4b\u8bd5\u6570\u636e\u8868","text":"<pre><code>CREATE TABLE hypo (id integer, val text) ;\nINSERT INTO hypo SELECT i, 'line ' || i FROM generate_series(1, 100000) i ;\nVACUUM ANALYZE hypo ;\n</code></pre>"},{"location":"postgres/hypopg-index/#_9","title":"\u6267\u884c\u8ba1\u5212","text":"<pre><code>EXPLAIN SELECT val FROM hypo WHERE id = 1;\n                       QUERY PLAN\n--------------------------------------------------------\n Seq Scan on hypo  (cost=0.00..1791.00 rows=1 width=14)\n   Filter: (id = 1)\n(2 rows)\n</code></pre>"},{"location":"postgres/hypopg-index/#_10","title":"\u521b\u5efa\u5047\u8bbe\u7d22\u5f15","text":"<pre><code>SELECT * FROM hypopg_create_index('CREATE INDEX ON hypo (id)') ;\n indexrelid |      indexname\n------------+----------------------\n      18284 | &lt;18284&gt;btree_hypo_id\n(1 row)\n\n</code></pre>"},{"location":"postgres/hypopg-index/#_11","title":"\u6267\u884c\u8ba1\u5212","text":"<pre><code>EXPLAIN SELECT val FROM hypo WHERE id = 1;\n                                    QUERY PLAN\n----------------------------------------------------------------------------------\n Index Scan using &lt;18284&gt;btree_hypo_id on hypo  (cost=0.04..8.06 rows=1 width=10)\n   Index Cond: (id = 1)\n(2 rows)\n</code></pre> <pre><code>EXPLAIN ANALYZE SELECT val FROM hypo WHERE id = 1;\n                                            QUERY PLAN\n---------------------------------------------------------------------------------------------------\n Seq Scan on hypo  (cost=0.00..1791.00 rows=1 width=10) (actual time=0.046..46.390 rows=1 loops=1)\n   Filter: (id = 1)\n   Rows Removed by Filter: 99999\n Planning time: 0.160 ms\n Execution time: 46.460 ms\n(5 rows)\n</code></pre>"},{"location":"postgres/hypopg-index/#_12","title":"\u7ba1\u7406\u5047\u8bbe\u7d22\u5f15","text":"<ul> <li>hypopg_list_indexes: \u67e5\u770b\u7d22\u5f15\u5217\u8868</li> </ul> <pre><code>SELECT * FROM hypopg_list_indexes ;\n indexrelid |      index_name       | schema_name | table_name | am_name\n------------+-----------------------+-------------+------------+---------\n      18284 | &lt;18284&gt;btree_hypo_id  | public      | hypo       | btree\n(1 row)\n</code></pre> <ul> <li>hypopg_get_indexdef: \u67e5\u770b\u7d22\u5f15\u5b9a\u4e49</li> </ul> <pre><code>SELECT index_name, hypopg_get_indexdef(indexrelid) FROM hypopg_list_indexes ;\n      index_name       |             hypopg_get_indexdef\n-----------------------+----------------------------------------------\n &lt;18284&gt;btree_hypo_id  | CREATE INDEX ON public.hypo USING btree (id)\n(1 row)\n</code></pre> <ul> <li>hypopg_relation_size: \u67e5\u770b\u5927\u5c0f</li> </ul> <pre><code>SELECT index_name, pg_size_pretty(hypopg_relation_size(indexrelid))\n  FROM hypopg_list_indexes ;\n</code></pre> <ul> <li>hypopg_drop_index: \u5220\u9664\u4e00\u4e2a\u7d22\u5f15</li> <li>hypopg_reset: \u6e05\u7a7a\u6240\u6709\u7d22\u5f15</li> </ul>"},{"location":"postgres/hypopg-index/#_13","title":"\u9690\u85cf\u7d22\u5f15\uff08\u540c\u6837\u5f88\u6709\u7528\uff09","text":""},{"location":"postgres/hypopg-index/#_14","title":"\u521b\u5efa\u771f\u5b9e\u7d22\u5f15","text":"<pre><code>SELECT hypopg_reset();\nCREATE INDEX ON hypo(id);\nCREATE INDEX ON hypo(id, val);\n</code></pre>"},{"location":"postgres/hypopg-index/#_15","title":"\u9690\u85cf\u7d22\u5f15","text":"<pre><code>EXPLAIN SELECT * FROM hypo WHERE id = 1;\n                                    QUERY PLAN\n----------------------------------------------------------------------------------\nIndex Only Scan using hypo_id_val_idx on hypo  (cost=0.29..8.30 rows=1 width=13)\nIndex Cond: (id = 1)\n(2 rows)\n\n</code></pre> <pre><code>SELECT hypopg_hide_index('hypo_id_val_idx'::REGCLASS);\n hypopg_hide_index\n-------------------\nt\n(1 row)\n\nEXPLAIN SELECT * FROM hypo WHERE id = 1;\n                            QUERY PLAN\n-------------------------------------------------------------------------\nIndex Scan using hypo_id_idx on hypo  (cost=0.29..8.30 rows=1 width=13)\nIndex Cond: (id = 1)\n(2 rows)\n</code></pre>"},{"location":"postgres/hypopg-index/#_16","title":"\u9690\u85cf\u7d22\u5f15","text":"<pre><code>SELECT hypopg_hide_index('hypo_id_idx'::REGCLASS);\n hypopg_hide_index\n-------------------\nt\n(1 row)\n\nEXPLAIN SELECT * FROM hypo WHERE id = 1;\n                    QUERY PLAN\n-------------------------------------------------------\nSeq Scan on hypo  (cost=0.00..180.00 rows=1 width=13)\nFilter: (id = 1)\n(2 rows)\n</code></pre>"},{"location":"postgres/hypopg-index/#_17","title":"\u53d6\u6d88\u9690\u85cf\u7d22\u5f15","text":"<pre><code>SELECT hypopg_unhide_index('hypo_id_idx'::regclass);\n hypopg_unhide_index\n-------------------\nt\n(1 row)\n\nEXPLAIN SELECT * FROM hypo WHERE id = 1;\n                            QUERY PLAN\n-------------------------------------------------------------------------\nIndex Scan using hypo_id_idx on hypo  (cost=0.29..8.30 rows=1 width=13)\nIndex Cond: (id = 1)\n(2 rows)\n</code></pre>"},{"location":"postgres/hypopg-index/#_18","title":"\u67e5\u770b\u88ab\u9690\u85cf\u7684\u7d22\u5f15","text":"<pre><code>SELECT * FROM hypopg_hidden_indexes();\n indexid\n---------\n526604\n(1 rows)\n</code></pre>"},{"location":"postgres/hypopg-index/#_19","title":"\u53d6\u6d88\u6240\u6709\u88ab\u9690\u85cf\u7684\u7d22\u5f15","text":"<pre><code>hypopg_unhide_all_index()\n</code></pre>"},{"location":"postgres/index-bloom/","title":"Bloom \u7d22\u5f15","text":""},{"location":"postgres/index-bloom/#bloom","title":"Bloom \u7d22\u5f15","text":"<p>Bloom \u8fc7\u6ee4\u5668\u4ee3\u8868\u7684\u662f\u4e00\u7ec4\u503c\u3002\u5b83\u7684\u4f5c\u7528\u662f\u68c0\u6d4b\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u53ef\u80fd\u5c5e\u4e8e\u96c6\u5408\uff0c\u5b83\u53ef\u4ee5\u5141\u8bb8\u6709\u4e00\u4e9bfalse positive\uff0c\u4f46\u662f\u4e0d\u5141\u8bb8\u5b58\u5728false negative\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c3d\u7ba1\u67d0\u4e2a\u5143\u7d20\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u6d4b\u8bd5\u4e5f\u53ef\u80fd\u8fd4\u56detrue\u3002\u7136\u800c\uff0c\u5982\u679c\u5143\u7d20\u5728\u96c6\u5408\u4e2d\uff0c\u5c31\u4e0d\u53ef\u80fd\u8fd4\u56defalse\u3002  \u521b\u5efa\u5728\u4e00\u7ec4\u5217\u4e2d\u7684Bloom\u7d22\u5f15\u53ef\u4ee5\u88ab\u7528\u6765\u52a0\u901f\u5728\u8fd9\u4e9b\u5217\u7684\u5b50\u96c6\u4e0a\u7528AND\u76f8\u8fde\u7684\u7b49\u5f0f\u7684\u67e5\u8be2\u3002 </p> <p>\u5f53\u8868\u5177\u6709\u5f88\u591a\u5c5e\u6027\u5e76\u4e14\u67e5\u8be2\u53ef\u80fd\u4f1a\u6d4b\u8bd5\u5176\u4e2d\u4efb\u610f\u7ec4\u5408\u65f6\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u7d22\u5f15\u6700\u6709\u7528\u3002\u4f20\u7edf\u7684 btree \u7d22\u5f15\u6bd4\u5e03\u9c81\u59c6\u7d22\u5f15\u66f4\u5feb\uff0c\u4f46\u662f\u9700\u8981\u5f88\u591a btree \u7d22\u5f15\u6765\u652f\u6301\u6240\u6709\u53ef\u80fd\u7684\u67e5\u8be2\uff0c\u800c\u5bf9\u4e8e\u5e03\u9c81\u59c6\u7d22\u5f15\u6765\u8bf4\u53ea\u9700\u8981\u4e00\u4e2a\u5373\u53ef\u3002</p>"},{"location":"postgres/index-bloom/#bloom-btree","title":"\u6ce8\u610f: bloom \u7d22\u5f15\u53ea\u652f\u6301\u7b49\u503c\u67e5\u8be2\uff0c\u800c btree \u7d22\u5f15\u8fd8\u80fd\u6267\u884c\u4e0d\u7b49\u548c\u8303\u56f4\u641c\u7d22\u3002","text":""},{"location":"postgres/index-bloom/#_1","title":"\u521b\u5efa\u4e00\u4e2a\u7d22\u5f15","text":"<pre><code>CREATE INDEX bloomidx ON tbloom USING bloom (i1,i2,i3)\n       WITH (length=80, col1=2, col2=2, col3=4);\n</code></pre> <p>with \u90e8\u5206\u53ef\u7701\u7565</p> <p>length \u6bcf\u4e2a\u7b7e\u540d\uff08\u7d22\u5f15\u9879\uff09\u7684\u957f\u5ea6\u4f4d\u6570\u3002\u9ed8\u8ba4\u662f80\u4f4d\uff0c\u6700\u957f\u662f4096\u4f4d\u3002</p> <p>col1 \u2014 col32 \u4ece\u6bcf\u4e00\u4e2a\u7d22\u5f15\u5217\u4ea7\u751f\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57\u8868\u793a\u5b83\u6240\u63a7\u5236\u7684\u7d22\u5f15\u5217\u7684\u7f16\u53f7\u3002\u9ed8\u8ba4\u662f2\u4f4d\uff0c\u6700\u5927\u662f4095\u4f4d\u3002\u6ca1\u6709\u5b9e\u9645\u4f7f\u7528\u7684\u7d22\u5f15\u5217\u7684\u53c2\u6570\u4f1a\u88ab\u5ffd\u7565\u3002</p>"},{"location":"postgres/index-bloom/#_2","title":"\u4f7f\u7528\u4f8b\u5b50","text":"<p>http://postgres.cn/docs/10/bloom.html</p>"},{"location":"postgres/index-invalid/","title":"\u7d22\u5f15\u5931\u6548","text":""},{"location":"postgres/index-invalid/#_1","title":"\u7b80\u4ecb","text":"<p>\u7d22\u5f15\u7684\u4f5c\u7528\uff0c\u52a0\u901f\u68c0\u7d22\uff0c\u6392\u5e8f\uff0c\u5206\u7ec4\u3002</p> <p>\u4f18\u70b9\uff1a \u68c0\u7d22</p> <p>\u7f3a\u70b9\uff1a \u65b0\u589e\uff0c\u66f4\u65b0\u65f6\u9700\u8981\u7ef4\u62a4\u7d22\u5f15\uff0c\u5360\u78c1\u76d8\u7a7a\u95f4\uff0c\u521b\u5efa\u65f6\u9501\u8868\u3002</p> <p>\u7ef4\u62a4\uff1a \u6839\u636e\u7edf\u8ba1\u8868\u53d1\u751f\u5168\u8868\u626b\u63cf\u6b21\u6570\uff0c\u7d22\u5f15\u4f7f\u7528\u6b21\u6570\u3002\u5408\u7406\u6dfb\u52a0\u5220\u9664\u7d22\u5f15\u3002</p>"},{"location":"postgres/index-invalid/#_2","title":"\u7d22\u5f15\u5931\u6548\u7684\u573a\u666f","text":"<p>\u5982\u679cwhere\u8fc7\u6ee4\u6761\u4ef6\u8bbe\u7f6e\u4e0d\u5408\u7406\uff0c\u5373\u4f7f\u7d22\u5f15\u5b58\u5728\uff0c\u4e14where\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7d22\u5f15\u5217\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u5168\u8868\u626b\u63cf\uff0c\u7d22\u5f15\u4e0d\u8d77\u4f5c\u7528\u3002\u4ec0\u4e48\u6761\u4ef6\u4e0b\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\u5462\uff1f</p> <p>1.\u4efb\u4f55\u8ba1\u7b97\u3001\u51fd\u6570\u3001\u7c7b\u578b\u8f6c\u6362</p> <p>2.!=</p> <p>3.NOT\uff0c\u76f8\u5f53\u4e8e\u4f7f\u7528\u51fd\u6570</p> <p>4.\u6a21\u7cca\u67e5\u8be2\u901a\u914d\u7b26\u5728\u5f00\u5934</p> <p>5.\u7d22\u5f15\u5b57\u6bb5\u5728\u8868\u4e2d\u5360\u6bd4\u8f83\u9ad8</p> <p>6.\u591a\u5b57\u6bb5btree\u7d22\u5f15\u67e5\u8be2\u6761\u4ef6\u4e0d\u5305\u542b\u7b2c\u4e00\u5217</p> <p>7.\u591a\u5b57\u6bb5\u7d22\u5f15\u67e5\u8be2\u6761\u4ef6\u4f7f\u7528OR\uff08\u6709\u65f6\u4e5f\u4f1a\u8d70\u7d22\u5f15\u626b\u63cf\uff0c\u4f46\u67e5\u8be2\u6548\u7387\u4e0d\u9ad8\uff09</p> <p>8.\u8868\u4e2d\u6570\u636e\u91cf\u592a\u5c11\u65f6</p>"},{"location":"postgres/index-invalid/#_3","title":"\u5b9e\u4f8b","text":"<p>\u6d4b\u8bd5\u8868</p> <pre><code>\u521b\u5efa\u8868\npostgres#=create table tbl_index(a bigint,b timestamp without time zone ,c varchar(12));\n\n\u63d2\u51651kw\u6570\u636e\uff0c\u6253\u5f00\u8ba1\u65f6\u5668 \u5bf9\u6bd4\u521b\u5efa\u7d22\u5f15\u5bf9\u6570\u636e\u63d2\u5165\u7684\u5f71\u54cd\u3002\n\npostgres=# \\timing \nTiming is on.\n\npostgres=# insert into tbl_index select generate_series(1,10000000),clock_timestamp()::timestamp without time zone,'zhang';\nINSERT 0 10000000\nTime: 25004.214 ms (00:25.004)\n\npostgres=# create index tbl_index_a ON tbl_index using btree (a);\nCREATE INDEX\nTime: 4119.733 ms (00:04.120)\n\npostgres=# create index tbl_index_b ON tbl_index using btree (b);\nCREATE INDEX\nTime: 6229.857 ms (00:06.230)\n\npostgres=# insert into tbl_index select generate_series(1,10000000),clock_timestamp()::timestamp without time zone,'eamon';\nINSERT 0 10000000\nTime: 153963.850 ms (02:33.964)\n</code></pre> <p>tips </p> <p>\u5927\u91cf\u6570\u636e\u5bfc\u5165\u65f6\u5efa\u8bae\u5148\u5bfc\u5165\u6570\u636e\u540e\u521b\u5efa\u7d22\u5f15</p> <p>\u66f4\u65b0\u9891\u7e41\u7684\u5b57\u6bb5\u4e0d\u5efa\u8bae\u5efa\u7d22\u5f15\uff0c\u5982update_time</p>"},{"location":"postgres/index-invalid/#1","title":"1.\u4efb\u4f55\u8ba1\u7b97\u3001\u51fd\u6570\u3001\u7c7b\u578b\u8f6c\u6362","text":"<pre><code>#\u7d22\u5f15\u68c0\u7d22\npostgres=# explain analyze select * from tbl_index where a = 100;\n                                                       QUERY PLAN                                                        \n-------------------------------------------------------------------------------------------------------------------------\n Index Scan using tbl_index_a on tbl_index  (cost=0.44..19.78 rows=4 width=22) (actual time=0.012..0.015 rows=2 loops=1)\n   Index Cond: (a = 100)\n Planning time: 0.053 ms\n Execution time: 0.027 ms\n(4 rows)\n\n#\u8ba1\u7b97\npostgres=# explain analyze select * from tbl_index where a +1 = 100;\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..263387.92 rows=99999 width=22) (actual time=0.495..478.375 rows=2 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on tbl_index  (cost=0.00..252388.02 rows=41666 width=22) (actual time=220.138..465.801 rows=1 loops=3)\n         Filter: ((a + 1) = 100)\n         Rows Removed by Filter: 6666666\n Planning time: 0.107 ms\n Execution time: 478.411 ms\n(8 rows)\n#\u89e3\u51b3\u65b9\u6cd5\ncreate index tbl_index_a_1 on tbl_index using btree ((a+1));\n\n#\u7c7b\u578b\u8f6c\u6362\npostgres=# explain analyze select * from tbl_index where a::varchar  = '100';\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..284221.09 rows=99999 width=22) (actual time=0.529..724.035 rows=2 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on tbl_index  (cost=0.00..273221.19 rows=41666 width=22) (actual time=355.491..713.103 rows=1 loops=3)\n         Filter: (((a)::character varying)::text = '100'::text)\n         Rows Removed by Filter: 6666666\n Planning time: 0.168 ms\n Execution time: 724.075 ms\n(8 rows)\n\npostgres=# explain analyze select * from tbl_index where b::date = '2020-04-15';\n                                                             QUERY PLAN                                                             \n------------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..263387.92 rows=99999 width=22) (actual time=0.505..4764.531 rows=20000000 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on tbl_index  (cost=0.00..252388.02 rows=41666 width=22) (actual time=0.021..789.147 rows=6666667 loops=3)\n         Filter: ((b)::date = '2020-04-15'::date)\n Planning time: 0.146 ms\n Execution time: 5182.919 ms\n(7 rows)\n\nTime: 5184.795 ms (00:05.185)\n\n#\u89e3\u51b3\u65b9\u6cd5 \n\ncreate index tbl_index_a2str on tbl_index using btree ((a::varchar));\ncreate index tbl_index_b2date on tbl_index using btree ((b::date));\n\nselect * from tbl_index where b &lt; '2020-04-16 00:00:00' and b &gt;= '2020-04-15 00:00:00';\n\n</code></pre>"},{"location":"postgres/index-invalid/#2","title":"2.!=","text":"<pre><code>postgres=# explain analyze select * from tbl_index where a != 100;\n                                                        QUERY PLAN                                                        \n--------------------------------------------------------------------------------------------------------------------------\n Seq Scan on tbl_index  (cost=0.00..377387.04 rows=19999839 width=22) (actual time=0.020..1384.726 rows=19999998 loops=1)\n   Filter: (a &lt;&gt; 100)\n   Rows Removed by Filter: 2\n Planning time: 0.132 ms\n Execution time: 1790.685 ms\n(5 rows)\n\nTime: 1792.412 ms (00:01.792)\n</code></pre>"},{"location":"postgres/index-invalid/#3-not","title":"3. NOT","text":"<pre><code>postgres=# explain analyze select * from tbl_index where a is null;\n                                                       QUERY PLAN                                                       \n------------------------------------------------------------------------------------------------------------------------\n Index Scan using tbl_index_a on tbl_index  (cost=0.44..8.21 rows=1 width=22) (actual time=0.022..0.022 rows=0 loops=1)\n   Index Cond: (a IS NULL)\n Planning time: 0.123 ms\n Execution time: 0.055 ms\n(4 rows)\n\nTime: 1.694 ms\npostgres=# explain analyze select * from tbl_index where a is not null;\n                                                        QUERY PLAN                                                        \n--------------------------------------------------------------------------------------------------------------------------\n Seq Scan on tbl_index  (cost=0.00..327389.00 rows=20000000 width=22) (actual time=0.025..1375.125 rows=20000000 loops=1)\n   Filter: (a IS NOT NULL)\n Planning time: 0.121 ms\n Execution time: 1789.101 ms\n(4 rows)\n\nTime: 1790.625 ms (00:01.791)\n</code></pre>"},{"location":"postgres/index-invalid/#4","title":"4.\u6a21\u7cca\u67e5\u8be2\u901a\u914d\u7b26\u5728\u5f00\u5934","text":"<p>\u53c2\u89c1</p>"},{"location":"postgres/index-invalid/#5","title":"5.\u7d22\u5f15\u5b57\u6bb5\u5728\u8868\u4e2d\u5360\u6bd4\u8f83\u9ad8","text":"<pre><code>postgres=# create index tbl_index_c on tbl_index using btree (c);\nCREATE INDEX\nTime: 10552.062 ms (00:10.552)\n\npostgres=# analyze tbl_index ;\nANALYZE\nTime: 118.018 ms\npostgres=# explain analyze select * from tbl_index where c = 'zhang';\n                                                        QUERY PLAN                                                        \n--------------------------------------------------------------------------------------------------------------------------\n Seq Scan on tbl_index  (cost=0.00..377389.90 rows=10034703 width=22) (actual time=0.021..1409.096 rows=10000000 loops=1)\n   Filter: ((c)::text = 'zhang'::text)\n   Rows Removed by Filter: 10000000\n Planning time: 0.562 ms\n Execution time: 1612.769 ms\n(5 rows)\n\nTime: 1615.034 ms (00:01.615)\n\npostgres=# explain analyze select * from tbl_index where c = 'eamon';\n                                                        QUERY PLAN                                                         \n---------------------------------------------------------------------------------------------------------------------------\n Seq Scan on tbl_index  (cost=0.00..377389.90 rows=9965369 width=22) (actual time=616.952..1404.717 rows=10000000 loops=1)\n   Filter: ((c)::text = 'eamon'::text)\n   Rows Removed by Filter: 10000000\n Planning time: 0.066 ms\n Execution time: 1607.572 ms\n(5 rows)\n\nTime: 1609.019 ms (00:01.609)\n\npostgres=# insert into tbl_index values(1,clock_timestamp()::timestamp without time zone,'zhangeamon');\nINSERT 0 1\nTime: 2.598 ms\n\npostgres=# explain analyze select * from tbl_index where c = 'zhangeamon';\n                                                       QUERY PLAN                                                        \n-------------------------------------------------------------------------------------------------------------------------\n Index Scan using tbl_index_c on tbl_index  (cost=0.44..7.46 rows=1 width=22) (actual time=0.086..96.848 rows=1 loops=1)\n   Index Cond: ((c)::text = 'zhangeamon'::text)\n Planning time: 0.157 ms\n Execution time: 96.881 ms\n(4 rows)\n\nTime: 98.464 ms\n</code></pre>"},{"location":"postgres/index-invalid/#6btree","title":"6.\u591a\u5b57\u6bb5btree\u7d22\u5f15\u67e5\u8be2\u6761\u4ef6\u4e0d\u5305\u542b\u7b2c\u4e00\u5217","text":"<pre><code>#\u521b\u5efa\u8868\npostgres=# create table tbl_indexes(a int ,b varchar,c varchar);\nCREATE TABLE\nTime: 6.942 ms\n\n#\u63d2\u5165\u6570\u636e\npostgres=# insert into tbl_indexes select generate_series(1,5000000),substring(md5(random()::text),0,6),substring(md5(random()::text),0,6);\nINSERT 0 5000000\nTime: 15003.647 ms (00:15.004)\n\n#\u521b\u5efa\u591a\u503c\u7d22\u5f15\npostgres=# create index tbl_indexes_a_b_c on tbl_indexes using btree (a,b,c);\nCREATE INDEX\nTime: 2207.480 ms (00:02.207)\n\npostgres=# select * from tbl_indexes limit 10;\n a  |   b   |   c   \n----+-------+-------\n  1 | 0e7fb | d6370\n  2 | e2eb1 | 51d3e\n  3 | 93521 | 5f6b6\n  4 | 5880d | 23527\n  5 | 66f8e | f462f\n  6 | 6ceb3 | c9beb\n  7 | 18d44 | 11d64\n  8 | f76a4 | edd04\n  9 | 91975 | 4c79d\n 10 | 56f26 | 09e16\n(10 rows)\n\n\n#\u8d70\u7d22\u5f15\npostgres=# explain analyze select * from tbl_indexes where a = 10;\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on tbl_indexes  (cost=582.18..28488.04 rows=25000 width=68) (actual time=0.030..0.031 rows=1 loops=1)\n   Recheck Cond: (a = 10)\n   Heap Blocks: exact=1\n   -&gt;  Bitmap Index Scan on tbl_indexes_a_b_c  (cost=0.00..575.93 rows=25000 width=0) (actual time=0.022..0.022 rows=1 loops=1)\n         Index Cond: (a = 10)\n Planning time: 0.127 ms\n Execution time: 0.075 ms\n(7 rows)\n\nTime: 2.878 ms\npostgres=# explain analyze select * from tbl_indexes where a = 10 and b = '91975';\n                                                         QUERY PLAN                                                         \n----------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on tbl_indexes  (cost=5.71..482.09 rows=125 width=68) (actual time=0.025..0.025 rows=0 loops=1)\n   Recheck Cond: ((a = 10) AND ((b)::text = '91975'::text))\n   -&gt;  Bitmap Index Scan on tbl_indexes_a_b_c  (cost=0.00..5.68 rows=125 width=0) (actual time=0.022..0.022 rows=0 loops=1)\n         Index Cond: ((a = 10) AND ((b)::text = '91975'::text))\n Planning time: 0.146 ms\n Execution time: 0.074 ms\n(6 rows)\n\nTime: 2.886 ms\npostgres=# explain analyze select * from tbl_indexes where a = 10 and b = '91975' and c = '4c79d';\n                                                             QUERY PLAN                                                              \n-------------------------------------------------------------------------------------------------------------------------------------\n Index Only Scan using tbl_indexes_a_b_c on tbl_indexes  (cost=0.43..8.45 rows=1 width=68) (actual time=0.025..0.025 rows=0 loops=1)\n   Index Cond: ((a = 10) AND (b = '91975'::text) AND (c = '4c79d'::text))\n   Heap Fetches: 0\n Planning time: 0.158 ms\n Execution time: 0.067 ms\n(5 rows)\n\nTime: 3.136 ms\npostgres=# explain analyze select * from tbl_indexes where a = 10  and c = '4c79d';\n                                                          QUERY PLAN                                                          \n------------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on tbl_indexes  (cost=638.46..1114.84 rows=125 width=68) (actual time=0.027..0.027 rows=0 loops=1)\n   Recheck Cond: ((a = 10) AND ((c)::text = '4c79d'::text))\n   -&gt;  Bitmap Index Scan on tbl_indexes_a_b_c  (cost=0.00..638.43 rows=125 width=0) (actual time=0.023..0.024 rows=0 loops=1)\n         Index Cond: ((a = 10) AND ((c)::text = '4c79d'::text))\n Planning time: 0.178 ms\n Execution time: 0.077 ms\n(6 rows)\n\nTime: 2.917 ms\n\n#\u4e0d\u8d70\u7d22\u5f15\npostgres=# explain analyze select * from tbl_indexes where b = '91975' and c = '4c79d';\n                                                         QUERY PLAN                                                          \n-----------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..59290.50 rows=125 width=68) (actual time=0.577..127.956 rows=1 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on tbl_indexes  (cost=0.00..58278.00 rows=52 width=68) (actual time=78.366..119.555 rows=0 loops=3)\n         Filter: (((b)::text = '91975'::text) AND ((c)::text = '4c79d'::text))\n         Rows Removed by Filter: 1666666\n Planning time: 0.154 ms\n Execution time: 127.993 ms\n(8 rows)\n\nTime: 130.603 ms\n\n</code></pre>"},{"location":"postgres/index-invalid/#7or","title":"7.\u591a\u5b57\u6bb5\u7d22\u5f15\u67e5\u8be2\u6761\u4ef6\u4f7f\u7528OR\uff08\u6709\u65f6\u4e5f\u4f1a\u8d70\u7d22\u5f15\u626b\u63cf\uff0c\u4f46\u67e5\u8be2\u6548\u7387\u4e0d\u9ad8\uff09","text":"<pre><code>postgres=# explain analyze select * from tbl_indexes where a = 10  or c = '4c79d';\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..64265.50 rows=49875 width=68) (actual time=0.520..138.035 rows=5 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on tbl_indexes  (cost=0.00..58278.00 rows=20781 width=68) (actual time=52.632..129.858 rows=2 loops=3)\n         Filter: ((a = 10) OR ((c)::text = '4c79d'::text))\n         Rows Removed by Filter: 1666665\n Planning time: 0.151 ms\n Execution time: 138.075 ms\n(8 rows)\n\nTime: 139.952 ms\npostgres=# explain analyze select * from tbl_indexes where a = 10  or b = '4c79d';\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..64265.50 rows=49875 width=68) (actual time=0.513..131.024 rows=8 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on tbl_indexes  (cost=0.00..58278.00 rows=20781 width=68) (actual time=51.260..123.413 rows=3 loops=3)\n         Filter: ((a = 10) OR ((b)::text = '4c79d'::text))\n         Rows Removed by Filter: 1666664\n Planning time: 0.152 ms\n Execution time: 131.064 ms\n(8 rows)\n\nTime: 132.946 ms\npostgres=# explain analyze select * from tbl_indexes where a = 10  or a = 11;\n                                                              QUERY PLAN                                                              \n--------------------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on tbl_indexes  (cost=1176.80..29434.85 rows=49875 width=68) (actual time=0.034..0.036 rows=2 loops=1)\n   Recheck Cond: ((a = 10) OR (a = 11))\n   Heap Blocks: exact=1\n   -&gt;  BitmapOr  (cost=1176.80..1176.80 rows=50000 width=0) (actual time=0.026..0.027 rows=0 loops=1)\n         -&gt;  Bitmap Index Scan on tbl_indexes_a_b_c  (cost=0.00..575.93 rows=25000 width=0) (actual time=0.020..0.020 rows=1 loops=1)\n               Index Cond: (a = 10)\n         -&gt;  Bitmap Index Scan on tbl_indexes_a_b_c  (cost=0.00..575.93 rows=25000 width=0) (actual time=0.005..0.005 rows=1 loops=1)\n               Index Cond: (a = 11)\n Planning time: 0.152 ms\n Execution time: 0.090 ms\n(10 rows)\n\nTime: 2.928 ms\n\n\u5982\u679c\u68c0\u7d22\u6761\u4ef6\u4e3a\u540c\u4e00\u4e2a\u5b57\u6bb5 \u5982a = 1 or a =2  \u8f6c\u6362\u4e3a a in (1,2) \u4f1a\u66f4\u4f18\u3002\n</code></pre> <p>\u5982\u679c\u591a\u4e2a\u5b57\u6bb5\u4e3a\u540c\u4e00\u7c7b\u578b\u53ef\u4f7f\u7528\u6570\u7ec4\u5316\u7d22\u5f15</p> <pre><code>indexdb=# CREATE TABLE tbloom AS\nindexdb-#    SELECT\nindexdb-#      (random() * 1000000)::int as i1,\nindexdb-#      (random() * 1000000)::int as i2,\nindexdb-#      (random() * 1000000)::int as i3,\nindexdb-#      (random() * 1000000)::int as i4,\nindexdb-#      (random() * 1000000)::int as i5,\nindexdb-#      (random() * 1000000)::int as i6\nindexdb-#    FROM\nindexdb-#   generate_series(1,10000000);\nSELECT 10000000\n\n-- \u521b\u5efabloom\u7d22\u5f15\nindexdb=# CREATE index btreeidx ON tbloom (i1, i2, i3, i4, i5, i6);\nCREATE INDEX\n\nindexdb=# EXPLAIN ANALYZE SELECT * FROM tbloom WHERE i2 = 898732 OR i5 = 123451;\n                                                                  QUERY PLAN                                                                  \n----------------------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=249337.50..385507.50 rows=99750 width=24) (actual time=345.415..684.760 rows=19 loops=1)\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Bitmap Heap Scan on tbloom  (cost=248337.50..374532.50 rows=41562 width=24) (actual time=397.157..672.875 rows=6 loops=3)\n         Filter: ((i2 = 898732) OR (i5 = 123451))\n         Rows Removed by Filter: 3333327\n         Heap Blocks: exact=21455\n         -&gt;  Bitmap Index Scan on btreeidx  (cost=0.00..248312.56 rows=10000000 width=0) (actual time=331.686..331.686 rows=10000000 loops=1)\n Planning time: 0.165 ms\n Execution time: 684.813 ms\n(10 rows)\n\n-- \u521b\u5efa\u6570\u7ec4\u5316\u7d22\u5f15\nindexdb=# create index ON tbloom USING gin ( (array[i2,i5]));\nCREATE INDEX\n\nindexdb=# explain analyze select * from tbloom where (ARRAY[i2, i5]) &amp;&amp; array[898732] or (ARRAY[i2, i5]) &amp;&amp; array[123451];\n                                                              QUERY PLAN                                                              \n--------------------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on tbloom  (cost=991.87..68961.41 rows=99750 width=24) (actual time=0.068..0.174 rows=41 loops=1)\n   Recheck Cond: ((ARRAY[i2, i5] &amp;&amp; '{898732}'::integer[]) OR (ARRAY[i2, i5] &amp;&amp; '{123451}'::integer[]))\n   Heap Blocks: exact=41\n   -&gt;  BitmapOr  (cost=991.87..991.87 rows=100000 width=0) (actual time=0.046..0.046 rows=0 loops=1)\n         -&gt;  Bitmap Index Scan on tbloom_array_idx  (cost=0.00..471.00 rows=50000 width=0) (actual time=0.030..0.030 rows=23 loops=1)\n               Index Cond: (ARRAY[i2, i5] &amp;&amp; '{898732}'::integer[])\n         -&gt;  Bitmap Index Scan on tbloom_array_idx  (cost=0.00..471.00 rows=50000 width=0) (actual time=0.015..0.015 rows=18 loops=1)\n               Index Cond: (ARRAY[i2, i5] &amp;&amp; '{123451}'::integer[])\n Planning time: 0.266 ms\n Execution time: 0.242 ms\n(10 rows)\n\nTime: 1.311 ms\n</code></pre> <p>\u6027\u80fd\u63d0\u5347\u660e\u663e</p>"},{"location":"postgres/index-invalid/#8","title":"8.\u8868\u4e2d\u6570\u636e\u91cf\u5c11\u65f6","text":"<pre><code>postgres=# create table tbl_index_less(a int);\nCREATE TABLE\n\npostgres=# create index tbl_index_less_a on tbl_index_less using btree (a);\nCREATE INDEX\n\n-- \u52a010\u6761\npostgres=# insert into tbl_index_less select generate_series(1,10);\nINSERT 0 10\n\npostgres=# analyze tbl_index_less ;\nANALYZE\n\npostgres=# explain analyze select * from tbl_index_less where a = 4;\n                                               QUERY PLAN                                               \n--------------------------------------------------------------------------------------------------------\n Seq Scan on tbl_index_less  (cost=0.00..1.12 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=1)\n   Filter: (a = 4)\n   Rows Removed by Filter: 9\n Planning time: 0.276 ms\n Execution time: 0.054 ms\n(5 rows)\n\n-- \u52a0100\u6761\npostgres=# insert into tbl_index_less select generate_series(10,100);\nINSERT 0 91\n\npostgres=# explain analyze select * from tbl_index_less where a = 4;\n                                               QUERY PLAN                                               \n--------------------------------------------------------------------------------------------------------\n Seq Scan on tbl_index_less  (cost=0.00..2.26 rows=1 width=4) (actual time=0.017..0.033 rows=1 loops=1)\n   Filter: (a = 4)\n   Rows Removed by Filter: 100\n Planning time: 0.236 ms\n Execution time: 0.062 ms\n(5 rows)\n\n-- 1000\u6761\npostgres=# insert into tbl_index_less select generate_series(100,1000);\nINSERT 0 901\n\npostgres=# analyze tbl_index_less ;\nANALYZE\npostgres=# explain analyze select * from tbl_index_less where a = 4;\n                                                              QUERY PLAN                                                              \n--------------------------------------------------------------------------------------------------------------------------------------\n Index Only Scan using tbl_index_less_a on tbl_index_less  (cost=0.28..8.29 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)\n   Index Cond: (a = 4)\n   Heap Fetches: 1\n Planning time: 0.073 ms\n Execution time: 0.023 ms\n(5 rows)\n\n</code></pre> <p>tips </p> <p>\u6570\u636e\u5e93\u662f\u5982\u4f55\u77e5\u9053\u8868\u4e2d\u7684\u6570\u636e\u91cf\u53ca\u6570\u636e\u5206\u5e03\u60c5\u51b5 \uff0c\u4e3b\u8981\u662f\u4f9d\u8d56\u7edf\u8ba1\u4fe1\u606f pg_class ,pg_stats\u3002</p> <p>\u5f53\u8868\u6570\u636e\u53d8\u66f4\u5f88\u5927\u65f6\uff0c\u5982\u6279\u91cf\u5bfc\u5165\u6570\u636e\u6216\u5220\u9664\u6570\u636e\u65f6\u3002\u9700\u8981\u53ca\u65f6\u4f7f\u7528analyze\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\u3002</p> <p>\u5173\u4e8e null  https://yq.aliyun.com/articles/241219</p> <p>\u67e5\u770b\u8868\u987a\u5e8f\u626b\u63cf\u548c\u7d22\u5f15\u7684\u6b21\u6570</p> <pre><code>select * from pg_stat_all_tables where relname = 'tab_name';\nselect * from pg_stat_all_indexes where relname = 'tbl_name';\n</code></pre> <p>\u521b\u5efa\u7d22\u5f15 http://www.cnblogs.com/alianbog/p/5631505.html </p> <p>mysql \u7d22\u5f15\u5efa\u8bae \u53c2\u8003 https://mp.weixin.qq.com/s/xdbo67F72a9eTV93TEuL6w</p> <p>\u7d22\u5f15\u5229\u7528\u7edf\u8ba1</p> <pre><code>A PostgreSQL extension for collecting statistics about predicates, helping find what indices are missing\n</code></pre>"},{"location":"postgres/index-invalid/#_4","title":"\u5229\u7528\u7d22\u5f15\u5931\u6548\u6539\u53d8\u6267\u884c\u8ba1\u5212\u6848\u4f8b","text":"<p>\u8868\u5b9a\u4e49&amp;\u6570\u636e\u5206\u5e03</p> <pre><code>create table tb1(id int primary key,c1 int);\ncreate index on tb1(c1);\ninsert into tb1 select id, id/10000 from generate_series(1,10000000)id;\n</code></pre> <p>SQL&amp;\u6267\u884c\u8ba1\u5212</p> <pre><code>postgres=# explain analyze select * from tb1 where c1=999 order by id limit 10; QUERY PLAN\n-------------------------------------------------------------------------------------------------------------------------------- Limit (cost=0.43..332.29 rows=10 width=8) (actual time=1571.315..1571.319 rows=10 loops=1)\n-&gt; Index Scan using tb1_pkey on tb1 (cost=0.43..328935.03 rows=9912 width=8) (actual time=1571.314..1571.316 rows=10 loops=1)\nFilter: (c1 = 999)\nRows Removed by Filter: 9989999 Planning Time: 0.112 ms\nExecution Time: 1571.337 ms\n(6 rows)\n</code></pre> <p>\u4e0a\u9762Index Scan\u4f30\u7b97\u7684\u884c\u6570\u548ccost\u90fd\u6bd4\u8f83\u51c6\u786e\uff0c\u4f46\u8bc4\u4f30LIMIT\u5b50\u53e5\u65f6\uff0c\u4f18\u5316\u5668\u5047\u8bbe\u6570\u636e\u5206\u5e03\u662f\u5747\u5300\u7684\uff0c \u53ea\u9700\u626b\u63cf\u4e3b\u952e\u7d22\u5f15\u7684 10/9912\u5373\u53ef\u627e\u523010\u6761\u5339\u914d\u7684\u8bb0\u5f55\uff0c\u6700\u7ec8\u7684\u4f30\u7b97\u4ee3\u4ef7\u4e5f\u88abLIMIT\u964d\u523010/9921\u3002\u4f46\u5b9e\u9645\u4e0a\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u90fd\u96c6\u4e2d\u5728\u7d22\u5f15\u7684\u5c3e\u90e8\u3002</p>"},{"location":"postgres/index-invalid/#sql","title":"sql \u6539\u5199","text":"<p>SQL\u6539\u5199\u65b9\u6cd51:\u7834\u574f\u7d22\u5f15\u6392\u5e8f</p> <pre><code>select * from tb1 where c1=999 order by id+0 limit 10;\n</code></pre> <p>SQL\u6539\u5199\u65b9\u6cd52:\u7269\u5316\u5b50\u67e5\u8be2</p> <pre><code>WITH t AS MATERIALIZED(\nselect * from tb1 where c1=999 )\nselect * from t order by id limit 10\n</code></pre>"},{"location":"postgres/index01/","title":"\u6570\u636e\u5e93\u7d22\u5f15\u7c7b\u578b\u53ca\u4f7f\u7528\u573a\u666f","text":""},{"location":"postgres/index01/#_1","title":"\u7528\u9014","text":""},{"location":"postgres/index01/#_2","title":"\u4f18\u70b9","text":"<ul> <li>\u4e3b\u952e\u552f\u4e00\u7ea6\u675f</li> <li>\u52a0\u901f\u68c0\u7d22</li> <li>\u6392\u5e8f </li> </ul>"},{"location":"postgres/index01/#_3","title":"\u7f3a\u70b9","text":"<ul> <li>\u66f4\u65b0\u6570\u636e\u65f6\u9700\u8981\u540c\u65f6\u7ef4\u62a4\u5bf9\u5e94\u7d22\u5f15</li> <li>\u5360\u7528\u78c1\u76d8\u7a7a\u95f4\uff0c\u751a\u81f3\u6bd4\u8868\u6570\u636e\u672c\u8eab\u8fd8\u8981\u591a</li> </ul>"},{"location":"postgres/index01/#_4","title":"\u4f7f\u7528\u573a\u666f\u5229\u5f0a\u5206\u6790","text":"<ul> <li>TP\u4e0eAP\u5e94\u7528</li> <li>\u8bfb\u5199\u4f7f\u7528\u6bd4\u4f8b</li> <li>\u70b9\u67e5\u8be2\u6279\u91cf\u67e5\u8be2</li> </ul>"},{"location":"postgres/index01/#_5","title":"\u521b\u5efa\u7d22\u5f15","text":"<pre><code>\\h create index\n\u547d\u4ee4\uff1a       CREATE INDEX\n\u63cf\u8ff0\uff1a       \u5efa\u7acb\u65b0\u7684\u7d22\u5f15\n\u8bed\u6cd5\uff1a\nCREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ [ IF NOT EXISTS ] \u540d\u79f0 ] ON \u8868\u540d [ USING \u65b9\u6cd5 ]\n    ( { \u5217\u540d\u79f0 | ( \u8868\u8fbe\u5f0f ) } [ COLLATE \u6821\u5bf9\u89c4\u5219 ] [ \u64cd\u4f5c\u7b26\u7c7b\u578b\u7684\u540d\u79f0 ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )\n    [ WITH ( \u5b58\u50a8\u53c2\u6570 = \u503c [, ... ] ) ]\n    [ TABLESPACE \u8868\u7a7a\u95f4\u7684\u540d\u79f0 ]\n    [ WHERE \u8ff0\u8bcd ]\n</code></pre>"},{"location":"postgres/index01/#_6","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u589e\u52a0maintenance_work_mem,\u6709\u5229\u4e8e\u63d0\u9ad8\u521b\u5efa\u7d22\u5f15\u7684\u6548\u7387</li> <li>\u521b\u5efa\u7d22\u5f15\u65f6\u4f1a\u6709\u4e00\u4e2ashare\u9501\u9501\u8868\uff0c\u786e\u4fdd\u8868\u4e0d\u80fd\u6709\u4efb\u4f55\u66f4\u6539\u3002\u5728\u751f\u4ea7\u7cfb\u7edf\u4e2d\u5982\u679c\u5728\u4e00\u4e2a\u5927\u8868\u4e2d\u963b\u585e\u65f6\u95f4\u8fc7\u957f\u4f1a\u6709\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\uff0c create index CONCURRENTLY \u3002    \u521b\u5efa\u7684\u65f6\u95f4\u4f1a\u589e\u52a0\u4e00\u500d\uff0c\u4e0d\u4fdd\u8bc1\u4f1a\u521b\u5efa\u6210\u529f\u3002</li> </ol>"},{"location":"postgres/index01/#_7","title":"\u6570\u636e\u5e93\u7d22\u5f15\u7c7b\u578b\u6982\u89c8(\u5b9e\u73b0\u7b97\u6cd5)","text":"<ul> <li>b-tree\u9002\u5408\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u652f\u6301\u6392\u5e8f\uff0c\u652f\u6301\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u5927\u4e8e\u6216\u7b49\u4e8e\u3001\u5c0f\u4e8e\u6216\u7b49\u4e8e\u7684\u641c\u7d22\u3002LIKE,ILIKE,~ \u641c\u7d22\u3002  </li> <li>hash \u53ea\u652f\u6301\u7b49\u503c\u67e5\u8be2,\u7279\u522b\u9002\u7528\u4e8e\u5b57\u6bb5VALUE\u975e\u5e38\u957f,\u4f8b\u5982\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u7528\u6237\u53ea\u9700\u8981\u7b49\u503c\u641c\u7d22\uff0c\u5efa\u8bae\u4f7f\u7528hash index\u3002 \u6ce8\u610f\uff1ahash\u7d22\u5f15\u6ca1\u6709\u4ea7\u751fwal,\u4e3b\u4ece\u6d41\u590d\u5236\u65f6\u4ece\u5e93\u6ca1\u6709\u521b\u5efa </li> <li>gin\u662f\u5012\u6392\u7d22\u5f15,\u9002\u5408\u591a\u503c\u7c7b\u578b\uff0c\u4f8b\u5982\u6570\u7ec4\u3001JSON\u3001\u5168\u6587\u68c0\u7d22\u3001TOKEN\u3002  </li> <li>gist\uff1aR-Tree\u7d22\u5f15\uff0c\u652f\u6301\u5305\u542b\uff0c\u76f8\u4ea4\uff0c\u8ddd\u79bb\uff0c\u70b9\u9762\u5224\u65ad\u7b49\u67e5\u8be2\uff1b\u9002\u5408\u51e0\u4f55\u7c7b\u578b\u3001\u8303\u56f4\u7c7b\u578b\u3001\u5168\u6587\u68c0\u7d22\u3001\u5f02\u6784\u7c7b\u578b\u7b49\u3002 </li> <li>sp-gist\uff1a\u7a7a\u95f4\u5206\u533a\uff08\u5e73\u8861\uff09r-tree\uff0c\u652f\u6301\u5305\u542b\uff0c\u76f8\u4ea4\uff0c\u8ddd\u79bb\uff0c\u70b9\u9762\u5224\u65ad\u7b49\u67e5\u8be2\uff1b\u9002\u5408\u51e0\u4f55\u7c7b\u578b\u3001\u8303\u56f4\u7c7b\u578b\u3001\u5168\u6587\u68c0\u7d22\u3001\u5f02\u6784\u7c7b\u578b\u7b49\u3002 </li> <li>brin\uff1a\u5757\u7ea7\u7d22\u5f15\uff0c\u9002\u5408\u7269\u7406\u5b58\u50a8\u4e0e\u5217\u503c\u5b58\u5728\u8f83\u597d\u76f8\u5173\u6027\u7684\u5b57\u6bb5\u3002\u6bd4\u5982\u65f6\u5e8f\u6570\u636e\u3001\u7269\u8054\u7f51\u4f20\u611f\u6570\u636e\u3001FEED\u6570\u636e\u7b49\u3002\u652f\u6301\u8303\u56f4\u67e5\u8be2\u3001\u7b49\u503c\u67e5\u8be2\u3002  </li> <li>rum\uff1a\u6269\u5c55\u7d22\u5f15\u63a5\u53e3\uff0c\u652f\u6301\u5168\u6587\u68c0\u7d22\uff0c\u652f\u6301\u9644\u52a0\u6807\u91cf\u7c7b\u578b\u7684\u5168\u6587\u68c0\u7d22\uff0c\u652f\u6301\u5e26\u4f4d\u7f6e\u5173\u7cfb\u7684\u5168\u6587\u68c0\u7d22\u3002  </li> <li>bloom \u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u652f\u6301\u5bf9\u4efb\u610f\u5217\u7684\u7ec4\u5408\u67e5\u8be2\u3002</li> </ul> <p>\u8be6\u7ec6\u4ecb\u7ecd https://leopard.in.ua/2015/04/13/postgresql-indexes   </p> <p>\u901a\u8fc7pageinspect debug \u7d22\u5f15</p> <p>\u67e5\u770b\u6570\u636e\u5e93\u6709\u54ea\u4e9b\u7d22\u5f15\u7c7b\u578b</p> <pre><code>select * from pg_am;\n amname |  amhandler  | amtype \n--------+-------------+--------\n btree  | bthandler   | i\n hash   | hashhandler | i\n gist   | gisthandler | i\n gin    | ginhandler  | i\n spgist | spghandler  | i\n brin   | brinhandler | i\n(6 \u884c\u8bb0\u5f55)\n\n</code></pre>"},{"location":"postgres/index01/#_8","title":"\u6570\u636e\u7d22\u5f15\u7c7b\u578b\uff08\u521b\u5efa\u65b9\u5f0f\uff09","text":"<ul> <li>\u90e8\u5206\u7d22\u5f15</li> <li>\u8868\u8fbe\u5f0f\u7d22\u5f15</li> <li>\u552f\u4e00\u7d22\u5f15</li> <li>\u591a\u5217\u7d22\u5f15</li> </ul>"},{"location":"postgres/index01/#_9","title":"\u5e94\u7528\u4e3e\u4f8b","text":""},{"location":"postgres/index01/#_10","title":"\u5b57\u7b26\u4e32\u7c7b\u578b\u5efa\u7acb\u7d22\u5f15\u6280\u5de7","text":"<ol> <li>\u5012\u5e8f\u5b58\u50a8</li> </ol> <p>\u7531\u4e8e\u8eab\u4efd\u8bc1\u524d\u9762\u7684\u5730\u533a\u7801\u90fd\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5b58\u50a8\u8eab\u4efd\u8bc1\u65f6\uff0c\u53ef\u4ee5\u5c06\u5b83\u5012\u8fc7\u6765\u5b58\u3002\u8eab\u4efd\u8bc1\u540e6\u4f4d\u4f5c\u4e3a\u524d\u7f00\u7d22\u5f15\u6709\u4e00\u5b9a\u7684\u533a\u5206\u5ea6</p> <ol> <li>\u957f\u6587\u672c\u5148\u63d0\u53d6\u6458\u8981\u540e\u521b\u5efa\u7d22\u5f15 </li> </ol> <p>\u53ef\u4ee5\u5728\u8868\u4e0a\u518d\u521b\u5efa\u4e00\u4e2a\u6458\u8981\u5b57\u6bb5\uff0c\u540c\u65f6\u5728\u8fd9\u4e2a\u5b57\u6bb5\u4e0a\u521b\u5efa\u7d22\u5f15\u3002 hash \u3001 md5 \u3001 crc\u7b49\u6458\u8981\u7b97\u6cd5\u3002</p>"},{"location":"postgres/index01/#_11","title":"\u68c0\u67e5\u7f3a\u5931\u7684\u7d22\u5f15","text":"<p>\u5c1d\u8bd5\u67e5\u627e\u51fa\u7ecf\u5e38\u88ab\u626b\u63cf\u7684\u5927\u578b\u8868\uff08avg\u9ad8\uff09,\u987a\u5e8f\u626b\u63cf\u7684\u5360\u6bd4\u9ad8\uff0c\u90a3\u4e9b\u8868\u5c06\u51fa\u73b0\u5728\u7ed3\u679c\u7684\u9876\u90e8\u3002</p> <pre><code>SELECT schemaname, relname, seq_scan,seq_tup_read,idx_scan,seq_tup_read / seq_scan AS avg FROM pg_stat_user_tables WHERE seq_scan &gt; 0 ORDER BY seq_tup_read DESC LIMIT 20;\n</code></pre>"},{"location":"postgres/index01/#gistgin","title":"GiST\u548cGIN\u7d22\u5f15\u7c7b\u578b","text":"<p>\u4e24\u79cd\u7c7b\u578b\u7684\u7d22\u5f15\u53ef\u4ee5\u7528\u4e8e\u52a0\u5feb\u5168\u6587\u641c\u7d22\u3002\u6ce8\u610f\u5168\u6587\u68c0\u7d22\u4e0d\u4e00\u5b9a\u975e\u8981\u4f7f\u7528\u7d22\u5f15\u3002 \u4f46\u662f\u5728\u89c4\u5219\u57fa\u7840\u4e0a\u641c\u7d22\u5217\u7684\u60c5\u51b5\u4e0b\uff0c\u7d22\u5f15\u5f80\u5f80\u662f\u53ef\u53d6\u7684\u3002</p> <pre><code>create extention pg_trgm;\nCREATE INDEX name ON table USING gist(column);\n\u521b\u5efa\u4ee5GiST\uff08\u901a\u7528\u641c\u7d22\u6811\uff09\u4e3a\u57fa\u7840\u7684\u7d22\u5f15\uff0ccolumn\u53ef\u4ee5\u662ftsvector or tsquery \u7c7b\u578b\u3002\n</code></pre> <pre><code>create extention pg_trgm; \nCREATE INDEX name ON table USING gin(column);\n\u521b\u5efa\u4ee5GIN\uff08\u57fa\u56e0\u5012\u6392\u7d22\u5f15\uff09\u4e3a\u57fa\u7840\u7684\u7d22\u5f15\uff0ccolumn\u5fc5\u987b\u662ftsvector\u7c7b\u578b\u3002\n</code></pre> <p>\u5728\u4e24\u4e2a\u7d22\u5f15\u7c7b\u578b\u4e4b\u95f4\u6709\u7740\u5de8\u5927\u7684\u6027\u80fd\u5dee\u5f02\uff0c\u56e0\u6b64\u4e86\u89e3\u5b83\u4eec\u7684\u7279\u6027\u662f\u5f88\u91cd\u8981\u7684\u3002</p> <p>GiST\u7d22\u5f15\u662f\u6709\u635f\u8017\u7684\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u7d22\u5f15\u53ef\u80fd\u4f1a\u4ea7\u751f\u9519\u8bef\u7684\u5339\u914d\uff0c \u5e76\u4e14\u6709\u5fc5\u8981\u68c0\u67e5\u5b9e\u9645\u7684\u8868\u884c\u6d88\u9664\u8fd9\u79cd\u9519\u8bef\u5339\u914d\uff08PostgreSQL\u9700\u8981\u65f6\u81ea\u52a8\u6267\u884c\uff09\u3002 GiST\u7d22\u5f15\u662f\u6709\u635f\u8017\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6587\u6863\u5728\u7d22\u5f15\u4e2d\u901a\u8fc7\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u6807\u7b7e\u8fdb\u884c\u8868\u793a\u3002 \u5b83\u662f\u901a\u8fc7\u6563\u5217\u6bcf\u4e2a\u5355\u8bcd\u5230\u4e00\u4e2an\u4f4d\u7684\u5b57\u7b26\u4e32\u7684\u5355\u4e00\u7684\u70b9\u4ea7\u751f\uff0c\u6240\u6709\u8fd9\u4e9b\u4f4dOR-ed\u4e00\u8d77\u4ea7\u751f\u4e00\u4e2an\u4f4d\u7684\u6587\u4ef6\u6807\u7b7e\u3002 \u5f53\u4e24\u4e2a\u5355\u8bcd\u6563\u5217\u5230\u76f8\u540c\u70b9\u7684\u4f4d\u7f6e\uff0c\u5c06\u6709\u4e00\u4e2a\u9519\u8bef\u5339\u914d\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u7684\u6240\u6709\u5355\u8bcd\u5339\u914d\uff08\u771f\u5b9e\u7684\u6216\u9519\u8bef\u7684\uff09\uff0c \u5219\u5fc5\u987b\u68c0\u7d22\u8868\u884c\u67e5\u770b\u5339\u914d\u662f\u5426\u662f\u6b63\u786e\u7684\u3002</p> <p>\u6570\u636e\u4e22\u5931\u5bfc\u81f4\u4e86\u6027\u80fd\u4e0b\u964d\uff0c\u7531\u4e8e\u8868\u8bb0\u5f55\u7684\u4e0d\u5fc5\u8981\u7684\u83b7\u53d6\uff0c\u4ea7\u751f\u4e86\u9519\u8bef\u7684\u5339\u914d\u3002 \u7531\u4e8e\u968f\u673a\u8bbf\u95ee\u8868\u8bb0\u5f55\u662f\u7f13\u6162\u7684\uff0c\u8fd9\u9650\u5236\u4e86GiST\u7d22\u5f15\u7684\u6548\u80fd\u3002\u9519\u8bef\u5339\u914d\u7684\u53ef\u80fd\u6027\u53d6\u51b3\u4e8e\u51e0\u4e2a\u56e0\u7d20\uff0c \u7279\u522b\u662f\u72ec\u7279\u8bcd\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u63a8\u8350\u4f7f\u7528\u8bcd\u5178\u6765\u964d\u4f4e\u8fd9\u4e9b\u6570\u91cf\u3002</p> <p>GIN\u7d22\u5f15\u5e76\u6ca1\u6709\u635f\u8017\u6807\u51c6\u67e5\u8be2\uff0c\u4f46\u5b83\u4eec\u7684\u6027\u80fd\u53d6\u51b3\u4e8e\u5bf9\u6570\u72ec\u7279\u7684\u5355\u8bcd\u6570\u3002 \uff08\u7136\u800c\uff0cGIN\u7d22\u5f15\u53ea\u5b58\u50a8tsvector\u503c\u7684\u5b57\uff08\u8bcd\uff09\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u6743\u91cd\u6807\u7b7e\u3002\u56e0\u6b64\uff0c \u5f53\u4f7f\u7528\u6d89\u53ca\u6743\u91cd\u7684\u67e5\u8be2\u65f6\uff0c\u9700\u8981\u590d\u67e5\u4e00\u4e2a\u8868\u884c\u3002\uff09</p> <p>\u5728\u9009\u62e9\u8981\u4f7f\u7528\u7684\u7d22\u5f15\u7c7b\u578b\u65f6\uff0cGiST\u6216\u8005GIN\u8003\u8651\u8fd9\u4e9b\u6027\u80fd\u4e0a\u7684\u5dee\u5f02\uff1a</p> <ul> <li> <p>GIN\u7d22\u5f15\u67e5\u627e\u6bd4GiST\u5feb\u7ea6\u4e09\u500d</p> </li> <li> <p>GIN\u7d22\u5f15\u5efa\u7acb\u6bd4GIST\u9700\u8981\u5927\u7ea6\u4e09\u500d\u7684\u65f6\u95f4\u3002</p> </li> <li> <p>GIN\u7d22\u5f15\u66f4\u65b0\u6bd4GiST\u7d22\u5f15\u901f\u5ea6\u6162\uff0c\u4f46\u5982\u679c\u5feb\u901f\u66f4\u65b0\u652f\u6301\u65e0\u6548\uff0c\u5219\u6162\u4e86\u5927\u7ea610\u500d\uff08\u8be6\u60c5\u8bf7\u89c1\u8282\u7b2c 58.4.1 \u8282\uff09</p> </li> <li> <p>GIN\u7d22\u5f15\u6bd4GiST\u7d22\u5f15\u5927\u4e24\u5230\u4e09\u500d</p> </li> </ul> <p>\u4e00\u822c\u6765\u8bf4\uff0cGIN\u7d22\u5f15\u5bf9\u9759\u6001\u6570\u636e\u662f\u6700\u597d\u7684\uff0c\u56e0\u4e3a\u67e5\u627e\u901f\u5ea6\u5f88\u5feb\u3002\u5bf9\u4e8e\u52a8\u6001\u6570\u636e\uff0c GiST\u7d22\u5f15\u66f4\u65b0\u6bd4\u8f83\u5feb\u3002\u5177\u4f53\u800c\u8a00\uff0cGiST\u7d22\u5f15\u975e\u5e38\u9002\u5408\u52a8\u6001\u6570\u636e\uff0c\u5e76\u4e14\u5982\u679c\u72ec\u7279\u7684\u5b57\uff08\u8bcd\uff09\u5728100,000\u4ee5\u4e0b\uff0c \u5219\u6bd4\u8f83\u5feb\uff0c\u800cGIN\u7d22\u5f15\u5c06\u5904\u7406100,000+\u8bcd\u6c47\uff0c\u4f46\u662f\u66f4\u65b0\u6bd4\u8f83\u6162\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0cGIN\u7d22\u5f15\u7f16\u8bd1\u65f6\u95f4\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0maintenance_work_mem\u6539\u8fdb\uff0c \u800cGiST\u7d22\u5f15\u7f16\u8bd1\u65f6\u95f4\u5bf9\u53c2\u6570\u4e0d\u654f\u611f\u3002 </p> <p>\u539f\u6587</p> <p>\u5176\u4ed6</p> <p>Django\u4f7f\u7528postgresql\u505a\u6570\u636e\u5e93 db_index\u521b\u5efa\u7d22\u5f15\u65f6\u4f1a\u521b\u5efa\u7b2c\u4e8c\u4e2a\u7d22\u5f15varchar_pattern_ops\u95ee\u9898</p> <p>https://blog.csdn.net/xiaofuge027/article/details/95338398</p> <p>\u5220\u9664\u65e0\u7528\u7d22\u5f15</p> <pre><code>DO $$DECLARE r record;\nBEGIN\nFOR r IN select  indexrelname from pg_stat_user_indexes where schemaname = 'public' and indexrelname like '%like'\n\nLOOP\n    EXECUTE 'drop index ' || r.indexrelname ||';';\nEND LOOP;\nEND$$;\n</code></pre> <p>\u4e00\u5f20\u8868\u4e2d\u7684\u7d22\u5f15\u5229\u7528\u60c5\u51b5</p> <pre><code>select \n    relname, indexrelname, idx_scan, idx_tup_read, idx_tup_fetch \nfrom \n    pg_stat_user_indexes \nwhere\n    relname = 't_name' \norder by \n    idx_scan asc, idx_tup_read asc, idx_tup_fetch asc;\n</code></pre> <p>\u6240\u6709\u8868\u4e2d\u7684\u7d22\u5f15\u5229\u7528\u60c5\u51b5</p> <pre><code>select \n    relname, indexrelname, idx_scan, idx_tup_read, idx_tup_fetch \nfrom \n    pg_stat_user_indexes \norder by \n    idx_scan asc, idx_tup_read asc, idx_tup_fetch asc;\n\n</code></pre>"},{"location":"postgres/index01/#_12","title":"\u7d22\u5f15\u7ba1\u7406","text":"<pre><code>reindex (verbose) table \n</code></pre> <p>\u5e76\u884c\u91cd\u5efa\u7d22\u5f15</p>"},{"location":"postgres/insert01/","title":"\u5feb\u901f\u751f\u6210\u5927\u91cf\u6570\u636e","text":""},{"location":"postgres/insert01/#1w","title":"\u5728\u6570\u636e\u5e93\u4e2d\u5feb\u901f\u751f\u62101w\u6761\u6570\u636e\uff0c\u6216\u6d4b\u8bd5\u6570\u636e\u5e93\u7684\u5199\u5165\u6027\u80fd\u3002","text":"<pre><code>\u521b\u5efa\u6570\u636e\u5e93\u8868\npostgres=# create table tbl(id int, info text, crt_time timestamp);\nCREATE TABLE \n</code></pre>"},{"location":"postgres/insert01/#generate_series","title":"\u65b9\u6cd5\u4e00 generate_series","text":"<pre><code>\u67e5\u770b\u65b9\u6cd5\u51fd\u6570\npostgres=# \\df generate_series \n                                                                   \u51fd\u6570\u5217\u8868\n  \u67b6\u6784\u6a21\u5f0f  |      \u540d\u79f0       |           \u7ed3\u679c\u6570\u636e\u7c7b\u578b            |                            \u53c2\u6570\u6570\u636e\u7c7b\u578b                            | \u7c7b\u578b \n------------+-----------------+-----------------------------------+--------------------------------------------------------------------+------\n pg_catalog | generate_series | SETOF bigint                      | bigint, bigint                                                     | \u5e38\u89c4\n pg_catalog | generate_series | SETOF bigint                      | bigint, bigint, bigint                                             | \u5e38\u89c4\n pg_catalog | generate_series | SETOF integer                     | integer, integer                                                   | \u5e38\u89c4\n pg_catalog | generate_series | SETOF integer                     | integer, integer, integer                                          | \u5e38\u89c4\n pg_catalog | generate_series | SETOF numeric                     | numeric, numeric                                                   | \u5e38\u89c4\n pg_catalog | generate_series | SETOF numeric                     | numeric, numeric, numeric                                          | \u5e38\u89c4\n pg_catalog | generate_series | SETOF timestamp without time zone | timestamp without time zone, timestamp without time zone, interval | \u5e38\u89c4\n pg_catalog | generate_series | SETOF timestamp with time zone    | timestamp with time zone, timestamp with time zone, interval       | \u5e38\u89c4\n(8 \u884c\u8bb0\u5f55)\n\npostgres=# insert into tbl select id, md5(random()::text), clock_timestamp() from generate_series(1,10000) t(id);  \nINSERT 0 10000  \n</code></pre>"},{"location":"postgres/insert01/#pgbench","title":"\u65b9\u6cd5\u4e8c pgbench","text":"<pre><code>vi test.sql  \n\\set id random(1,10000000)  \ninsert into tbl values (:id, md5(random()::text), now());  \n\npgbench -M prepared -n -r -f ./test.sql -P 1 -c 32 -j 32 -t 1000  \n\n</code></pre>"},{"location":"postgres/insert01/#do","title":"\u65b9\u6cd5\u4e09 do","text":"<pre><code>postgres=# do language plpgsql $$  \ndeclare  \nbegin  \n  for i in 1..100 loop  \n    insert into tbl select mod(id,i), md5(random()::text), clock_timestamp() from generate_series(1,1000) t(id);  \n  end loop;  \nend;  \n$$;  \nDO \n\n</code></pre>"},{"location":"postgres/install01/","title":"\u5b89\u88c5 Postgresql","text":"<p>\u5b98\u7f51</p> <p>1.\u51c6\u5907\u6e90</p> <pre><code>\u6e05\u9664\u5386\u53f2\u6b8b\u4f59\uff0c\u6709\u4e9b\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\u65e7\u7248\u672c\u6570\u636e\u5e93\n\nrpm -qa | grep postgres\n\nrpm -r ****\n\n\u5b89\u88c5\u65b0\u6570\u636e\u6e90\n\nyum install https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm\n\nyum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm\n\n\u53ef\u5c06\u6240\u6709\u7684\u8f6f\u4ef6\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u5982 \uff0c postgresql-10.2 \u66f4\u65b0\u5230\u5f53\u524d\u6700\u65b0\u7684postgresql-10.6\n\nyum update -y \n\n</code></pre> <p>2.\u5b89\u88c5</p> <pre><code>yum install -y postgresql10-server postgresql10  postgresql10-contrib\n</code></pre> <p>3.\u521d\u59cb\u5316</p> <pre><code>\u9ed8\u8ba4\u521d\u59cb\u5316\n/usr/pgsql-10/bin/postgresql-10-setup initdb\n\n\u5efa\u8bae\u5f00\u542f checksums\nsudo su postgres -c  \"/usr/pgsql-10/bin/initdb  --data-checksums -D /var/lib/pgsql/10/data\" \n\n\u81ea\u5b9a\u4e49\n/usr/pgsql-10/bin/initdb -D $PGDATA -U postgres -E UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8 -k \n\n-D \u6570\u636e\u5b58\u653e\u4f4d\u7f6e\n-U \u8d85\u7ea7\u7528\u6237\n-E \u9ed8\u8ba4\u7f16\u7801\n--lc-collate \u533a\u57df Collate\u4f1a\u5f71\u54cd\u4e2d\u6587\u7684\u6392\u5e8f\uff0c\u5728zh_CN\u7684\u533a\u57df\u4e0b\u4e2d\u6587\u6309\u62fc\u97f3\u6392\u5e8f\uff0c\u5176\u5b83\u533a\u57df\u6309\u5b57\u7b26\u7f16\u7801\u6392\u5e8f\u3002\n--lc-ctype \u5b57\u7b26\u7c7b\u578bCtype\u4f1a\u5f71\u54cdpg_trgm\u548c\u90e8\u5206\u6b63\u5219\u5339\u914d\u7684\u7ed3\u679c\uff0c\u6bd4\u5982Ctype\u4e3a'C'\u65f6\uff0cpg_trgm\u5c06\u65e0\u6cd5\u652f\u6301\u4e2d\u6587\u3002\n-k \u4f7f\u7528 data checksums\n</code></pre> <p>\u53ef\u5c06\u6570\u636e\u5b58\u653e\u5230\u5176\u4ed6\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528\u8f6f\u8fde\u63a5\u7684\u65b9\u5f0f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u4f7f\u7528\u8f6f\u8fde\u63a5\u800c\u4e0d\u662f\u66f4\u6539PGDATA\u73af\u5883\u53d8\u91cf\uff0c\u56e0\u4e3a\u5347\u7ea7\u6570\u636e\u5e93\u7684\u65f6 PGDATA \u88ab\u6307\u56de\u9ed8\u8ba4\u503c\u3002</p> <p>\u901a\u8fc7\u8f6f\u8fde\u63a5\u7684\u65b9\u5f0f\u4e0d\u6539\u53d8\u521d\u59cb\u503c:  1 \u5347\u7ea7\u7684\u65f6\u5019\u4e0d\u7528\u4fee\u6539PGDATA  2 \u6570\u636e\u4f4d\u7f6e\u5b58\u653e\u56fa\u5b9a\uff0c\u4fbf\u4e8e\u4ee5\u540e\u7ba1\u7406\u3002  </p> <p>4.\u542f\u52a8\u670d\u52a1\u3000\uff06\u3000\u5f00\u673a\u81ea\u542f</p> <pre><code>systemctl start postgresql-10.service\n\nsystemctl enable postgresql-10.service\n</code></pre> <p>5.\u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650</p> <p>vi postgresql.conf</p> <pre><code>  listen_addresses ='*'\n</code></pre> <p>vi pg_hba.conf</p> <pre><code>  # \"local\" is for Unix domain socket connections only\n  local   all             all                                     trust\n  # IPv4 local connections:\n  host    all             all             127.0.0.1/32            trust\n  host    all             all             0.0.0.0/0               md5\n  # IPv6 local connections:\n  host    all             all             ::1/128                 ident\n\n</code></pre> <pre><code>systemctl restart postgresql-10.service\n</code></pre> <p>6.\u8bbe\u7f6e\u5bc6\u7801</p> <pre><code>  #psql -U postgres\n\n  postgres=# ALTER USER postgres WITH PASSWORD 'postgres'\n  \\q\n\n</code></pre> <ol> <li> <p>\u5efa\u8bae\u9ed8\u8ba4\u5f00\u542fextension</p> </li> <li> <p>pg_repack</p> </li> <li>pg_stat_statements</li> <li>auto_explain</li> </ol>"},{"location":"postgres/install01/#_1","title":"\u8fdb\u4e00\u6b65\u4f18\u5316","text":""},{"location":"postgres/install01/#linux","title":"\u7cfb\u7edfLinux \u5185\u6838\u53c2\u6570","text":"<p>vi /etc/sysctl.conf </p> <pre><code>kernel.shmall = 4294967296  \nkernel.shmmax=135497418752  \nkernel.shmmni = 4096  \nkernel.sem = 50100 64128000 50100 1280  \nfs.file-max = 7672460  \nfs.aio-max-nr = 1048576  \nnet.ipv4.ip_local_port_range = 9000 65000  \nnet.core.rmem_default = 262144  \nnet.core.rmem_max = 4194304  \nnet.core.wmem_default = 262144  \nnet.core.wmem_max = 4194304  \nnet.ipv4.tcp_max_syn_backlog = 4096  \nnet.core.netdev_max_backlog = 10000  \n#net.ipv4.netfilter.ip_conntrack_max = 655360  \nnet.ipv4.tcp_timestamps = 0  \nnet.ipv4.tcp_tw_recycle=1  \nnet.ipv4.tcp_timestamps=1  \nnet.ipv4.tcp_keepalive_time = 72   \nnet.ipv4.tcp_keepalive_probes = 9   \nnet.ipv4.tcp_keepalive_intvl = 7  \nvm.zone_reclaim_mode=0  \nvm.dirty_background_bytes = 40960000  \nvm.dirty_ratio = 80  \nvm.dirty_expire_centisecs = 6000  \nvm.dirty_writeback_centisecs = 50  \nvm.swappiness=0  \nvm.overcommit_memory = 0  \nvm.overcommit_ratio = 90  \n</code></pre> <p>sysctl -p \u751f\u6548</p>"},{"location":"postgres/install01/#linux_1","title":"\u7cfb\u7edfLinux \u6700\u5927\u53e5\u67c4\u6570","text":"<p>vi /etc/security/limits.conf   </p> <pre><code>* soft    nofile  131072  \n* hard    nofile  131072  \n* soft    nproc   131072  \n* hard    nproc   131072  \n* soft    core    unlimited  \n* hard    core    unlimited  \n* soft    memlock 500000000  \n* hard    memlock 500000000 \n\n</code></pre>"},{"location":"postgres/install01/#ntp","title":"ntp","text":"<pre><code>yum install ntp -y\n\nsystemctl start ntpd\nsystemctl enable ntpd\n</code></pre> <p>reboot \u751f\u6548</p>"},{"location":"postgres/install01/#_2","title":"\u6570\u636e\u5e93\u53c2\u6570","text":"<p>\u53c2\u89c1</p>"},{"location":"postgres/install01/#_3","title":"\u5e38\u89c1\u95ee\u9898","text":"<pre><code>Package: postgresql12-devel-12.3-1PGDG.rhel7.x86_64 (pgdg12)\n           Requires: llvm-toolset-7-clang &gt;= 4.0.1\ninstall CentOS SCLo RH repository and install llvm-toolset-7-clang to resolve it.\nyum install centos-release-scl-rh\nyum install llvm-toolset-7-clang\n</code></pre>"},{"location":"postgres/install02/","title":"\u6570\u636e\u5e93\u5b89\u88c5 Postgres12 Ubuntu18","text":"<p>\u8f6f\u4ef6\u6e90</p> <pre><code>echo \"deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main\" &gt;&gt; /etc/apt/sources.list.d/pgdg.list\n</code></pre> <pre><code>wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n</code></pre> <pre><code>sudo apt-get update -y\n\n</code></pre> <p>\u5b89\u88c5 </p> <pre><code>apt-get install postgresql-12 postgresql-client-12 postgresql-12-postgis-2.5 postgresql-contrib -y\n\n</code></pre> <p>\u521d\u59cb\u5316</p> <pre><code>/usr/pgsql-12/bin/postgresql-12-setup initdb\n</code></pre> <p>\u542f\u52a8</p> <pre><code>systemctl start postgresql\nsystemctl stop postgresql\nsystemctl status postgresql\nsystemctl enable postgresql\n</code></pre> <p>\u914d\u7f6e</p> <pre><code>cd /etc/postgresql/12/main/\n\nvi postgres.conf\n\nvi pg_hba.conf\n\n</code></pre>"},{"location":"postgres/libpg/","title":"\u5ba2\u6237\u7aef\u6545\u969c\u8f6c\u79fb","text":"","tags":[]},{"location":"postgres/libpg/#_1","title":"\u591a\u4e3b\u673a\u8fde\u63a5","text":"<p>PostgreSQL libpq \u662f\u6570\u636e\u5e93\u7684\u4e00\u4e2a\u8fde\u63a5\u9a71\u52a8\uff0c\u652f\u6301\u591a\u4e3b\u673a\u914d\u7f6e\uff0c\u540c\u65f6\u652f\u6301target_session_attrs \u4e3b\u673a\u89d2\u8272\u5224\u65ad\u914d\u7f6e\u3002</p> <p>\u5f53\u914d\u7f6e\u4e86\u591a\u4e2a\u4e3b\u673a\u65f6\uff0c\u4f1a\u6309\u987a\u5e8f\u5c1d\u8bd5\u8fde\u63a5\uff0c\u4e4b\u9053\u83b7\u53d6\u5230\u6210\u529f\u7684\u8fde\u63a5\u4e3a\u6b62\u3002</p> <p>\u5229\u7528libpq\u7684\u8fd9\u4e2a\u7279\u6027\uff0c\u7ed3\u5408\u6570\u636e\u5e93\u81ea\u52a8HA\u7684\u4e00\u4e9b\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5728\u4e0d\u5f15\u5165VIP\u4ee5\u53ca\u4e2d\u95f4\u8def\u7531\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u6570\u636e\u5e93\u5e94\u7528\u7cfb\u7edf\u5c42\u7ea7\u7684\u9ad8\u53ef\u7528\u3002</p>","tags":[]},{"location":"postgres/libpg/#_2","title":"\u8fde\u63a5\u6210\u529f\u5224\u65ad","text":"<ul> <li>\u6210\u529f\u5efa\u7acb\u8fde\u63a5</li> <li>target_session_attrs\u914d\u7f6e</li> </ul> <pre><code> read-write \u542b\u4e49\u3002 \u8fde\u63a5\u5230\u7684\u8282\u70b9\u4e3a\u53ef\u8bfb\u5199\u3002\u5982\u679c\u8fde\u63a5\u7684\u662f\u4ece\u8282\u70b9\uff0c\u53ea\u5177\u5907\u53ef\u8bfb\u6027\u5219\u4e0d\u80fd\u8fde\u63a5\u6210\u529f\u3002\n\n \u6839\u636eshow transaction_read_only ; \u5224\u65ad\u8282\u70b9\u7684\u53ef\u8bfb\u5199\u6027\n</code></pre>","tags":[]},{"location":"postgres/libpg/#_3","title":"\u5177\u4f53\u793a\u4f8b","text":"<p>psql</p> <pre><code>psql 'postgres://192.168.6.15:65432,192.168.6.16:65432/postgres?target_session_attrs=read-write'\n\n</code></pre> <p>python</p> <pre><code>import psycopg2\nconn = psycopg2.connect(database=\"postgres\",host=\"192.168.6.15,192.168.6.16\", user=\"postgres\", password=\"sqlite123\", port=\"5432\", target_session_attrs=\"read-write\")\ncur = conn.cursor()\ncur.execute(\"select pg_is_in_recovery(),now(),inet_server_addr()\")\nrow = cur.fetchone()\n</code></pre>","tags":[]},{"location":"postgres/lock_wait/","title":"\u9501\u7b49\u5f85","text":""},{"location":"postgres/lock_wait/#_1","title":"\u9501\u7b49\u5f85\u573a\u666f","text":"<p>\u4e00\u4e2a\u4e8b\u52a1\u5c1a\u672a\u6267\u884c\u63d0\u4ea4\u65f6\u6301\u6709\u9501\uff0c\u5f53\u53e6\u4e00\u4e2a\u4e8b\u52a1\u9700\u8981\u6301\u6709\u6539\u884c\u7684\u9501\u65f6\u5219\u9700\u8981\u7b49\u5f85\u3002</p> <p>Session 1</p> <pre><code>postgres=# \\d+ wt\n                                     Table \"public.wt\"\n Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description \n--------+---------+-----------+----------+---------+----------+--------------+-------------\n id     | integer |           |          |         | plain    |              | \n t      | text    |           |          |         | extended |              | \n\npostgres=# begin;\nBEGIN\npostgres=# update wt set t = 'aaaa' where id = 1;\nUPDATE 1\npostgres=# select pg_backend_pid();\n pg_backend_pid \n----------------\n          20034\n(1 row)\n</code></pre> <p>Session 2 </p> <pre><code>postgres=# begin ;\nBEGIN\npostgres=# update wt set t = 'bbbb' where id = 1;\n</code></pre> <p>Session 3</p> <pre><code>select * from pg_stat_activity;\n\n-[ RECORD 3 ]----+----------------------------------------\ndatid            | 436980\ndatname          | postgres\npid              | 20476\nusesysid         | 10\nusename          | postgres\napplication_name | psql\nclient_addr      | \nclient_hostname  | \nclient_port      | -1\nbackend_start    | 2020-03-27 16:40:50.706409+08\nxact_start       | 2020-03-27 16:40:55.515366+08\nquery_start      | 2020-03-27 16:41:09.139546+08\nstate_change     | 2020-03-27 16:41:09.13955+08\nwait_event_type  | Lock\nwait_event       | transactionid\nstate            | active\nbackend_xid      | 22112130\nbackend_xmin     | 22112129\nquery            | update wt set t = 'bbbb' where id = 1;\nbackend_type     | client backend\n-[ RECORD 4 ]----+----------------------------------------\ndatid            | 436980\ndatname          | postgres\npid              | 20034\nusesysid         | 10\nusename          | postgres\napplication_name | psql\nclient_addr      | 192.168.6.78\nclient_hostname  | \nclient_port      | 56464\nbackend_start    | 2020-03-27 16:33:27.223241+08\nxact_start       | 2020-03-27 16:39:46.160577+08\nquery_start      | 2020-03-27 16:40:41.602471+08\nstate_change     | 2020-03-27 16:40:41.603281+08\nwait_event_type  | Client\nwait_event       | ClientRead\nstate            | idle in transaction\nbackend_xid      | 22112129\nbackend_xmin     | \nquery            | update wt set t = 'aaaa' where id = 1;\nbackend_type     | client backend\n\n</code></pre> <p>\u7b2c\u4e8c\u4e2aSession\u4e2d\u7684\u4e8b\u52a1\u5728\u7b49\u5f85\u7740\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u7684\u63d0\u4ea4\u3002</p> <p>\u672a\u63d0\u4ea4\u4e8b\u52a1\u7279\u70b9 wait_event = idle in transaction</p> <p>\u7b49\u5f85\u4e8b\u52a1\u7279\u70b9 wait_event_type = Lock ,wait_event = transactionid ,state=active</p>"},{"location":"postgres/lock_wait/#_2","title":"\u67e5\u770b\u6570\u636e\u5e93\u4e2d\u7684\u9501\u7b49\u5f85","text":"<pre><code>with      \nt_wait as      \n(      \n  select a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,     \n  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,      \n  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name     \n    from pg_locks a,pg_stat_activity b where a.pid=b.pid and not a.granted     \n),     \nt_run as     \n(     \n  select a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,     \n  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,     \n  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name     \n    from pg_locks a,pg_stat_activity b where a.pid=b.pid and a.granted     \n),     \nt_overlap as     \n(     \n  select r.* from t_wait w join t_run r on     \n  (     \n    r.locktype is not distinct from w.locktype and     \n    r.database is not distinct from w.database and     \n    r.relation is not distinct from w.relation and     \n    r.page is not distinct from w.page and     \n    r.tuple is not distinct from w.tuple and     \n    r.virtualxid is not distinct from w.virtualxid and     \n    r.transactionid is not distinct from w.transactionid and     \n    r.classid is not distinct from w.classid and     \n    r.objid is not distinct from w.objid and     \n    r.objsubid is not distinct from w.objsubid and     \n    r.pid &lt;&gt; w.pid     \n  )      \n),      \nt_unionall as      \n(      \n  select r.* from t_overlap r      \n  union all      \n  select w.* from t_wait w      \n)      \nselect locktype,datname,relation::regclass,page,tuple,virtualxid,transactionid::text,classid::regclass,objid,objsubid,     \nstring_agg(     \n'Pid: '||case when pid is null then 'NULL' else pid::text end||chr(10)||     \n'Lock_Granted: '||case when granted is null then 'NULL' else granted::text end||' , Mode: '||case when mode is null then 'NULL' else mode::text end||' , FastPath: '||case when fastpath is null then 'NULL' else fastpath::text end||' , VirtualTransaction: '||case when virtualtransaction is null then 'NULL' else virtualtransaction::text end||' , Session_State: '||case when state is null then 'NULL' else state::text end||chr(10)||     \n'Username: '||case when usename is null then 'NULL' else usename::text end||' , Database: '||case when datname is null then 'NULL' else datname::text end||' , Client_Addr: '||case when client_addr is null then 'NULL' else client_addr::text end||' , Client_Port: '||case when client_port is null then 'NULL' else client_port::text end||' , Application_Name: '||case when application_name is null then 'NULL' else application_name::text end||chr(10)||      \n'Xact_Start: '||case when xact_start is null then 'NULL' else xact_start::text end||' , Query_Start: '||case when query_start is null then 'NULL' else query_start::text end||' , Xact_Elapse: '||case when (now()-xact_start) is null then 'NULL' else (now()-xact_start)::text end||' , Query_Elapse: '||case when (now()-query_start) is null then 'NULL' else (now()-query_start)::text end||chr(10)||      \n'SQL (Current SQL in Transaction): '||chr(10)||    \ncase when query is null then 'NULL' else query::text end,      \nchr(10)||'--------'||chr(10)      \norder by      \n  (  case mode      \n    when 'INVALID' then 0     \n    when 'AccessShareLock' then 1     \n    when 'RowShareLock' then 2     \n    when 'RowExclusiveLock' then 3     \n    when 'ShareUpdateExclusiveLock' then 4     \n    when 'ShareLock' then 5     \n    when 'ShareRowExclusiveLock' then 6     \n    when 'ExclusiveLock' then 7     \n    when 'AccessExclusiveLock' then 8     \n    else 0     \n  end  ) desc,     \n  (case when granted then 0 else 1 end)    \n) as lock_conflict    \nfrom t_unionall     \ngroup by     \nlocktype,datname,relation,page,tuple,virtualxid,transactionid::text,classid,objid,objsubid ;\n</code></pre>"},{"location":"postgres/lock_wait/#_3","title":"\u6d88\u9664\u9501\u7b49\u5f85","text":"<pre><code>select pg_cancel_backend(pid);\n\n\nselect pg_terminate_backend(pid);\n</code></pre>"},{"location":"postgres/lock_wait/#_4","title":"\u76d1\u63a7\u65b9\u6848","text":"<p>\u957f\u4e8b\u52a1\u76d1\u63a7</p> <pre><code>select extract(epoch from max(age(now(), query_start))) from pg_stat_activity where state &lt;&gt; 'idle' and (backend_xid is not null or backend_xmin is not null);\n</code></pre> <p>\u957f\u4e8b\u52a1\u67e5\u770b</p> <pre><code>select * from pg_stat_activity  pg_stat_activity where state &lt;&gt; 'idle' and (backend_xid is not null or backend_xmin is not null) order by query_start asc limit 1;\n\nselect * from pg_stat_activity  pg_stat_activity where state &lt;&gt; 'idle' and (backend_xid is not null or backend_xmin is not null) and backend_type = 'client backend' order by query_start asc limit 1;\n</code></pre> <p>2pc</p> <pre><code>select * from pg_prepared_statements;\n</code></pre>"},{"location":"postgres/lock_wait/#_5","title":"\u65e5\u5fd7\u8bb0\u5f55","text":"<p>\u5f53\u5835\u585e\u65f6\u95f4\u5927\u4e8edeadlock (1s) \u65f6</p> <p>\u5168\u5c40</p> <pre><code> set log_lock_waits TO ON;\n</code></pre> <p>\u6307\u5b9a\u6570\u636e\u5e93</p> <pre><code> alter database dbname set log_lock_waits TO ON;\n</code></pre> <p>\u65e5\u5fd7\u5185\u5bb9\u5982\u4e0b</p> <pre><code>2020-03-31 09:16:32.704 CST,\"postgres\",\"postgres\",25436,\"[local]\",5e8299b7.635c,5,\"UPDATE waiting\",2020-03-31 09:15:35 CST,4/52140,22112144,LOG,00000,\"process 25436 still waiting for ShareLock on transaction 22112143 after 1000.162 ms\",\"Process holding the lock: 24758. Wait queue: 25436.\",,,,\"while updating tuple (0,39) in relation \"\"wt\"\"\",\"update wt set t = 'bbbb' where id = 1;\",,,\"psql\"\n2020-03-31 09:18:25.946 CST,\"postgres\",\"postgres\",25436,\"[local]\",5e8299b7.635c,6,\"UPDATE waiting\",2020-03-31 09:15:35 CST,4/52140,22112144,LOG,00000,\"process 25436 acquired ShareLock on transaction 22112143 after 114242.016 ms\",,,,,\"while updating tuple (0,39) in relation \"\"wt\"\"\",\"update wt set t = 'bbbb' where id = 1;\",,,\"psql\"\n2020-03-31 09:18:25.946 CST,\"postgres\",\"postgres\",25436,\"[local]\",5e8299b7.635c,7,\"UPDATE\",2020-03-31 09:15:35 CST,4/52140,22112144,LOG,00000,\"duration: 114244.352 ms\",,,,,,,,,\"psql\"\nplate_number\n</code></pre> <p>25436 \u88ab 24758 \u5835\u585e</p>"},{"location":"postgres/lock_wait/#_6","title":"\u67e5\u770b\u8c01\u5835\u585e\u4e86\u8c01","text":"<pre><code>pg_blocking_pids(pid)\n</code></pre>"},{"location":"postgres/log/","title":"\u6570\u636e\u5e93\u65e5\u5fd7","text":""},{"location":"postgres/log/#_1","title":"\u4ecb\u7ecd","text":"<p>PostgreSQL\u67093\u79cd\u65e5\u5fd7\uff0c\u5206\u522b\u662fpg_log\uff08\u6570\u636e\u5e93\u8fd0\u884c\u65e5\u5fd7\uff09\u3001pg_xlog\uff08WAL \u65e5\u5fd7\uff0c\u5373\u91cd\u505a\u65e5\u5fd7\uff09\u3001pg_clog\uff08\u4e8b\u52a1\u63d0\u4ea4\u65e5\u5fd7\uff0c\u8bb0\u5f55\u7684\u662f\u4e8b\u52a1\u7684\u5143\u6570\u636e\uff09 postgres 10 \u7248\u672c\u5c06\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u6539\u4e3a log\uff0cpg_wal\uff0cpg_xact log\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff0c\u9700\u8981\u8bbe\u7f6e\u5176\u53c2\u6570\u3002wal\u548cxact\u90fd\u662f\u5f3a\u5236\u6253\u5f00\u7684\uff0c\u65e0\u6cd5\u5173\u95ed\u3002 \u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u3000log \u80fd</p>"},{"location":"postgres/log/#_2","title":"\u914d\u7f6e","text":"<p>\u8bed\u6cd5:   \u4fee\u6539\u3000ALTER SYSTEM SET \u53c2\u6570=\u503c;   \u67e5\u770b\u3000show \u53c2\u6570; \u91cd\u65b0\u542f\u52a8\u6570\u636e\u5e93\u751f\u6548;  </p> <p>\u542f\u7528pg_log\u5e76\u914d\u7f6e\u65e5\u5fd7\u53c2\u6570</p> <pre><code>ALTER SYSTEM SET\n log_destination = 'csvlog';\nALTER SYSTEM SET\n logging_collector = on;\nALTER SYSTEM SET\n log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log';\nALTER SYSTEM SET\n log_rotation_age = '1d';\nALTER SYSTEM SET\n log_rotation_size = '100MB';\nALTER SYSTEM SET\n log_min_messages = 'info';\n</code></pre> <p>\u8bb0\u5f55\u65e5\u5fd7\u4fe1\u606f</p> <pre><code>ALTER SYSTEM SET\n log_checkpoints = on;\nALTER SYSTEM SET\n log_connections = on;\nALTER SYSTEM SET\n log_disconnections = on;\nALTER SYSTEM SET\n log_duration = on;\nALTER SYSTEM SET\n log_line_prefix = '%m';\n</code></pre>"},{"location":"postgres/log/#sql","title":"\u8bb0\u5f55\u6267\u884c\u6162\u7684SQL","text":"<p>\u8bb0\u5f55\u8d85\u8fc7\u8be5\u65f6\u957f\u7684\u6240\u6709SQL\uff0c\u5bf9\u627e\u51fa\u5f53\u524d\u6570\u636e\u5e93\u7684\u6162\u67e5\u8be2\u5f88\u6709\u6548\u3002\u65f6\u95f4\u5355\u4f4dms</p> <p>\u5168\u5c40\u7ea7</p> <pre><code>ALTER SYSTEM SET\n log_min_duration_statement = 60;\n</code></pre> <p>\u6570\u636e\u5e93\u7ea7</p> <pre><code>ALTER DATABASE test SET log_min_duration_statement TO 60;\n</code></pre> <p>\u6d4b\u8bd5</p> <pre><code>postgres=# select now(), pg_sleep(66);\n</code></pre>"},{"location":"postgres/log/#_3","title":"\u76d1\u63a7\u6570\u636e\u5e93\u4e2d\u957f\u65f6\u95f4\u7684\u9501","text":"<p>\u6570\u636e\u5e93\u7684\u9501\u901a\u5e38\u53ef\u4ee5\u5728pg_locks\u8fd9\u4e2a\u7cfb\u7edf\u8868\u91cc\u627e\uff0c\u4f46\u8fd9\u53ea\u662f\u5f53\u524d\u7684\u9501\u8868/\u884c\u4fe1\u606f\uff0c\u5982\u679c\u4f60\u60f3\u770b\u4e00\u5929\u5185\u6709\u591a\u5c11\u4e2a\u8d85\u8fc7\u6b7b\u9501\u65f6\u95f4\u7684\u9501\u53d1\u751f\uff0c\u53ef\u4ee5\u5728\u65e5\u5fd7\u91cc\u8bbe\u7f6e\u5e76\u67e5\u770b\uff0clog_lock_waits \u9ed8\u8ba4\u662foff\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u5f00\u542f\u3002\u8fd9\u4e2a\u53ef\u4ee5\u533a\u5206SQL\u6162\u662f\u8d44\u6e90\u7d27\u5f20\u8fd8\u662f\u9501\u7b49\u5f85\u7684\u95ee\u9898\u3002</p> <pre><code>ALTER SYSTEM SET\n log_lock_waits = on;\n</code></pre> <p>\u6d4b\u8bd5</p> <pre><code>postgres=# show log_lock_waits ;\n log_lock_waits \n----------------\n on\n(1 row)\n\npostgres=# show deadlock_timeout ;\n deadlock_timeout \n------------------\n 1s\n(1 row)\n\n--\u6a21\u62df\u9501\npostgres=# begin;\nBEGIN\npostgres=# SELECT * FROM t_ken_yon ;\n id \n----\n 11\n(1 row)\n\npostgres=# delete from t_ken_yon ;\nDELETE 1\n\n--\u53e6\u4e00\u4e2asession\npostgres=# begin;\nBEGIN\npostgres=# delete from t_ken_yon;\n\n</code></pre>"},{"location":"postgres/log/#_4","title":"\u5ba1\u8ba1","text":"<p>postgres\u65e5\u5fd7\u91cc\u5206\u6210\u4e863\u7c7b\uff0c\u901a\u8fc7\u53c2\u6570pg_statement\u6765\u63a7\u5236\uff0c</p> <ul> <li>\u9ed8\u8ba4\u7684pg_statement\u53c2\u6570\u503c\u662fnone\uff0c\u5373\u4e0d\u8bb0\u5f55  </li> <li>\u53ef\u4ee5\u8bbe\u7f6eddl(\u8bb0\u5f55create,drop\u548calter)  </li> <li>mod(\u8bb0\u5f55ddl+insert,delete,update\u548ctruncate)\u548call(mod+select)</li> </ul> <pre><code>ALTER SYSTEM SET\n log_statement = 'ddl';\n</code></pre>"},{"location":"postgres/log/#_5","title":"\u5c06\u65e5\u5fd7\u5bfc\u5165\u5230\u6570\u636e\u5e93\u8868\u4e2d\u5e76\u8fdb\u884c\u67e5\u8be2\u5206\u6790","text":"<p>\u521b\u5efa\u6570\u636e\u5e93\u8868</p> <pre><code>CREATE TABLE postgres_log\n(\n  log_time timestamp(3) with time zone,\n  user_name text,\n  database_name text,\n  process_id integer,\n  connection_from text,\n  session_id text,\n  session_line_num bigint,\n  command_tag text,\n  session_start_time timestamp with time zone,\n  virtual_transaction_id text,\n  transaction_id bigint,\n  error_severity text,\n  sql_state_code text,\n  message text,\n  detail text,\n  hint text,\n  internal_query text,\n  internal_query_pos integer,\n  context text,\n  query text,\n  query_pos integer,\n  location text,\n  application_name text,\n  PRIMARY KEY (session_id, session_line_num)\n);\n</code></pre> <p>\u5c06\u65e5\u5fd7\u6587\u4ef6\u5bfc\u5165\u6570\u636e\u5e93\u8868\u4e2d</p> <pre><code>COPY postgres_log FROM 'log/postgresql-2018-12-05_103141.csv' WITH csv;\n</code></pre> <p>\u67e5\u8be2\u5206\u6790</p> <p>\u81ea\u7531\u53d1\u6325</p> <p>\u65e5\u5fd7\u5206\u6790\u62a5\u8868 PGBADGER</p> <p>\u62d3\u5c55 pgaudit</p> <p>\u53c2\u8003\u5b66\u4e60</p>"},{"location":"postgres/logical-backup/","title":"\u903b\u8f91\u5907\u4efd","text":""},{"location":"postgres/logical-backup/#_1","title":"\u5907\u4efd\u6062\u590d\u547d\u4ee4","text":"<pre><code>\u5907\u4efd\uff1apg_dump -U postgres -v -F c -Z 4 -f ***.backup dbname  9\u538b\u7f29\u7387\u6700\u72e0\n\u6062\u590d\uff1apg_restore -U postgres -v -j 8 -d dbname ***.backup   8\u662f\u91c7\u75288\u4e2a\u7ebf\u7a0b\n\n\u6ce8\u610f\u4e8b\u9879\uff1a \u5728\u6062\u590ddatabase\u524d\u9700\u8981\u5148\u521b\u5efa\u597dextentions\n\n\u5907\u4efd\u8868\uff1apg_dump -U postgres -t tablename dbname &gt; 33.sql\n\u6062\u590d\u8868\uff1apsql -U postgres -d dbname &lt; 33.sql\n\n\u53ea\u5907\u4efd\u8868\u7ed3\u6784 pg_dump -U postgres -s -t tablename dbname &gt; 33.sql\n\u53ea\u5907\u4efd\u6570\u636e pg_dump -U postgres -a -t tablename dbname &gt; 33.sql\n</code></pre> <pre><code>\u5168\u5e93\u5907\u4efd: pg_dumpall\n\n\u53ea\u5907\u4efd\u7528\u6237(\u89d2\u8272)\u4fe1\u606f: pg_dumpall -g &gt; roles.sql\n</code></pre>"},{"location":"postgres/logical-backup/#minio","title":"\u5907\u4efd\u538b\u7f29\u5e76\u5b58\u50a8\u5230minio","text":"<pre><code>  #!/bin/bash\n\n  # PostgreSQL \u8bbe\u7f6e\n  # POSTGRES_USER=\"postgres\"\n  # POSTGRES_HOST=\"127.0.0.1\"\n\n  # MinIO \u8bbe\u7f6e\n  # MINIO_BUCKET=\"pgbackup\"\n  # MINIO_HOST=\"http://localhost:9000\"\n  # MINIO_ACCESS_KEY=\"admin123\"\n  # MINIO_SECRET_KEY=\"admin123\"\n\n  # \u8bbe\u7f6e MinIO \u5ba2\u6237\u7aef\u522b\u540d\n  mc alias set myminio $MINIO_HOST $MINIO_ACCESS_KEY $MINIO_SECRET_KEY\n\n  # \u521b\u5efa\u4ee5\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u547d\u540d\u7684\u5907\u4efd\u76ee\u5f55\n  BACKUP_DIR=\"$(date +%Y%m%d%H%M)\"\n  MINIO_PATH=\"myminio/$MINIO_BUCKET/$BACKUP_DIR\"\n\n  # \u5907\u4efd\u5168\u5c40\u5bf9\u8c61\n  echo \"Backing up global objects to $MINIO_PATH/roles_globals.sql.gz\"\n  pg_dumpall -g -U \"$POSTGRES_USER\" -h \"$POSTGRES_HOST\" | pigz | mc pipe \"$MINIO_PATH/roles_globals.sql.gz\"\n\n  # \u83b7\u53d6\u6240\u6709\u975e\u6a21\u677f\u6570\u636e\u5e93\u7684\u5217\u8868\n  DATABASES=$(psql -U \"$POSTGRES_USER\" -h \"$POSTGRES_HOST\" -t -c \"SELECT datname FROM pg_database WHERE datistemplate = false;\")\n\n  # \u4e3a\u6bcf\u4e2a\u6570\u636e\u5e93\u6267\u884c\u5907\u4efd\n  for DB in $DATABASES; do\n    echo \"Backing up $DB to $MINIO_PATH/$DB.sql.gz\"\n    pg_dump -U \"$POSTGRES_USER\" -h \"$POSTGRES_HOST\" \"$DB\" | pigz | mc pipe \"$MINIO_PATH/$DB.sql.gz\"\n  done\n\n  echo \"Backup process completed!\"\n</code></pre>"},{"location":"postgres/logical-backup/#copy","title":"copy \u62f7\u8d1d\u6570\u636e","text":"<pre><code>\u6570\u636e\u62f7\u8d1d\u5230\u672c\u5730\uff1a psql -U postgres -d databasename  -p 5432 -h 10.1.1.1 -c \"\\copy (select * from $tablename where xxx) to '/tmp/db/$tablename.csv'\";\n\n\u6570\u636e\u6062\u590d\u5230\u6570\u636e\u5e93: psql -U postgres -d databasename -p 5432 -h 127.0.0.1 -c \"\\copy $tablename from '/tmp/db/$tablename.csv'\"; \n</code></pre> <p>\u8bf4\u660e\uff1a copy \u4e0e \\copy \u533a\u522b\uff0c \\copy cvs\u6570\u636e\u5728client\u7aef\u3001copy svs\u6570\u636e\u5728server\u7aef\u3002</p>"},{"location":"postgres/logical-backup/#_2","title":"\u6ce8\u610f\u4e8b\u9879: \u9700\u8981\u5728\u65b0\u6570\u636e\u5e93\u4e2d\u5bf9\u5e8f\u5217\u8fdb\u884c\u66f4\u65b0","text":"<pre><code>psql -U postgres -d databasename -p 5432 -h 127.0.0.1 -c \"select setval('xxxx_id_seq', max(id)) from xxx_table\";\n\n</code></pre> <p>copy from \u6570\u636e\u91cf\u5927\u65f6\u6548\u7387\u592a\u4f4e\u66ff\u4ee3\u65b9\u6cd5</p> <pre><code>/usr/pgsql-10/bin/pg_bulkload -U postgres -d dataname -i /xxx/xxx.csv -O tablename -l /tmp/xxx.log -P /tmp/xxx.bad -o \"TYPE=CSV\" -o $'DELIMITER=\\t'\n</code></pre> <p>\u8bf4\u660e\uff1a pg_bulkload \u4e3a\u62d3\u5c55\u5f62\u5f0f\u3002 \u9700\u8981\u5728\u6570\u636e\u5e93\u4e2d'create extends pg_bulkload' \u3002 </p>"},{"location":"postgres/logical-backup/#pg_bulkload-copy","title":"pg_bulkload \u4e0ecopy \u533a\u522b","text":"<p>copy\u5c06\u6784\u9020\u51fa\u7684\u5143\u7ec4\u63d2\u5165\u5171\u4eab\u5185\u5b58\uff0c\u540c\u65f6\u5199\u65e5\u5fd7\uff0cpg_bulkload\u7ed5\u8fc7\u4e86\u5171\u4eab\u5185\u5b58\uff0c\u4e0d\u5199\u65e5\u5fd7\uff0c\u8fd9\u6837\u4f1a\u51cf\u5c11\u78c1\u76d8I/O\uff0c\u4f46\u662f\u4e5f\u5f88\u5371\u9669\u3002</p>"},{"location":"postgres/logical-backup/#pg_bulkload-wal","title":"\u4f7f\u7528pg_bulkload\u65b9\u5f0f\u5bfc\u5165\u6570\u636e\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u6ce8\u610f\uff0c\u6ce8\u610f\uff01\uff01\uff01\u3000\u7531\u4e8e\u4e0d\u5199wal\u65e5\u5fd7\u4ece\u5e93\u65e0\u6cd5\u540c\u6b65\uff0c\u4ece\u5e93\u76f4\u63a5\u5b95\u6389\uff0c\u76f4\u63a5\u5b95\u6389\uff01\uff01\uff01 \u6d4b\u8bd5\u7528\u5c31\u597d,\u751f\u4ea7\u73af\u5883\u9700\u8c28\u614e","text":""},{"location":"postgres/logical-backup/#_3","title":"\u5b9e\u65f6\u5907\u4efd\u6062\u590d","text":"<p>https://github.com/ossc-db/pg_rman</p> <p>https://github.com/wal-e/wal-e</p> <p>https://github.com/wal-g/wal-g</p>"},{"location":"postgres/logical-backup/#_4","title":"\u5b9a\u671f\u5907\u4efd","text":"<p>https://github.com/postgrespro/pg_probackup</p>"},{"location":"postgres/logical-backup/#_5","title":"\u5907\u4efd\u6062\u590d\u7ba1\u7406","text":"<p>https://github.com/pgbackrest/pgbackrest</p> <p>\u7531\u4e8e\u539f\u59cb\u5e93\u4e2d\u5b58\u5728extension \u9700\u8981\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650\u8fdb\u884c\u6062\u590d\uff0c\u6062\u590d\u540e\u5c06\u6240\u6709\u8005\u53d8\u66f4\u4e3a\u666e\u901a\u7528\u6237\u3002 pg\u4e2d\u6ca1\u6709\u65b9\u6cd5\u53ef\u4ee5\u5c06\u6574\u4e2adatabase \u4e2dtable \u7684 owner \u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u8fdb\u884c\u6279\u91cf\u4fee\u6539</p> <p>\u6279\u91cf\u4fee\u6539\u8868\u548c\u89c6\u56fe\u7684\u6240\u6709\u8005</p> <pre><code>DO $$DECLARE r record;\nBEGIN\nFOR r IN SELECT tablename/viewname FROM pg_tables/pg_views WHERE schemaname = 'public'\nLOOP\n    EXECUTE 'alter table '|| r.tablename/r.viewname ||' owner to new_owner;';\nEND LOOP;\nEND$$;\n</code></pre>"},{"location":"postgres/logical-replication/","title":"\u903b\u8f91\u590d\u5236","text":"","tags":[]},{"location":"postgres/logical-replication/#_1","title":"\u903b\u8f91\u590d\u5236","text":"<p>Postgres 10 \u7248\u672c\u5f00\u59cb\uff0c \u5728\u5185\u6838\u5c42\u9762\u652f\u6301\u57fa\u4e8eREDO\u6d41\u7684\u903b\u8f91\u590d\u5236\u3002</p> <p>\u63a7\u5236\u7c92\u5ea6\u4e3a\u8868\u7ea7\u522b</p> <p>\u7269\u7406\u590d\u5236\u76f8\u540c\u90fd\u662f\u57fa\u4e8ewal </p> <p>\u53ef\u6307\u5b9a\u591a\u4e2a\u4e0a\u6e38\u6570\u636e\u6e90</p> <p>\u4e0b\u6e38\u6570\u636e\u53ef\u8bfb\u53ef\u5199</p> <p>\u53ef\u7528\u4e8e\u6570\u636e\u6c47\u603b\uff0c\u65e0\u505c\u670d\u6570\u636e\u8fc1\u79fb,\u5927\u7248\u672c\u5347\u7ea7\u7b49\u3002</p>","tags":[]},{"location":"postgres/logical-replication/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u53d1\u5e03\u8005\uff08publication\uff09\uff0c \u4e0a\u6e38\u6570\u636e</li> <li>\u8ba2\u9605\u8005 (subscrition)\uff0c \u4e0b\u6e38\u6570\u636e</li> <li>\u590d\u5236\u69fd (slot), \u4fdd\u5b58\u903b\u8f91\u590d\u5236\u7684\u4fe1\u606f</li> </ul>","tags":[]},{"location":"postgres/logical-replication/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u6570\u636e\u5e93\u6a21\u5f0f\u548cDDL\u547d\u4ee4\u4e0d\u4f1a\u88ab\u590d\u5236</li> <li>\u5e8f\u5217\u6570\u636e\u4e0d\u88ab\u590d\u5236</li> <li>\u5206\u533a\u8868,\u9700\u8981\u53d1\u5e03\u5b50\u8868 </li> </ul>","tags":[]},{"location":"postgres/logical-replication/#_4","title":"\u5e38\u7528\u65b9\u5f0f\u603b\u7ed3","text":"","tags":[]},{"location":"postgres/logical-replication/#_5","title":"\u53d1\u5e03\u7aef","text":"<ul> <li>\u903b\u8f91\u590d\u5236\u7684\u524d\u63d0\u662f\u5c06\u6570\u636e\u5e93 wal_level \u53c2\u6570\u8bbe\u7f6e\u6210 logical\uff1b</li> <li>\u6e90\u5e93\u4e0a\u903b\u8f91\u590d\u5236\u7684\u7528\u6237\u5fc5\u987b\u5177\u6709 replicatoin \u6216 superuser \u89d2\u8272\uff1b</li> <li>\u903b\u8f91\u590d\u5236\u76ee\u524d\u4ec5\u652f\u6301\u6570\u636e\u5e93\u8868\u903b\u8f91\u590d\u5236\uff0c\u5176\u5b83\u5bf9\u8c61\u4f8b\u5982\u51fd\u6570\u3001\u89c6\u56fe\u4e0d\u652f\u6301\uff1b</li> <li>\u903b\u8f91\u590d\u5236\u652f\u6301DML(UPDATE\u3001INSERT\u3001DELETE)\u64cd\u4f5c\uff0cTRUNCATE \u548c DDL \u64cd\u4f5c\u4e0d\u652f\u6301\uff1b</li> <li>\u9700\u8981\u53d1\u5e03\u903b\u8f91\u590d\u5236\u7684\u8868\uff0c\u987b\u914d\u7f6e\u8868\u7684 REPLICA IDENTITY \u7279\u6027\uff1b</li> <li>\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2apublication\uff0c\u901a\u8fc7 pg_publication \u67e5\u770b\uff1b</li> <li>\u5141\u8bb8\u4e00\u6b21\u53d1\u5e03\u6240\u6709\u8868\uff0c\u8bed\u6cd5\uff1a CREATE PUBLICATION alltables FOR ALL TABLES;</li> </ul>","tags":[]},{"location":"postgres/logical-replication/#_6","title":"\u8ba2\u9605\u7aef","text":"<ul> <li>\u8ba2\u9605\u8282\u70b9\u9700\u8981\u6307\u5b9a\u53d1\u5e03\u8005\u7684\u8fde\u63a5\u4fe1\u606f\uff1b</li> <li>\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u8ba2\u9605\u8005\uff1b</li> <li>\u53ef\u4ee5\u4f7f\u7528enable/disable\u542f\u7528/\u6682\u505c\u8be5\u8ba2\u9605\uff1b</li> <li>\u53d1\u5e03\u8282\u70b9\u548c\u8ba2\u9605\u8282\u70b9\u8868\u7684\u6a21\u5f0f\u540d\u3001\u8868\u540d\u5fc5\u987b\u4e00\u81f4\uff0c\u8ba2\u9605\u8282\u70b9\u5141\u8bb8\u8868\u6709\u989d\u5916\u5b57\u6bb5\uff1b</li> <li>\u53d1\u5e03\u8282\u70b9\u589e\u52a0\u8868\u540d\uff0c\u8ba2\u9605\u8282\u70b9\u9700\u8981\u6267\u884c\uff1a ALTER SUBSCRIPTION sub1 REFRESH PUBLICATION</li> </ul>","tags":[]},{"location":"postgres/logical-replication/#_7","title":"\u590d\u5236\u6807\u8bc6","text":"<p>\u4e3a\u4e86\u80fd\u591f\u590d\u5236UPDATE\u548cDELETE\u64cd\u4f5c\uff0c\u88ab\u53d1\u5e03\u7684\u8868\u5fc5\u987b\u914d\u7f6e\u6709\u4e00\u4e2a\u201c\u590d\u5236\u6807\u8bc6\u201d\u3002 \u8fd9\u6837\u5728\u8ba2\u9605\u8005\u90a3\u4e00\u7aef\u624d\u80fd\u6807\u8bc6\u5bf9\u4e8e\u66f4\u65b0\u6216\u5220\u9664\u5408\u9002\u7684\u884c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u590d\u5236\u6807\u8bc6\u5c31\u662f\u4e3b\u952e\uff08\u5982\u679c\u6709\u4e3b\u952e\uff09\u3002\u4e5f\u53ef\u4ee5\u5728\u590d\u5236\u6807\u8bc6\u4e0a\u8bbe\u7f6e\u53e6\u4e00\u4e2a\u552f\u4e00\u7d22\u5f15\uff08\u6709\u7279\u5b9a\u7684\u989d\u5916\u8981\u6c42\uff09\u3002\u5982\u679c\u8868\u6ca1\u6709\u5408\u9002\u7684\u952e\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u7f6e\u6210\u590d\u5236\u6807\u8bc6\u201cfull\u201d\uff0c\u5b83\u8868\u793a\u6574\u4e2a\u884c\u4e3a\u952e\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u590d\u5236\u6807\u8bc6\uff0c\u8ba2\u9605\u7aef\u7684UPDATE\u548cDELETE\u64cd\u4f5c\u5c06\u53d1\u751f\u9519\u8bef\u3002INSERT\u53ef\u4ee5\u6267\u884c\u3002</p> <p>\u67e5\u770b\u590d\u5236\u6807\u8bc6</p> <pre><code>select relreplident from pg_class where relname = ' xxx ';\n\nd \u9ed8\u8ba4\nn \u65e0\nf \u6240\u6709\u5217\ni \u7d22\u5f15\n</code></pre> <p>\u4fee\u6539\u590d\u5236\u6807\u8bc6</p> <pre><code>alter table xxx replica identity using index xx_idx;\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_8","title":"\u51b2\u7a81","text":"<p>\u8df3\u8fc7\u51b2\u7a81\u4e8b\u52a1</p> <pre><code>pg_replication_origin_advance()\n</code></pre> <p>\u67e5\u770b\u51b2\u7a81\u65f6\u7684\u4f4d\u7f6e</p> <pre><code>pg_replication_origin_status\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_9","title":"\u7b80\u5355\u5b9e\u8df5","text":"<p>\u5c06PG10\u4e2d\u7684\u4e00\u5f20\u8868\u540c\u6b65\u5230PG12\u4e2d</p>","tags":[]},{"location":"postgres/logical-replication/#_10","title":"\u53d1\u5e03\u8005\u670d\u52a1\u5668\u914d\u7f6e","text":"<p>postgresql.conf</p> <pre><code>wal_level = logical\nmax_replication_slots = 10 # \u6bcf\u4e2aslot \u9700\u8981\u4e00\u4e2a\nmax_wal_senders = 10 # \u6bcf\u4e2aslot \u9700\u8981\u4e00\u4e2a\nmax_worker_processes = 128 \n\n</code></pre> <p>pg_hba.conf</p> <pre><code>host replication postgres 10.1.0.0/16 md5\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_11","title":"\u8ba2\u9605\u8005\u670d\u52a1\u5668\u914d\u7f6e","text":"<p>postgresql.conf</p> <pre><code>max_replication_slots = 10 # \u6bcf\u4e2aslot \u9700\u8981\u4e00\u4e2a\nmax_logical_replication_workers = 10 # \u6bcf\u4e2aslot \u9700\u8981\u4e00\u4e2a\nmax_worker_processes = 128\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_12","title":"\u5728\u53d1\u5e03\u7aef\u521b\u5efa\u53d1\u5e03","text":"<pre><code>create publication test01 for table test01 ;\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_13","title":"\u5728\u8ba2\u9605\u7aef\u521b\u5efa\u8868\u7ed3\u6784","text":"<p>pg_dump --schema-only </p> <pre><code>pg_dump -U s -t test01 pglogicaltestdb\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_14","title":"\u5728\u8ba2\u9605\u7aef\u521b\u5efa\u8ba2\u9605","text":"<pre><code>create subscription sub1 connection 'host=10.1.7.55 port=25432 dbname=pglogicaltestdb password=123456' publication test01;\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_15","title":"\u5e38\u7528\u89c6\u56fe\u67e5\u770b","text":"","tags":[]},{"location":"postgres/logical-replication/#_16","title":"\u53d1\u5e03\u7aef\u89c6\u56fe","text":"<pre><code> select * from pg_stat_replication ;\n\n select * from pg_publication;\n\n select * from pg_publication_tables ;\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#_17","title":"\u8ba2\u9605\u7aef\u89c6\u56fe","text":"<pre><code> select * from pg_stat_subscription;\n\n select * from pg_subscription\n</code></pre>","tags":[]},{"location":"postgres/logical-replication/#-","title":"\u5e94\u7528\u6848\u4f8b - \u5347\u7ea7\u6570\u636e\u5e93\u7248\u672c","text":"","tags":[]},{"location":"postgres/logical-replication/#_18","title":"\u66f4\u591a\u601d\u8003","text":"<p>\u591a\u4e3b\u65b9\u6848\uff0c DBR</p> <p>\u4f8b\u5b50 https://cdn.modb.pro/db/48200</p> <p>\u5bf9DDL\u652f\u6301 https://github.com/enova/pgl_ddl_deploy</p>","tags":[]},{"location":"postgres/logical-replication_failover/","title":"\u903b\u8f91\u590d\u5236\u6545\u969c\u8f6c\u79fb","text":"","tags":[]},{"location":"postgres/logical-replication_failover/#_1","title":"\u903b\u8f91\u590d\u5236\u6545\u969c\u8f6c\u79fb","text":"<ul> <li>\u4e3b\u5e93 10.10.2.11</li> <li>\u7269\u7406\u4ece\u5e93 10.10.2.12</li> <li>\u903b\u8f91\u4ece\u5e93 10.10.2.13</li> </ul>","tags":[]},{"location":"postgres/logical-replication_failover/#_2","title":"\u6d4b\u8bd5\u4efb\u52a1","text":"<p>\u5f53\u4e3b\u5e93\u53d1\u751f\u6545\u969c\uff0c\u7269\u7406\u590d\u5236\u4ece\u5e93\u53d8\u4e3a\u65b0\u4e3b\u5e93\u3002\u903b\u8f91\u4ece\u5e93\u5c06\u8ba2\u9605\u5730\u5740\u53d8\u66f4\u4e3a\u65b0\u4e3b\u5e93\u3002</p> <p></p>","tags":[]},{"location":"postgres/logical-replication_failover/#_3","title":"\u5f00\u59cb\u6d4b\u8bd5","text":"<p>\u73af\u5883\u642d\u5efa\u53c2\u8003</p> <ul> <li>\u7269\u7406\u590d\u5236</li> <li>\u903b\u8f91\u590d\u5236</li> </ul> <p>\u72b6\u6001\u67e5\u770b \u590d\u5236\u5173\u7cfb</p> <pre><code> select * from pg_stat_replication ;\n-[ RECORD 1 ]----+------------------------------\npid              | 2628\nusesysid         | 24576\nusename          | repuser\napplication_name | sub1\nclient_addr      | 10.10.2.13\nclient_hostname  | \nclient_port      | 40230\nbackend_start    | 2022-11-23 05:46:59.50291+00\nbackend_xmin     | \nstate            | streaming\nsent_lsn         | 0/21000140\nwrite_lsn        | 0/21000140\nflush_lsn        | 0/21000140\nreplay_lsn       | 0/21000140\nwrite_lag        | \nflush_lag        | \nreplay_lag       | \nsync_priority    | 0\nsync_state       | async\n-[ RECORD 2 ]----+------------------------------\npid              | 2757\nusesysid         | 24576\nusename          | repuser\napplication_name | walreceiver\nclient_addr      | 10.10.2.12\nclient_hostname  | \nclient_port      | 37698\nbackend_start    | 2022-11-23 06:05:19.818834+00\nbackend_xmin     | \nstate            | streaming\nsent_lsn         | 0/21000140\nwrite_lsn        | 0/21000140\nflush_lsn        | 0/21000140\nreplay_lsn       | 0/21000140\nwrite_lag        | \nflush_lag        | \nreplay_lag       | \nsync_priority    | 0\nsync_state       | async\n</code></pre> <p>\u590d\u5236\u69fd</p> <pre><code>select * from pg_replication_slots ;\n slot_name |  plugin  | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn \n-----------+----------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------\n node14    |          | physical  |        |          | f         | f      |            |      |              | 0/1F0005B8  | \n sub1      | pgoutput | logical   |  12953 | postgres | f         | t      |       2628 |      |          570 | 0/21000108  | 0/21000140\n(2 rows)\n</code></pre> <p>\u903b\u8f91\u8ba2\u9605\u8868</p> <pre><code>select * from pg_publication_tables ;\n pubname | schemaname | tablename \n---------+------------+-----------\n test01  | public     | test01\n(1 row)\n</code></pre> <p>\u8868\u6570\u636e</p> <pre><code> select * from test01 ;\n id \n----\n  1\n  2\n  3\n  4\n(4 rows)\n</code></pre>","tags":[]},{"location":"postgres/logical-replication_failover/#_4","title":"\u4e3b\u4ece\u5207\u6362","text":"<p>\u5173\u95ed\u4e3b\u5e93 </p> <pre><code>systemctl stop postgresql\n</code></pre> <p>\u62f7\u8d1d\u903b\u8f91\u590d\u5236\u69fd, \u5c06\u4e3b\u5e93pg_replsolt\u76ee\u5f55\u4e0b\u7684\u903b\u8f91\u590d\u5236\u69fd\u62f7\u8d1d\u5230\u4ece\u5e93\u5bf9\u5e94\u76ee\u5f55\u4e0b. \u6ce8\u610f\u5bf9\u5e94\u7684\u7528\u6237\u53ca\u7528\u6237\u7ec4\u3002</p> <pre><code>scp -r pg_replslot/sub1/ 10.10.2.12:$PGDATA/data/pg_replslot/\n</code></pre> <p>\u5c06\u4ece\u5e93\u5347\u7ea7\u4e3a\u4e3b\u5e93\u5e76\u91cd\u65b0\u542f\u52a8\u52a0\u8f7dslot</p> <pre><code>pg_ctl promote \nwaiting for server to promote.... done\nserver promoted\n</code></pre> <pre><code>systemctl stop postgresql\n</code></pre> <p>\u67e5\u770b\u590d\u5236\u69fd\u52a0\u8f7d\u60c5\u51b5</p> <pre><code>select * from pg_replication_slots ;\n slot_name |  plugin  | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn \n-----------+----------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------\n sub1      | pgoutput | logical   |  12953 | postgres | f         | f      |            |      |          570 | 0/210001B8  | 0/210001B8\n(1 row)\n\n</code></pre> <p>\u6b64\u65f6\u590d\u5236\u5173\u7cfb,\u65e0\u6570\u636e</p> <pre><code>select * from pg_stat_replication ;\n</code></pre> <p>\u5728\u903b\u8f91\u590d\u5236\u4ece\u5e93\u67e5\u770b\u8ba2\u9605\u4fe1\u606f</p> <pre><code>select * from pg_subscription;\n subdbid | subname | subowner | subenabled |                              subconninfo                               | subslotname | subsynccommit | subpublications \n---------+---------+----------+------------+------------------------------------------------------------------------+-------------+---------------+-----------------\n   12953 | sub1    |       10 | t          | host=10.10.2.11 port=5432 dbname=postgres user=repuser password=123456 | sub1        | off           | {test01}\n\n</code></pre> <p>\u4fee\u6539\u8ba2\u9605\u4fe1\u606f</p> <pre><code>postgres=# alter subscription sub1 connection 'host=10.10.2.12 port=5432 dbname=postgres user=repuser password=123456';\nALTER SUBSCRIPTION\npostgres=# select * from pg_subscription;\n subdbid | subname | subowner | subenabled |                              subconninfo                               | subslotname | subsynccommit | subpublications \n---------+---------+----------+------------+------------------------------------------------------------------------+-------------+---------------+-----------------\n   12953 | sub1    |       10 | t          | host=10.10.2.12 port=5432 dbname=postgres user=repuser password=123456 | sub1        | off           | {test01}\n(1 row)\n\n</code></pre> <p>\u67e5\u770b\u590d\u5236\u5173\u7cfb 10.10.2.12</p> <pre><code>select * from pg_stat_replication ;\n-[ RECORD 1 ]----+------------------------------\npid              | 3938\nusesysid         | 24576\nusename          | repuser\napplication_name | sub1\nclient_addr      | 10.10.2.13\nclient_hostname  | \nclient_port      | 42330\nbackend_start    | 2022-11-23 07:10:27.604722+00\nbackend_xmin     | \nstate            | streaming\nsent_lsn         | 0/210004F8\nwrite_lsn        | 0/210004F8\nflush_lsn        | 0/210004F8\nreplay_lsn       | 0/210004F8\nwrite_lag        | \nflush_lag        | \nreplay_lag       | \nsync_priority    | 0\nsync_state       | async\n\n</code></pre> <p>\u65b0\u4e3b\u5e93\u63d2\u5165\u6570\u636e\u67e5\u770b\u903b\u8f91\u590d\u5236\u60c5\u51b5</p> <pre><code>insert INTO test01 values (5);\n</code></pre> <p>\u903b\u8f91\u4ece\u5e93\u67e5\u770b\u7ed3\u679c</p> <pre><code>select * from test01 \n</code></pre>","tags":[]},{"location":"postgres/logical-replication_failover/#_5","title":"\u81ea\u52a8\u5316\u57fa\u7840","text":"<ul> <li>\u62f7\u8d1drepslot \u76ee\u5f55</li> <li>\u91cd\u542f\u65b0\u4ece\u5e93\u52a0\u8f7d repslot</li> </ul> <p>Postgres 11 \u7248\u672c\u540e\uff0c\u65b0\u589e\u52a0\u51fd\u6570  pg_replication_slot_advance</p>","tags":[]},{"location":"postgres/logical-replication_failover/#patroni-failover","title":"patroni \u81ea\u52a8 failover\u914d\u7f6e","text":"","tags":[]},{"location":"postgres/login_nopasswd/","title":"\u6570\u636e\u5e93\u514d\u5bc6\u7801\u767b\u9646","text":"","tags":[]},{"location":"postgres/login_nopasswd/#_1","title":"\u514d\u5bc6\u767b\u9646","text":"<p>\u4ee5\u4e0b\u51e0\u79cdPG\u914d\u7f6e\u514d\u5bc6\u7684\u65b9\u6cd5\u3002</p>","tags":[]},{"location":"postgres/login_nopasswd/#pg_habconf-trust","title":"\u65b9\u6cd5\u4e00\uff1a\u8bbe\u7f6epg_hab.conf \u8ba4\u8bc1\u65b9\u5f0f\u4e3atrust","text":"<pre><code>#Type database user address method\nhost all postgres 127.0.0.1/32 trust\n</code></pre> <p>\u8be5\u65b9\u5f0f\u6700\u4e0d\u5b89\u5168\uff0c\u5bfc\u81f4\u901a\u8fc7\u6307\u5b9aIP\u8fde\u63a5\u6570\u636e\u5e93\u7684\u8fde\u63a5\u90fd\u53ef\u4ee5\u4efb\u610f\u767b\u5f55\u6570\u636e\uff0c\u6beb\u65e0\u5b89\u5168\u4fdd\u969c\u3002\u7981\u6b62\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u3002</p>","tags":[]},{"location":"postgres/login_nopasswd/#pgpgpassword","title":"\u65b9\u6cd5\u4e8c\uff1a\u8bbe\u7f6ePG\u73af\u5883\u53d8\u91cfPGPASSWORD","text":"<p>PGPASSWORD\u662fPostgreSQL\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u5728\u5ba2\u6237\u7aef\u8bbe\u7f6e\u540e\u518d\u8fdc\u7a0b\u8fde\u63a5\u6570\u636e\u5e93\u65f6\uff0c\u5c06\u4f18\u5148\u4f7f\u7528\u8fd9\u4e2a\u5bc6\u7801\u3002</p> <pre><code>[postgres@PG-1 ~]$ export PGPASSWORD=root\n[postgres@PG-1 ~]$ psql -U postgres -h 127.0.0.1 -p 5432\nTiming is on.\nBorder style is 2.\nNull display is \"NULL\".\npsql (13.2)\nType \"help\" for help.\n</code></pre> <p>\u6b64\u65f6\u6570\u636e\u5e93\u767b\u5f55\u65f6\uff0c\u4e0d\u5728\u63d0\u793a\u8f93\u5165\u7528\u6237\u5bc6\u7801</p>","tags":[]},{"location":"postgres/login_nopasswd/#pgservice","title":"\u65b9\u6cd5\u4e09\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfPGSERVICE","text":"<p>pg_service.conf \u901a\u8fc7\u5b9a\u4e49\u670d\u52a1\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5bf9\u591a\u4e2a\u6570\u636e\u5e93\u8fdb\u884c\u514d\u5bc6\u767b\u5f55\u3002</p> <pre><code>\nvi /home/postgres/.pg_service.conf\n[backup]\nhostaddr=127.0.0.1\nport=5432\nuser=postgres\ndbname=postgres\npassword=root\nconnect_timeout=10\n[postgres@PG-1 ~]$ export PGSERVICE=backup\n[postgres@PG-1 ~]$ psql -h 127.0.0.1 -p 5432 -U postgres\nTiming is on.\nBorder style is 2.\nNull display is \"NULL\".\npsql (13.2)\nType \"help\" for help.\n</code></pre> <p>\u5b9a\u4e49pg_service.conf\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u4ee3\u8868\u4e00\u4e2a\u8fde\u63a5\u3002</p>","tags":[]},{"location":"postgres/login_nopasswd/#pgpass","title":"\u65b9\u6cd5\u56db\uff1a\u8bbe\u7f6e.pgpass\u6587\u4ef6","text":"<p>\u6539\u6587\u4ef6\u9ed8\u8ba4\u5728/home/postgres/\uff0c\u4e14\u8be5\u6587\u4ef6\u7684\u6743\u9650\u8981\u4e3a600\uff0c\u5982\u679c\u6587\u4ef6\u6743\u9650\u4e0d\u5bf9\uff0c\u5219\u5728\u767b\u5f55\u4f1a\u6709\u76f8\u5e94\u7684\u544a\u8b66\u8f93\u51fa\uff0c\u5e76\u8981\u6c42\u8f93\u5165\u7528\u6237\u5bc6\u7801\u3002</p> <pre><code>WARNING: password file \"/home/postgres/.pgpass\" has group or world access; permissions should be u=rw (0600) or less\nPassword for user postgres:\n</code></pre> <p>\u5185\u5bb9\u683c\u5f0f\uff1a</p> <pre><code>host:port:dbname:username:password\n</code></pre> <pre><code>[postgres@PG-1 ~]$ cat .pgpass\n127.0.0.1:5432:postgres:postgres:root\nlocalhost:5432:postgres:postgres:root\n</code></pre> <p>\u6587\u4ef6\u6743\u9650\uff1a</p> <pre><code>[postgres@PG-1 ~]$ ll -h .pgpass\n-rw------- 1 postgres postgres 76 2\u6708 24 19:26 .pgpass\n</code></pre> <p>\u767b\u5f55\uff1a</p> <pre><code>[postgres@PG-1 ~]$ psql -U postgres -h 127.0.0.1 -p 5432\nTiming is on.\nBorder style is 2.\nNull display is \"NULL\".\npsql (13.2)\nType \"help\" for help.\n</code></pre>","tags":[]},{"location":"postgres/login_nopasswd/#pg_habconf-ident-peer","title":"\u65b9\u6cd5\u4e94\uff1a \u8bbe\u7f6epg_hab.conf \u4e3a ident \u6216 peer","text":"<p>peer \u65b9\u5f0f\u4e00 </p> <pre><code>local   all    all       peer\n</code></pre> <p>peer \u65b9\u5f0f\u4e8c</p> <pre><code>local   all    all       peer map=t\n</code></pre> <p>\u518d\u914d\u7f6epg_ident.conf</p> <pre><code>#mapping name      os user name      db user name\nt                  os_user           postgres\n</code></pre> <p>ident \u65b9\u5f0f</p> <pre><code>host   all    all       ident map=t\n</code></pre> <p>\u518d\u914d\u7f6epg_ident.conf</p> <pre><code>#mapping name      os user name      db user name\nt                  os_user           postgres\n</code></pre> <p>peer \u548c ident \u533a\u522b</p> <ul> <li> <p>\u90fd\u662f\u57fa\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u8ba4\u8bc1\uff0c\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u6620\u5c04\u6570\u636e\u5e93\u7528\u6237\u8fdb\u884c\u8ba4\u8bc1\uff0cpeer\u65b9\u5f0f\u6570\u636e\u5e93\u8bbf\u95ee\u5ba2\u6237\u7aef\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u5fc5\u987b\u5728\u540c\u4e00\u53f0\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0cident\u65b9\u5f0f\u5219\u4e0d\u662f\u3002   peer\u4f7f\u7528unix socket\u4f1a\u8bdd\uff0cpsql\u8bbf\u95ee\u65f6\u4e0d\u6307\u5b9a-h \u6216\u8005-h localhost \u6216\u8005-h $PGDATA</p> </li> <li> <p>ident\u4f7f\u7528tcp\u4f1a\u8bdd\uff0cpsql\u8bbf\u95ee\u65f6-h 127.0.0.1 \u6216host</p> </li> </ul>","tags":[]},{"location":"postgres/materialized/","title":"\u7269\u5316\u89c6\u56fe","text":"","tags":[]},{"location":"postgres/materialized/#_1","title":"\u7269\u5316\u89c6\u56fe","text":"<p>\u7269\u5316\u89c6\u56fe\u4e0e\u666e\u901a\u89c6\u56fe\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7269\u5316\u89c6\u56fe\u662f\u7269\u7406\u4e0a\u771f\u5b9e\u5b58\u5728\u7684\u8868\u3002</p>","tags":[]},{"location":"postgres/materialized/#_2","title":"\u7269\u5316\u89c6\u56fe\u7684\u521b\u5efa","text":"<pre><code> \\h create materialized view \nCommand:     CREATE MATERIALIZED VIEW\nDescription: define a new materialized view\nSyntax:\nCREATE MATERIALIZED VIEW [ IF NOT EXISTS ] table_name\n    [ (column_name [, ...] ) ]\n    [ USING method ]\n    [ WITH ( storage_parameter [= value] [, ... ] ) ]\n    [ TABLESPACE tablespace_name ]\n    AS query\n    [ WITH [ NO ] DATA ]\n</code></pre> <p>\u4e0ecreat table as \u57fa\u672c\u76f8\u540c\uff0c\u4f46\u662f\u7269\u5316\u89c6\u56fe\u4e0d\u540c\u4e8etable \u7684\u662f\u7269\u5316\u65f6\u5019\u4e2d\u7684\u6570\u636e\u5185\u5bb9\u53ef\u4ee5\u5237\u65b0\u3002</p>","tags":[]},{"location":"postgres/materialized/#_3","title":"\u7269\u5316\u89c6\u56fe\u7684\u66f4\u65b0","text":"<pre><code>postgres=# \\h REFRESH \nCommand:     REFRESH MATERIALIZED VIEW\nDescription: replace the contents of a materialized view\nSyntax:\nREFRESH MATERIALIZED VIEW [ CONCURRENTLY ] name\n    [ WITH [ NO ] DATA ]\n\nURL: https://www.postgresql.org/docs/12/sql-refreshmaterializedview.html\n</code></pre> <ul> <li>\u5168\u91cf\u66f4\u65b0</li> </ul> <p>\u5168\u91cf\u66f4\u65b0\u9501\u8868\u901f\u5ea6\u5feb</p> <ul> <li>\u589e\u91cf\u66f4\u65b0 \uff08CONCURRENTLY\uff09</li> </ul> <p>\u589e\u91cf\u66f4\u65b0\u505a\u7684\u64cd\u4f5c\u662f\u5c06\u5f53\u524d\u89c6\u56fe\u8868\u4e2d\u7684\u6570\u636e\u548cquery\u4e2d\u7684\u6570\u636e\u505a\u4e00\u4e2ajoin\u64cd\u4f5c\uff0c\u7136\u540e\u624d\u5c06\u5dee\u91cf\u505a\u586b\u5145\u3002</p>","tags":[]},{"location":"postgres/materialized/#_4","title":"\u5e94\u7528\u573a\u666f","text":"<p>\u5bf9\u62bd\u53d6\u6570\u636e\u7ed3\u679c\u96c6\u8bbf\u95ee\u9891\u7387\u9ad8\uff0c\u4f46\u662f\u66f4\u65b0\u53d8\u5316\u9891\u7387\u4f4e\u3002</p> <p>\u5bf9\u5173\u6ce8\u7684\u6570\u636e\u7ed3\u679c\u96c6\u8fdb\u884c\u62bd\u8c61\u4e3a\u7269\u5316\u89c6\u56fe\u3002\u65b9\u4fbf\u540e\u9762\u5e94\u7528\u7684\u9891\u7e41\u8bfb\u53d6\u3002</p>","tags":[]},{"location":"postgres/monitor-sql/","title":"\u67e5\u770b\u6570\u636e\u4fe1\u606f\u5e38\u7528sql\u6574\u7406","text":"","tags":[]},{"location":"postgres/monitor-sql/#_1","title":"\u5e93\u5185\u5b58\u547d\u4e2d\u7387","text":"<pre><code>SELECT  \n'index hit rate' AS name,\n(sum(idx_blks_hit)) / nullif(sum(idx_blks_hit + idx_blks_read),0) AS ratio\nFROM pg_statio_user_indexes\nUNION ALL\nSELECT\n'table hit rate' AS name,\nsum(heap_blks_hit) / nullif(sum(heap_blks_hit) + sum(heap_blks_read),0) AS ratio\nFROM pg_statio_user_tables;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_2","title":"\u8868\u5185\u5b58\u547d\u4e2d\u7387","text":"<pre><code>SELECT relname AS relation, heap_blks_read AS heap_read, heap_blks_hit AS heap_hit,\n((heap_blks_hit*100) / NULLIF((heap_blks_hit + heap_blks_read), 0)) AS ratio \nFROM pg_statio_user_tables order by ratio;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#io","title":"\u8bfbIO\u5185\u5b58\u5360\u6bd4","text":"<p>\u78c1\u76d8\u4e2d\u8bfb\u53d6\u548c\u5728\u5185\u5b58\u4e2d\u76f4\u63a5\u8bfb\u53d6\u4e4b\u95f4\u7684\u6570\u5b57\u548c\u6bd4</p> <pre><code>SELECT relname AS \"relation\", heap_blks_read AS heap_read, heap_blks_hit AS heap_hit, \n( (heap_blks_hit*100) / NULLIF((heap_blks_hit + heap_blks_read), 0)) AS ratioFROM pg_statio_user_tables;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_3","title":"\u8868\u4e2d\u7d22\u5f15\u547d\u4e2d\u7387","text":"<pre><code>SELECT relname, \nCASE idx_scan\nWHEN 0 THEN NULL\nELSE round(100.0 * idx_scan / (seq_scan + idx_scan), 5)\nEND percent_of_times_index_used,\nn_live_tup rows_in_table\nFROM\npg_stat_user_tables\nORDER BY\nn_live_tup DESC;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_4","title":"\u7d22\u5f15\u5229\u7528\u7387","text":"<pre><code>SELECT  \nschemaname || '.' || relname AS table,\nindexrelname AS index,\npg_size_pretty(pg_relation_size(i.indexrelid)) AS index_size,\nidx_scan as index_scans\nFROM pg_stat_user_indexes ui\nJOIN pg_index i ON ui.indexrelid = i.indexrelid\nWHERE NOT indisunique\nAND idx_scan &lt; 50\nAND pg_relation_size(relid) &gt; 5 * 8192\nORDER BY pg_relation_size(i.indexrelid) / nullif(idx_scan, 0) DESC NULLS FIRST,\npg_relation_size(i.indexrelid) DESC;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_5","title":"\u8868\u7a7a\u95f4\u5927\u5c0f","text":"<pre><code>SELECT\ntable_name,\npg_size_pretty(table_size) AS table_size,\npg_size_pretty(indexes_size) AS indexes_size,\npg_size_pretty(total_size) AS total_size\nFROM (\nSELECT\ntable_name,\npg_table_size(table_name) AS table_size,\npg_indexes_size(table_name) AS indexes_size,\npg_total_relation_size(table_name) AS total_size\nFROM (\nSELECT ('\"' || table_schema || '\".\"' || table_name || '\"') AS table_name\nFROM information_schema.tables\n) AS all_tables\nORDER BY total_size DESC\n) AS pretty_sizes;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_6","title":"\u8868\u81a8\u80c0\u7387","text":"<pre><code>-- Table bloat estimate\nCREATE OR REPLACE VIEW monitor.pg_table_bloat AS\n    SELECT CURRENT_CATALOG AS datname, nspname, relname , bs * tblpages AS size,\n           CASE WHEN tblpages - est_tblpages_ff &gt; 0 THEN (tblpages - est_tblpages_ff)/tblpages::FLOAT ELSE 0 END AS ratio\n    FROM (\n             SELECT ceil( reltuples / ( (bs-page_hdr)*fillfactor/(tpl_size*100) ) ) + ceil( toasttuples / 4 ) AS est_tblpages_ff,\n                    tblpages, fillfactor, bs, tblid, nspname, relname, is_na\n             FROM (\n                      SELECT\n                          ( 4 + tpl_hdr_size + tpl_data_size + (2 * ma)\n                              - CASE WHEN tpl_hdr_size % ma = 0 THEN ma ELSE tpl_hdr_size % ma END\n                              - CASE WHEN ceil(tpl_data_size)::INT % ma = 0 THEN ma ELSE ceil(tpl_data_size)::INT % ma END\n                              ) AS tpl_size, (heappages + toastpages) AS tblpages, heappages,\n                          toastpages, reltuples, toasttuples, bs, page_hdr, tblid, nspname, relname, fillfactor, is_na\n                      FROM (\n                               SELECT\n                                   tbl.oid AS tblid, ns.nspname , tbl.relname, tbl.reltuples,\n                                   tbl.relpages AS heappages, coalesce(toast.relpages, 0) AS toastpages,\n                                   coalesce(toast.reltuples, 0) AS toasttuples,\n                                   coalesce(substring(array_to_string(tbl.reloptions, ' ') FROM 'fillfactor=([0-9]+)')::smallint, 100) AS fillfactor,\n                                   current_setting('block_size')::numeric AS bs,\n                                   CASE WHEN version()~'mingw32' OR version()~'64-bit|x86_64|ppc64|ia64|amd64' THEN 8 ELSE 4 END AS ma,\n                                   24 AS page_hdr,\n                                   23 + CASE WHEN MAX(coalesce(s.null_frac,0)) &gt; 0 THEN ( 7 + count(s.attname) ) / 8 ELSE 0::int END\n                                       + CASE WHEN bool_or(att.attname = 'oid' and att.attnum &lt; 0) THEN 4 ELSE 0 END AS tpl_hdr_size,\n                                   sum( (1-coalesce(s.null_frac, 0)) * coalesce(s.avg_width, 0) ) AS tpl_data_size,\n                                   bool_or(att.atttypid = 'pg_catalog.name'::regtype)\n                                       OR sum(CASE WHEN att.attnum &gt; 0 THEN 1 ELSE 0 END) &lt;&gt; count(s.attname) AS is_na\n                               FROM pg_attribute AS att\n                                        JOIN pg_class AS tbl ON att.attrelid = tbl.oid\n                                        JOIN pg_namespace AS ns ON ns.oid = tbl.relnamespace\n                                        LEFT JOIN pg_stats AS s ON s.schemaname=ns.nspname AND s.tablename = tbl.relname AND s.inherited=false AND s.attname=att.attname\n                                        LEFT JOIN pg_class AS toast ON tbl.reltoastrelid = toast.oid\n                               WHERE NOT att.attisdropped AND tbl.relkind = 'r' AND nspname NOT IN ('pg_catalog','information_schema')\n                               GROUP BY 1,2,3,4,5,6,7,8,9,10\n                           ) AS s\n                  ) AS s2\n         ) AS s3\n    WHERE NOT is_na;\n\nCREATE OR REPLACE VIEW monitor.pg_table_bloat_human AS\n    SELECT nspname || '.' || relname AS name,\n           pg_size_pretty(size)      AS size,\n           pg_size_pretty((size * ratio)::BIGINT) AS wasted,\n           round(100 * ratio::NUMERIC, 2)  as ratio\n    FROM monitor.pg_table_bloat ORDER BY wasted DESC NULLS LAST;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_7","title":"\u7d22\u5f15\u81a8\u80c0\u7387","text":"<pre><code>CREATE OR REPLACE VIEW monitor.pg_index_bloat AS\n    SELECT CURRENT_CATALOG AS datname, nspname, idxname AS relname, relpages::BIGINT * bs AS size,\n           COALESCE((relpages - ( reltuples * (6 + ma - (CASE WHEN index_tuple_hdr % ma = 0 THEN ma ELSE index_tuple_hdr % ma END)\n                                                   + nulldatawidth + ma - (CASE WHEN nulldatawidth % ma = 0 THEN ma ELSE nulldatawidth % ma END))\n                                      / (bs - pagehdr)::FLOAT  + 1 )), 0) / relpages::FLOAT AS ratio\n    FROM (\n             SELECT nspname,\n                    idxname,\n                    reltuples,\n                    relpages,\n                    current_setting('block_size')::INTEGER                                                               AS bs,\n                    (CASE WHEN version() ~ 'mingw32' OR version() ~ '64-bit|x86_64|ppc64|ia64|amd64' THEN 8 ELSE 4 END)  AS ma,\n                    24                                                                                                   AS pagehdr,\n                    (CASE WHEN max(COALESCE(pg_stats.null_frac, 0)) = 0 THEN 2 ELSE 6 END)                               AS index_tuple_hdr,\n                    sum((1.0 - COALESCE(pg_stats.null_frac, 0.0)) *\n                        COALESCE(pg_stats.avg_width, 1024))::INTEGER                                                     AS nulldatawidth\n             FROM pg_attribute\n                      JOIN (\n                 SELECT pg_namespace.nspname,\n                        ic.relname                                                   AS idxname,\n                        ic.reltuples,\n                        ic.relpages,\n                        pg_index.indrelid,\n                        pg_index.indexrelid,\n                        tc.relname                                                   AS tablename,\n                        regexp_split_to_table(pg_index.indkey::TEXT, ' ') :: INTEGER AS attnum,\n                        pg_index.indexrelid                                          AS index_oid\n                 FROM pg_index\n                          JOIN pg_class ic ON pg_index.indexrelid = ic.oid\n                          JOIN pg_class tc ON pg_index.indrelid = tc.oid\n                          JOIN pg_namespace ON pg_namespace.oid = ic.relnamespace\n                          JOIN pg_am ON ic.relam = pg_am.oid\n                 WHERE pg_am.amname = 'btree' AND ic.relpages &gt; 0 AND nspname NOT IN ('pg_catalog', 'information_schema')\n             ) ind_atts ON pg_attribute.attrelid = ind_atts.indexrelid AND pg_attribute.attnum = ind_atts.attnum\n                      JOIN pg_stats ON pg_stats.schemaname = ind_atts.nspname\n                 AND ((pg_stats.tablename = ind_atts.tablename AND pg_stats.attname = pg_get_indexdef(pg_attribute.attrelid, pg_attribute.attnum, TRUE))\n                     OR (pg_stats.tablename = ind_atts.idxname AND pg_stats.attname = pg_attribute.attname))\n             WHERE pg_attribute.attnum &gt; 0\n             GROUP BY 1, 2, 3, 4, 5, 6\n         ) est\n    LIMIT 512;\n\nCREATE OR REPLACE VIEW monitor.pg_index_bloat_human AS\n    SELECT nspname || '.' || relname              AS name,\n           pg_size_pretty(size)                   AS size,\n           pg_size_pretty((size * ratio)::BIGINT) AS wasted,\n           round(100 * ratio::NUMERIC, 2)         as ratio\n    FROM monitor.pg_index_bloat;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_8","title":"\u8868\u4e2d\u9501\u72b6\u6001","text":"<pre><code>SELECT count(pg_stat_activity.pid) AS number_of_queries, \n  substring(trim(LEADING FROM regexp_replace(pg_stat_activity.query, '[\\n\\r]+'::text,' '::text, 'g'::text))\n                FROM 0 FOR 200) AS query_name,  max(age(CURRENT_TIMESTAMP, query_start))\n       AS max_wait_time, wait_event, usename, locktype, mode, granted \n                FROM pg_stat_activity LEFT JOIN pg_locks ON pg_stat_activity.pid = pg_locks.pid \n                   WHERE query != '&lt;IDLE&gt;' AND query NOT ILIKE '%pg_%' AND query NOT ILIKE '%application_name%'\n                      AND query NOT ILIKE '%inet%' AND age(CURRENT_TIMESTAMP, query_start) &gt; '5 milliseconds'::interval\n  GROUP BY query_name,wait_event, usename, locktype, mode, granted  ORDER BY max_wait_time DESC;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_9","title":"\u88ab\u9501\u5835\u585e\u7684\u8bed\u53e5","text":"<pre><code>SELECT                                      \n    blocked_locks.pid AS blocked_pid,\n    blocked_activity.usename AS blocked_user,\n    now() - blocked_activity.query_start AS blocked_duration,\n    blocking_locks.pid AS blocking_pid,\n    blocking_activity.usename AS blocking_user,\n    now() - blocking_activity.query_start AS blocking_duration,\n    blocked_activity.query AS blocked_statement,\n    blocking_activity.query AS blocking_statement\nFROM                                                       \n    pg_catalog.pg_locks AS blocked_locks\n    JOIN pg_catalog.pg_stat_activity AS blocked_activity ON blocked_activity.pid = blocked_locks.pid\n    JOIN pg_catalog.pg_locks AS blocking_locks ON blocking_locks.locktype = blocked_locks.locktype\n        AND blocking_locks.DATABASE IS NOT DISTINCT FROM blocked_locks.DATABASE\n        AND blocking_locks.relation IS NOT DISTINCT FROM blocked_locks.relation\n        AND blocking_locks.page IS NOT DISTINCT FROM blocked_locks.page\n        AND blocking_locks.tuple IS NOT DISTINCT FROM blocked_locks.tuple\n        AND blocking_locks.virtualxid IS NOT DISTINCT FROM blocked_locks.virtualxid\n        AND blocking_locks.transactionid IS NOT DISTINCT FROM blocked_locks.transactionid\n        AND blocking_locks.classid IS NOT DISTINCT FROM blocked_locks.classid\n        AND blocking_locks.objid IS NOT DISTINCT FROM blocked_locks.objid\n        AND blocking_locks.objsubid IS NOT DISTINCT FROM blocked_locks.objsubid\n        AND blocking_locks.pid != blocked_locks.pid\n    JOIN pg_catalog.pg_stat_activity AS blocking_activity ON blocking_activity.pid = blocking_locks.pid\nWHERE\n    NOT blocked_locks.granted;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#_10","title":"\u8868\u4e2d\u9501\u7b49\u5f85","text":"<pre><code>with      \nt_wait as      \n(      \n  select a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,     \n  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,      \n  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name     \n    from pg_locks a,pg_stat_activity b where a.pid=b.pid and not a.granted     \n),     \nt_run as     \n(     \n  select a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,     \n  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,     \n  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name     \n    from pg_locks a,pg_stat_activity b where a.pid=b.pid and a.granted     \n),     \nt_overlap as     \n(     \n  select r.* from t_wait w join t_run r on     \n  (     \n    r.locktype is not distinct from w.locktype and     \n    r.database is not distinct from w.database and     \n    r.relation is not distinct from w.relation and     \n    r.page is not distinct from w.page and     \n    r.tuple is not distinct from w.tuple and     \n    r.virtualxid is not distinct from w.virtualxid and     \n    r.transactionid is not distinct from w.transactionid and     \n    r.classid is not distinct from w.classid and     \n    r.objid is not distinct from w.objid and     \n    r.objsubid is not distinct from w.objsubid and     \n    r.pid &lt;&gt; w.pid     \n  )      \n),      \nt_unionall as      \n(      \n  select r.* from t_overlap r      \n  union all      \n  select w.* from t_wait w      \n)      \nselect locktype,datname,relation::regclass,page,tuple,virtualxid,transactionid::text,classid::regclass,objid,objsubid,     \nstring_agg(     \n'Pid: '||case when pid is null then 'NULL' else pid::text end||chr(10)||     \n'Lock_Granted: '||case when granted is null then 'NULL' else granted::text end||' , Mode: '||case when mode is null then 'NULL' else mode::text end||' , FastPath: '||case when fastpath is null then 'NULL' else fastpath::text end||' , VirtualTransaction: '||case when virtualtransaction is null then 'NULL' else virtualtransaction::text end||' , Session_State: '||case when state is null then 'NULL' else state::text end||chr(10)||     \n'Username: '||case when usename is null then 'NULL' else usename::text end||' , Database: '||case when datname is null then 'NULL' else datname::text end||' , Client_Addr: '||case when client_addr is null then 'NULL' else client_addr::text end||' , Client_Port: '||case when client_port is null then 'NULL' else client_port::text end||' , Application_Name: '||case when application_name is null then 'NULL' else application_name::text end||chr(10)||      \n'Xact_Start: '||case when xact_start is null then 'NULL' else xact_start::text end||' , Query_Start: '||case when query_start is null then 'NULL' else query_start::text end||' , Xact_Elapse: '||case when (now()-xact_start) is null then 'NULL' else (now()-xact_start)::text end||' , Query_Elapse: '||case when (now()-query_start) is null then 'NULL' else (now()-query_start)::text end||chr(10)||      \n'SQL (Current SQL in Transaction): '||chr(10)||    \ncase when query is null then 'NULL' else query::text end,      \nchr(10)||'--------'||chr(10)      \norder by      \n  (  case mode      \n    when 'INVALID' then 0     \n    when 'AccessShareLock' then 1     \n    when 'RowShareLock' then 2     \n    when 'RowExclusiveLock' then 3     \n    when 'ShareUpdateExclusiveLock' then 4     \n    when 'ShareLock' then 5     \n    when 'ShareRowExclusiveLock' then 6     \n    when 'ExclusiveLock' then 7     \n    when 'AccessExclusiveLock' then 8     \n    else 0     \n  end  ) desc,     \n  (case when granted then 0 else 1 end)    \n) as lock_conflict    \nfrom t_unionall     \ngroup by     \nlocktype,datname,relation,page,tuple,virtualxid,transactionid::text,classid,objid,objsubid ;\n</code></pre>","tags":[]},{"location":"postgres/monitor-sql/#auto-vacuum","title":"auto vacuum \u9884\u6d4b","text":"<pre><code>WITH table_opts AS (    \nSELECT\npg_class.oid, relname, nspname, array_to_string(reloptions, '') AS relopts\nFROM\npg_class INNER JOIN pg_namespace ns ON relnamespace = ns.oid\n), vacuum_settings AS (\nSELECT\noid, relname, nspname,\nCASE\nWHEN relopts LIKE '%autovacuum_vacuum_threshold%'\nTHEN substring(relopts, '.*autovacuum_vacuum_threshold=([0-9.]+).*')::integer\nELSE current_setting('autovacuum_vacuum_threshold')::integer\nEND AS autovacuum_vacuum_threshold,\nCASE\nWHEN relopts LIKE '%autovacuum_vacuum_scale_factor%'\nTHEN substring(relopts, '.*autovacuum_vacuum_scale_factor=([0-9.]+).*')::real\nELSE current_setting('autovacuum_vacuum_scale_factor')::real\nEND AS autovacuum_vacuum_scale_factor\nFROM\ntable_opts\n)\nSELECT\nvacuum_settings.relname AS table_name,\npg_size_pretty(pg_total_relation_size(pg_class.oid::regclass)) AS table_size,\nto_char(psut.last_vacuum, 'YYYY-MM-DD HH24:MI') AS last_vacuum,\nto_char(psut.last_autovacuum, 'YYYY-MM-DD HH24:MI') AS last_autovacuum,\nto_char(pg_class.reltuples, '9G999G999G999') AS rowcount,\nto_char(pg_class.reltuples / NULLIF(pg_class.relpages, 0), '999G999.99') AS rows_per_page,\nto_char(autovacuum_vacuum_threshold\n+ (autovacuum_vacuum_scale_factor::numeric * pg_class.reltuples), '9G999G999G999') AS autovacuum_vacuum_threshold,\npsut.n_dead_tup AS dead_rows,\nCASE\nWHEN autovacuum_vacuum_threshold + (autovacuum_vacuum_scale_factor::numeric * pg_class.reltuples) &lt; psut.n_dead_tup\nTHEN 'yes'\nELSE (autovacuum_vacuum_threshold + (autovacuum_vacuum_scale_factor::numeric * pg_class.reltuples) - psut.n_dead_tup)::varchar\nEND AS will_vacuum\nFROM\npg_stat_user_tables psut INNER JOIN pg_class ON psut.relid = pg_class.oid\nINNER JOIN vacuum_settings ON pg_class.oid = vacuum_settings.oid\nORDER BY 1\n</code></pre>","tags":[]},{"location":"postgres/monitor/","title":"Postgres \u76d1\u63a7\u5e38\u7528\u5de5\u5177","text":""},{"location":"postgres/monitor/#_1","title":"\u5404\u79cd\u76d1\u63a7\u65b9\u5f0f","text":"<ul> <li> <p>zabbix  Monitor PostgreSQL with Zabbix</p> </li> <li> <p>postgres_exporter  A PostgresSQL metric exporter for Prometheus</p> </li> <li> <p>pgwatch2 PostgreSQL metrics monitor/dashboard</p> </li> <li> <p>pgmetrics Collect and display information and stats from a running PostgreSQL server </p> </li> <li> <p>pgdash  (\u6536\u8d39)</p> </li> <li> <p>pganalyze PostgreSQL Performance Monitoring</p> </li> <li> <p>\u53c2\u8003\u81ea\u5df1\u5b9e\u73b0 </p> </li> </ul>"},{"location":"postgres/monitor/#_2","title":"\u72b6\u6001\u67e5\u770b","text":"<p>pgcenter</p> <pre><code>pgcenter top\npgcenter: 2018-12-20 11:10:25, load average: 0.94, 0.84, 0.86                                                                         state [ok]: ::1:5432 postgres@postgres (ver: 10.6, up 8 days 19:57:54, recovery: f)\n    %cpu: 15.0 us,  3.7 sy,  0.0 ni, 75.3 id,  5.7 wa,  0.0 hi,  0.2 si,  0.0 st                                                        activity:  5/1000 conns,  0/0 prepared,  2 idle,  0 idle_xact,  3 active,  0 waiting,  0 others\n MiB mem:   7821 total,    162 free,    424 used,     7235 buff/cached                                                                autovacuum:  0/3 workers/max,  0 manual,  0 wraparound, 00:00:00 vac_maxtime\nMiB swap:   1023 total,    903 free,    120 used,      0/0 dirty/writeback                                                            statements: 1888 stmt/s, 2.330 stmt_avgtime, 00:00:00 xact_maxtime, 00:00:00 prep_maxtime      \n\npid     cl_addr      cl_port   datname       usename    appname    backend_type        wait_etype   wait_event     state    xact_age   query_age         change_age        query           \n27908   ::1          40204     postgres      postgres   pgcenter   client backend                                  active   00:00:00   00:00:00          00:00:00          SELECT pid, client_addr AS cl_addr, client_port AS cl_port, datname, usename, left(application\n27660   10.1.88.22   34224     timescaledb   postgres              client backend      LWLock       WALWriteLock   active   00:00:00   00:00:00          00:00:00          COMMIT                                                                                        \n27410   10.1.88.22   34058     timescaledb   postgres              client backend                                  active   00:00:00   00:00:00          00:00:00          COMMIT                 \n</code></pre> <p>pg_activity</p> <pre><code>pg_activity\n- postgres@localhost:5432/postgres - Ref.: 2s\n  Size:   60.54G -     0.00B/s        | TPS:        1243        | Active Connections:           2        | Duration mode:       query\n  Mem.:   24.40% -     4.51G/62.66G   | IO Max:      342/s\n  Swap:    2.10% -   515.50M/23.85G   | Read :      0.00B/s -      0/s\n  Load:    0.93 1.38 1.49             | Write:      0.00B/s -      0/s\n                                                                               RUNNING QUERIES\nPID    DATABASE                      APP             USER           CLIENT   CPU% MEM%   READ/s  WRITE/s     TIME+  W  IOW              state   Query\n33430  None                  walreceiver         postgres     10.1.80.6/32    1.0  0.0    0.00B    0.00B  0.000000  N    N             active\n</code></pre> <p>[pg_top]</p> <pre><code>pg_top\nlast pid: 15974;  load avg:  1.50,  1.79,  1.42;       up 508+22:42:20                                                                                                              10:03:51\n134 processes: 134 sleeping\nCPU states:  2.9% user,  0.0% nice,  0.7% system, 96.4% idle,  0.1% iowait\nMemory: 60G used, 2497M free, 4K buffers, 54G cached\nDB activity: 1272 tps,  0 rollbs/s,   0 buffer r/s, 100 hit%, 146256 row r/s, 2028 row w/s\nDB I/O:     0 reads/s,     1 KB/s,   238 writes/s,  4812 KB/s\nDB disk: 953.2 GB total, 694.9 GB free (27% used)\nSwap: 1853M used, 22G free, 363M cached\n\n  PID USERNAME PRI NICE  SIZE   RES STATE   TIME   WCPU    CPU COMMAND\n15790 postgres  20    0   11G   81M sleep   0:00  0.78%  4.56% postgres: k3s_cg k3s_cg 10.1.40.92(37422) idle\n29050 postgres  20    0   11G  122M sleep  41.6H  0.60%  3.18% postgres: zabbix zabbix ::1(55888) idle\n29020 postgres  20    0   11G  120M sleep  41.7H  0.50%  2.98% postgres: zabbix zabbix ::1(55860) idle\n29061 postgres  20    0   11G  120M sleep  41.7H  0.56%  2.98% postgres: zabbix zabbix ::1(55898) idle\n29059 postgres  20    0   11G  122M sleep  41.6H  0.48%  2.98% postgres: zabbix zabbix ::1(55896) idle\n29069 postgres  20    0   11G  120M sleep  41.6H  0.56%  2.98% postgres: zabbix zabbix ::1(55906) idle\n</code></pre> <p>monitoring-stats</p> <p>zabbix /var/lib/zabbix/postgresql/</p> <pre><code>wget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.bgwriter.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.bgwriter.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.cache.hit.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.config.hash.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.connections.prepared.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.connections.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.connections.sum.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.dbstat.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.dbstat.sum.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.discovery.db.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.frozenxid.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.locks.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.ping.time.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.query.time.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.replication.lag.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.replication.recovery_role.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.replication.status.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.scans.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.transactions.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.uptime.sql\nwget https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/postgresql/postgresql/pgsql.wal.stat.sql\n</code></pre> <p>https://git.zabbix.com/projects/ZBX/repos/zabbix/browse</p>"},{"location":"postgres/monitor_explain/","title":"\u6570\u636e\u5e93\u76d1\u63a7\u6307\u6807","text":""},{"location":"postgres/monitor_explain/#_1","title":"\u5b9e\u4f53\u673a","text":"<ul> <li>\u786c\u76d8\u7a7a\u95f4</li> <li>cup\u5229\u7528\u7387</li> <li>\u5185\u5b58\u5229\u7528\u7387</li> <li>IO</li> <li>\u7f51\u7edc\u5e26\u5bbd</li> <li>tcp\u8fde\u63a5\u60c5\u51b5</li> <li>\u6e29\u5ea6</li> </ul>"},{"location":"postgres/monitor_explain/#_2","title":"\u6570\u636e\u5e93\u5e74\u9f84","text":"<pre><code> -- \u6570\u636e\u5e93database \u5e74\u9f84\n select datname,age(datfrozenxid),pg_size_pretty(pg_database_size(oid)) from pg_database order by age(datfrozenxid) desc limit 10 ;\n\n -- \u8868\u5e74\u9f84\n select relname,age(relfrozenxid), pg_size_pretty(pg_table_size(oid)) from pg_class where relkind in ('t','r') order by age(relfrozenxid) desc limit 10;\n\n\u8bf4\u660e\uff1a \u5f53age\u5230\u8fbe2\u4ebf\uff08\u9ed8\u8ba4\uff09\u65f6\u89e6\u53d1\u81ea\u52a8\u56de\u5377\uff0c\u671f\u95f4\u4f1a\u5927\u91cf\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u63d0\u524d\u505a\u597d\u76d1\u63a7\u907f\u514d\u5728\u4e1a\u52a1\u9ad8\u5cf0\u65f6\u53d1\u751f\u3002\u53ef\u5728\u5e93\u7ea7\u522b\u64cd\u4f5c\uff0c\u4e5f\u53ef\u5728\u8868\u57fa\u672c\u64cd\u4f5c\u3002\n\nVACUUM ANALYZE VERBOSE ;\n</code></pre>"},{"location":"postgres/monitor_explain/#_3","title":"\u5783\u573e\u56de\u6536","text":"<pre><code>-- \u8868\u7a7a\u95f4\u81a8\u80c0\u7387, \u6b7b\u5143\u7ec4\nselect relname,size,ratio from monitor.pg_table_bloat;\n</code></pre> <p>\u89c6\u56fe\u5b9a\u4e49 -\u89c1</p> <pre><code>-- \u5783\u573e\u56de\u6536\u5f00\u59cb\u65f6\u95f4\u7ed3\u675f\u65f6\u95f4 \u8fdb\u7a0b\u6570\n\n</code></pre>"},{"location":"postgres/monitor_explain/#wal","title":"WAL","text":"<pre><code>--- \u8fc7\u53bb5\u5206\u949f\u5185\u751f\u6210wal\u4e2a\u6570\nselect count(1) from pg_catalog.pg_ls_waldir() where modification &gt; CURRENT_TIMESTAMP - '5 minutes' :: INTERVAL ;\n\n--- wal\u5199\u5165\u901f\u7387\nSELECT CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - '0/0' as wal_lsn;\n</code></pre>"},{"location":"postgres/monitor_explain/#checkpoint","title":"CheckPoint","text":"<pre><code>-- checkpoint  \u53d1\u751f\u9891\u7387\n</code></pre>"},{"location":"postgres/monitor_explain/#_4","title":"\u8fde\u63a5\u6570","text":""},{"location":"postgres/monitor_explain/#_5","title":"\u957f\u4e8b\u7269","text":"<pre><code>pg_stat_activity &gt; 2\u5c0f\u65f6\n</code></pre>"},{"location":"postgres/monitor_explain/#2pc","title":"2pc \u672a\u63d0\u4ea4\u4e8b\u7269","text":"<pre><code>pg_prepared_xact() &gt; 5 \u5206\u949f\n</code></pre>"},{"location":"postgres/monitor_explain/#_6","title":"\u590d\u5236\u69fd","text":""},{"location":"postgres/monitor_explain/#_7","title":"\u4e3b\u4ece","text":"<pre><code>-- \u4e3b\u4ece\u6d41\u590d\u5236\u5ef6\u65f6\u65f6\u95f4 \uff08\u4ece\u5e93\u6267\u884c\uff09\n10 \u7248\u672c\u4ee5\u524d\nSELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location() THEN 0 ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp()) END\n\n10 \u7248\u672c\u53ca\u4ee5\u540e\n\nSELECT CASE WHEN pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0 ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp()) END;\n</code></pre> <pre><code>-- \u4e3b\u4ece\u590d\u5236\u5ef6\u8fdf\u5b57\u8282 (\u4e3b\u5e93\u6267\u884c)\n\nselect greatest(0,pg_wal_lsn_diff(pg_current_wal_lsn(), replay_lsn)) from pg_stat_replication ; where client_addr = '\u4ece\u5e93IP'\n</code></pre>"},{"location":"postgres/normal-form/","title":"\u6570\u636e\u5e93\u4e09\u8303\u5f0f\u4e94\u7ea6\u675f","text":""},{"location":"postgres/normal-form/#_1","title":"\u4e09\u8303\u5f0f","text":"<ul> <li>\u7b2c\u4e00\u8303\u5f0f\uff1a\u6570\u636e\u8868\u4e2d\u7684\u6bcf\u4e00\u5217\uff08\u6bcf\u4e2a\u5b57\u6bb5\uff09\u5fc5\u987b\u662f\u4e0d\u53ef\u62c6\u5206\u7684\u6700\u5c0f\u5355\u5143\uff0c\u4e5f\u5c31\u662f\u786e\u4fdd\u6bcf\u4e00\u5217\u7684\u539f\u5b50\u6027\uff1b</li> <li>\u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\uff1a\u6ee1\u8db31NF\u540e\uff0c\u8981\u6c42\u8868\u4e2d\u7684\u6240\u6709\u5217\uff0c\u90fd\u5fc5\u987b\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c\u800c\u4e0d\u80fd\u6709\u4efb\u4f55\u4e00\u5217\u4e0e\u4e3b\u952e\u6ca1\u6709\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u8868\u53ea\u63cf\u8ff0\u4e00\u4ef6\u4e8b\u60c5\uff1b</li> <li>\u7b2c\u4e09\u8303\u5f0f\uff1a\u5fc5\u987b\u5148\u6ee1\u8db3\u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\uff0c\u8981\u6c42\uff1a\u8868\u4e2d\u7684\u6bcf\u4e00\u5217\u53ea\u4e0e\u4e3b\u952e\u76f4\u63a5\u76f8\u5173\u800c\u4e0d\u662f\u95f4\u63a5\u76f8\u5173\uff0c\uff08\u8868\u4e2d\u7684\u6bcf\u4e00\u5217\u53ea\u80fd\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff09\uff1b</li> </ul> <pre><code>-- 1NF \u7b2c\u4e00\u8303\u5f0f\n\n\u5b57\u6bb5\u4e0d\u80fd\u518d\u5206\uff0c\u5c31\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\u3002\n\n-- 2NF \u7b2c\u4e8c\u8303\u5f0f\n\n\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\u7684\u524d\u63d0\u4e0b\uff0c\u4e0d\u80fd\u51fa\u73b0\u90e8\u5206\u4f9d\u8d56\u3002\n\n\u6d88\u9664\u8054\u5408\u4e3b\u952e\u53ef\u4ee5\u907f\u514d\u90e8\u5206\u4f9d\u8d56\u3002\u589e\u52a0\u5355\u5217\u5173\u952e\u5b57\u3002\n\n-- 3NF \u7b2c\u4e09\u8303\u5f0f\n\n\u6ee1\u8db3\u7b2c\u4e8c\u8303\u5f0f\u7684\u524d\u63d0\u4e0b\uff0c\u4e0d\u80fd\u51fa\u73b0\u4f20\u9012\u4f9d\u8d56\u3002\n\n\u67d0\u4e2a\u5b57\u6bb5\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c\u800c\u6709\u5176\u4ed6\u5b57\u6bb5\u4f9d\u8d56\u4e8e\u8be5\u5b57\u6bb5\u3002\u8fd9\u5c31\u662f\u4f20\u9012\u4f9d\u8d56\u3002\n\n\u5c06\u4e00\u4e2a\u5b9e\u4f53\u4fe1\u606f\u7684\u6570\u636e\u653e\u5728\u4e00\u4e2a\u8868\u5185\u5b9e\u73b0\u3002\n</code></pre> <p>\u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\u548c\u7b2c\u4e09\u8303\u5f0f\uff083NF\uff09\u7684\u6982\u5ff5\u5f88\u5bb9\u6613\u6df7\u6dc6\uff0c\u533a\u5206\u5b83\u4eec\u7684\u5173\u952e\u70b9\u5728\u4e8e\uff0c2NF\uff1a\u975e\u4e3b\u952e\u5217\u662f\u5426\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c\u8fd8\u662f\u4f9d\u8d56\u4e8e\u4e3b\u952e\u7684\u4e00\u90e8\u5206\uff1b3NF\uff1a\u975e\u4e3b\u952e\u5217\u662f\u76f4\u63a5\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c\u8fd8\u662f\u76f4\u63a5\u4f9d\u8d56\u4e8e\u975e\u4e3b\u952e\u5217\u3002</p> <p>\u4e3e\u4f8b\u8bf4\u660e\uff1a</p> <p>\u5173\u7cfb\u8868\uff08A\uff0cB\uff0cC\uff0cD\uff09\u4e2dA\uff0cB\u662f\u5019\u9009\u952e\uff0c\u90a3\u4e48\uff1a\uff08A\uff0cB\uff09\u2192 C \uff08A\uff0cB\uff09\u2192 D</p> <p>2NF : \u4e0d\u80fd\u5b58\u5728\u975e\u4e3b\u5c5e\u6027\u90e8\u5206\u4f9d\u8d56\u4e3b\u952e \u5982: B \u2192 C \u6216 A \u2192 C \u7b49\u3002\u5f53\u4e3b\u952e\u4e3a\u591a\u503c\u8054\u5408\u4e3b\u952e\u65f6\u53ef\u80fd\u4f1a\u5b58\u5728\u8fdd\u53cd2NF</p> <p>3NF : \u4e0d\u80fd\u5b58\u5728\u975e\u4e3b\u5c5e\u6027\u4e4b\u95f4\u7684\u4f20\u9012\u4f9d\u8d56 \u5982: C \u2192 D \u6216 D \u2192 C</p> <p>BCNF : \u4e0d\u80fd\u5b58\u5728\u4e3b\u5c5e\u6027\u4e4b\u95f4\u7684\u4f20\u9012\u4f9d\u8d56 \u5982 : A \u2192 B \u6216 B \u2192 A</p>"},{"location":"postgres/normal-form/#_2","title":"\u4e94\u7ea6\u675f","text":"<ul> <li>primary KEY:\u8bbe\u7f6e\u4e3b\u952e\u7ea6\u675f\uff1b</li> <li>UNIQUE\uff1a\u8bbe\u7f6e\u552f\u4e00\u6027\u7ea6\u675f\uff0c\u4e0d\u80fd\u6709\u91cd\u590d\u503c\uff1b</li> <li>DEFAULT \u9ed8\u8ba4\u503c\u7ea6\u675f</li> <li>NOT NULL\uff1a\u8bbe\u7f6e\u975e\u7a7a\u7ea6\u675f\uff0c\u8be5\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\uff1b</li> <li>FOREIGN key :\u8bbe\u7f6e\u5916\u952e\u7ea6\u675f\u3002</li> </ul>"},{"location":"postgres/oom/","title":"\u6570\u636e\u5e93 OOM \u9884\u9632","text":"","tags":[]},{"location":"postgres/oom/#oom-kill","title":"\u964d\u4f4e\u4e3b\u8fdb\u7a0b\u88abOOM kill \u6389\u7684\u98ce\u9669","text":"","tags":[]},{"location":"postgres/oom/#restart_after_crash","title":"restart_after_crash","text":"<p>\u9ed8\u8ba4\u5d29\u6e83\u91cd\u542f</p> <pre><code>postgres=# show restart_after_crash;\n restart_after_crash \n---------------------\n on\n(1 row)\n\n</code></pre>","tags":[]},{"location":"postgres/oom/#vmovercommit","title":"vm.overcommit","text":"<pre><code># vi /etc/sysctl.conf\n\n# 0 \u8868\u793a\u5185\u6838\u5c06\u68c0\u67e5\u662f\u5426\u6709\u8db3\u591f\u7684\u53ef\u7528\u5185\u5b58\u4f9b\u5e94\u7528\u8fdb\u7a0b\u4f7f\u7528\uff1b\u5982\u679c\u6709\u8db3\u591f\u7684\u53ef\u7528\u5185\u5b58\uff0c\u5185\u5b58\u7533\u8bf7\u5141\u8bb8\uff1b\u5426\u5219\uff0c\u5185\u5b58\u7533\u8bf7\u5931\u8d25\uff0c\u5e76\u628a\u9519\u8bef\u8fd4\u56de\u7ed9\u5e94\u7528\u8fdb\u7a0b \n# 1 \u8868\u793a\u5185\u6838\u5141\u8bb8\u5206\u914d\u6240\u6709\u7684\u7269\u7406\u5185\u5b58\uff0c\u800c\u4e0d\u7ba1\u5f53\u524d\u7684\u5185\u5b58\u72b6\u6001\u5982\u4f55 \n# 2 \u8868\u793a\u5185\u6838\u5141\u8bb8\u5206\u914d\u8d85\u8fc7\u6240\u6709\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u603b\u548c\u7684\u5185\u5b58\nvm.overcommit_memory = 2\nvm.overcommit_ratio = 90 # overcommit_memory= 2 \u65f6\u751f\u6548\nvm.swappiness = 1 # \u4ea4\u6362\u5206\u533a\n\n# sysctl -p\n</code></pre>","tags":[]},{"location":"postgres/oom/#oom_score_adj","title":"oom_score_adj","text":"<p>oom_score_adj \u7684\u53d6\u503c\u8303\u56f4\u4e3a -1000 \u5230 1000\uff0c\u503c\u8d8a\u5927\uff0c\u88abos\u5e72\u6389\u7684\u98ce\u9669\u8d8a\u5927\u3002</p> <p>\u542f\u52a8\u524d\u8bbe\u7f6e</p> <pre><code>#vi /usr/lib/systemd/system/postgresql-10.service\n# Disable OOM kill on the postmaster\nOOMScoreAdjust=-1000\nEnvironment=PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj\nEnvironment=PG_OOM_ADJUST_VALUE=0\n</code></pre> <p>\u542f\u52a8\u540e\u8bbe\u7f6e</p> <pre><code>Pid=`head -n 1 /PATH/TO/postmaster.pid` &amp;&amp; echo -1000 &gt; /proc/$Pid/oom_score_adj\n</code></pre>","tags":[]},{"location":"postgres/oom/#numa","title":"NUMA","text":"","tags":[]},{"location":"postgres/params/","title":"\u6570\u636e\u5e93\u53c2\u6570","text":"","tags":[]},{"location":"postgres/params/#_1","title":"\u6027\u80fd\u53c2\u6570","text":"<p>pgtune pgconfig cybertec </p>","tags":[]},{"location":"postgres/params/#_2","title":"\u65e5\u5fd7\u53c2\u6570","text":"","tags":[]},{"location":"postgres/params/#_3","title":"\u66f4\u591a\u53c2\u6570\u8be6\u89e3","text":"","tags":[]},{"location":"postgres/params/#_4","title":"\u7ba1\u7406","text":"<pre><code>listen_addresses = \"*\"             # \u8fde\u63a5\u8bbf\u95ee\u63a7\u5236\uff0c\u54ea\u4e9bip\u53ef\u4ee5\u8bbf\u95ee\uff0c * \u5168\u90e8\u3002 \u7ed3\u5408pg_hba.conf , iptables\u8bbe\u7f6e\u3002\nsuperuser_reserved_connections = 3 # \u9884\u7559\u7ed9\u8d85\u7ea7\u7ba1\u7406\u5458\u7684\u8fde\u63a5\u6570\u3002\nport = 5432                        # \u9ed8\u8ba4\u8bbf\u95ee\u7aef\u53e3\nwal_keep_segments = 1024           # wal \u65e5\u5fd7\u4fdd\u5b58\u6570\u91cf\n</code></pre>","tags":[]},{"location":"postgres/params/#wal","title":"wal\u65e5\u5fd7","text":"<pre><code>wal_log_hints = on \nfull_page_writes = on\n</code></pre>","tags":[]},{"location":"postgres/params/#_5","title":"\u6210\u672c\u56e0\u5b50","text":"<pre><code># - Planner Cost Constants -\n#seq_page_cost = 1.0                    # measured on an arbitrary scale \u987a\u5e8f\u626b\u63cf\nrandom_page_cost = 1.1                  # same scale as above            \u968f\u673a\u626b\u63cf\u3002HDD 4 ;SSD 1.1; \u7531\u4e8eSSD\u6ca1\u6709\u78c1\u76d8\u5bfb\u9053\u65f6\u95f4\uff0c\u987a\u5e8f\u626b\u63cf\u548c\u968f\u673a\u626b\u63cf\u7684\u5dee\u8ddd\u4e0d\u662f\u90a3\u4e48\u5927\u3002\u6bd4\u4f8b\u8bbe\u7f6e\u7684\u76f8\u8fd1\u5373\u53ef\u3002 \n#cpu_tuple_cost = 0.01                  # same scale as above\n#cpu_index_tuple_cost = 0.005           # same scale as above\n#cpu_operator_cost = 0.0025             # same scale as above\n#parallel_tuple_cost = 0.1              # same scale as above\n#parallel_setup_cost = 1000.0   # same scale as above\n#min_parallel_table_scan_size = 8MB\n#min_parallel_index_scan_size = 512kB\neffective_cache_size = 666666          # \u7cfb\u7edf\u603b\u5185\u5b58\u51cf\u53bb\u6570\u636e\u5e93shared_buffer\u51cf\u53bb\u5176\u4ed6\u5e94\u7528\u5360\u6709\u7684\u5185\u5b58\u3002 \u7406\u89e3\u4e3a\u6570\u636e\u53ef\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u5927\u5c0f\u3002\n</code></pre>","tags":[]},{"location":"postgres/params/#tcp","title":"TCP \u8fde\u63a5","text":"<p>Linux \u4e2dtcp\u9ed8\u8ba4\u8fde\u63a5\u8d85\u65f6\u65f6\u95f42\u5c0f\u65f6,\u5982\u679c2\u4e2a\u5c0f\u65f6\u6ca1\u6709\u6570\u636e\u5305\u5219\u8ba4\u4e3a\u8be5\u8fde\u63a5\u4e3a\u7a7a\u95f2\u72b6\u6001\uff0c\u7cfb\u7edf\u81ea\u52a8\u5173\u95ed\u3002</p> <pre><code># - TCP Keepalives -\n# see \"man 7 tcp\" for details\n\n#tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;\n                                        # 0 selects the system default\n#tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;  \u53d1\u4e2a\u5fc3\u8df3\u6570\u636e\u5305\uff0c\u544a\u8bc9\u7cfb\u7edf\u6211\u6ca1\u6709\u7a7a\u95f2\n                                        # 0 selects the system default\n#tcp_keepalives_count = 6               # TCP_KEEPCNT;\n                                        # 0 selects the system default\n</code></pre>","tags":[]},{"location":"postgres/params/#checkpoint","title":"\u68c0\u67e5\u70b9checkpoint","text":"<p>\u5177\u4f53\u6839\u636e\u78c1\u76d8\u7684\u541e\u5410\u91cf\u8fdb\u884c\u8bbe\u7f6e https://yq.aliyun.com/articles/582847</p> <pre><code>shared_buffers = 64GB                  # 1/4 \u5185\u5b58 \u5982\u679c\u4e0d\u4f7f\u7528huge page\u5efa\u8bae\u4e0d\u8981\u8d85\u8fc732GB   \ncheckpoint_timeout = 30min              # range 30s-1d  \nmax_wal_size = 124GB          # 2*shared_buffers  \nmin_wal_size = 32GB           # shared_buffers * 1/2  \ncheckpoint_completion_target = 0.9 \n</code></pre>","tags":[]},{"location":"postgres/params/#autovacuum","title":"\u5783\u573e\u56de\u6536autovacuum","text":"<pre><code>autovacuum_work_mem = -1 # autovacuum\u6240\u80fd\u4f7f\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u5f53\u5176\u4e3a-1\u65f6\uff0c\u4f7f\u7528maintenance_work_mem\u53c2\u6570\u7684\u503c\uff0c\u503c\u8d8a\u5927\uff0c\u4f7f\u7528\u7684\u5185\u5b58\u8d8a\u591a\nautovacuum = on # \u662f\u5426\u6253\u5f00autovacuum\nautovacuum_max_workers =3 # \u6700\u591a\u80fd\u591f\u6709\u591a\u5c11\u4e2aautovaccum\u8fdb\u7a0b\u8fd0\u884c\uff0c\u503c\u8d8a\u5927\uff0c\u4f7f\u7528\u7684\u5185\u5b58\u8d8a\u591a\nautovacuum_naptime = 1min  # autovacuum\u8fdb\u7a0b\u95f4\u9694\u591a\u957f\u65f6\u95f4\u5bf9\u8868\u8fdb\u884c\u662f\u5426\u9700\u8981autovacuum\u64cd\u4f5c\nautovacuum_vacuum_threshold = 50 # \u5f53\u8868\u4e0adml\u64cd\u4f5c\u8fbe\u5230\u591a\u5c11\u884c\u65f6\u6267\u884cautovacuum\u64cd\u4f5c\nautovacuum_analyze_threshold = 50  # \u5f53\u8868\u4e0adml\u64cd\u4f5c\u8fbe\u5230\u591a\u5c11\u884c\u65f6\u6267\u884cautovacuum analyze\u64cd\u4f5c\nautovacuum_vacuum_scale_factor = 0.2 # \u5f53\u8868\u4e0adml\u64cd\u4f5c\u8fbe\u5230\u591a\u5c11\u6bd4\u4f8b\u65f6\u6267\u884cautovacuum\u64cd\u4f5c\nautovacuum_analyze_scale_factor = 0.1  # \u5f53\u8868\u4e0adml\u64cd\u4f5c\u8fbe\u5230\u591a\u5c11\u6bd4\u4f8b\u65f6\u6267\u884cautovacuum analyze\u64cd\u4f5c\nautovacuum_vacuum_cost_limit = -1  # autovacuum \u7684cost\u8d85\u8fc7\u6b64\u503c\u65f6\uff0cvacuum\u4f1asleep\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f7f\u7528vacuum_cost_limit\u53c2\u6570\u7684\u503c\uff0c\u503c\u8d8a\u5927\u5bf9\u7cfb\u7edfIO\u538b\u529b\u8d8a\u5927\n</code></pre>","tags":[]},{"location":"postgres/params/#_6","title":"\u5e76\u884c\u8ba1\u7b97","text":"<pre><code>1. \u63a7\u5236\u6574\u4e2a\u6570\u636e\u5e93\u96c6\u7fa4\u540c\u65f6\u80fd\u5f00\u542f\u591a\u5c11\u4e2awork process\uff0c\u5fc5\u987b\u8bbe\u7f6e\u3002\nmax_worker_processes = 128              # (change requires restart)  \n\n2. \u63a7\u5236\u4e00\u4e2a\u5e76\u884c\u7684EXEC NODE\u6700\u591a\u80fd\u5f00\u542f\u591a\u5c11\u4e2a\u5e76\u884c\u5904\u7406\u5355\u5143\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u53c2\u8003\u8868\u7ea7\u53c2\u6570parallel_workers\uff0c\u6216\u8005PG\u5185\u6838\u5185\u7f6e\u7684\u7b97\u6cd5\uff0c\u6839\u636e\u8868\u7684\u5927\u5c0f\u8ba1\u7b97\u9700\u8981\u5f00\u542f\u591a\u5c11\u548c\u5e76\u884c\u5904\u7406\u5355\u5143\u3002  \n\u5b9e\u9645\u53d6\u5c0f\u7684\u3002\nmax_parallel_workers_per_gather = 16    # taken from max_worker_processes\n\n3. \u8ba1\u7b97\u5e76\u884c\u5904\u7406\u7684\u6210\u672c\uff0c\u5982\u679c\u6210\u672c\u9ad8\u4e8e\u975e\u5e76\u884c\uff0c\u5219\u4e0d\u4f1a\u5f00\u542f\u5e76\u884c\u5904\u7406\u3002\n#parallel_tuple_cost = 0.1              # same scale as above\n#parallel_setup_cost = 1000.0   # same scale as above\n\n4. \u5c0f\u4e8e\u8fd9\u4e2a\u503c\u7684\u8868\uff0c\u4e0d\u4f1a\u5f00\u542f\u5e76\u884c\u3002\n#min_parallel_relation_size = 8MB\n\n5. \u544a\u8bc9\u4f18\u5316\u5668\uff0c\u5f3a\u5236\u5f00\u542f\u5e76\u884c\u3002\n#force_parallel_mode = off\n\n6. \u8868\u7ea7\u53c2\u6570\uff0c\u4e0d\u901a\u8fc7\u8868\u7684\u5927\u5c0f\u8ba1\u7b97\u5e76\u884c\u5ea6\uff0c\u800c\u662f\u76f4\u63a5\u544a\u8bc9\u4f18\u5316\u5668\u8fd9\u4e2a\u8868\u9700\u8981\u5f00\u542f\u591a\u5c11\u4e2a\u5e76\u884c\u8ba1\u7b97\u5355\u5143\u3002\nparallel_workers (integer)\n\nalter table t_table set(parallel_workers = 4)\n</code></pre>","tags":[]},{"location":"postgres/params/#synchronous_commit","title":"\u540c\u6b65\u63d0\u4ea4synchronous_commit","text":"<p>\u540c\u6b65\u63d0\u4ea4\u53c2\u6570, \u63a7\u5236\u4e8b\u52a1\u63d0\u4ea4\u540e\u8fd4\u56de\u5ba2\u6237\u7aef\u662f\u5426\u6210\u529f\u7684\u7b56\u7565  \u53ef\u9009\u503c\u4e3a:on, remote_write, local, off</p> <p>on</p> <pre><code>1 \u4e3aon\u4e14\u6ca1\u6709\u5f00\u542f\u540c\u6b65\u5907\u5e93\u7684\u65f6\u5019,\u4f1a\u5f53wal\u65e5\u5fd7\u771f\u6b63\u5237\u65b0\u5230\u78c1\u76d8\u6c38\u4e45\u5b58\u50a8\u540e\u624d\u4f1a\u8fd4\u56de\u5ba2\u6237\u7aef\u4e8b\u52a1\u5df2\u63d0\u4ea4\u6210\u529f, \n2 \u5f53\u4e3aon\u4e14\u5f00\u542f\u4e86\u540c\u6b65\u5907\u5e93\u7684\u65f6\u5019(\u8bbe\u7f6e\u4e86synchronous_standby_names),\u5fc5\u987b\u8981\u7b49\u4e8b\u52a1\u65e5\u5fd7\u5237\u65b0\u5230\u672c\u5730\u78c1\u76d8,\u5e76\u4e14\u8fd8\u8981\u7b49\u8fdc\u7a0b\u5907\u5e93\u4e5f\u63d0\u4ea4\u5230\u78c1\u76d8\u624d\u80fd\u8fd4\u56de\u5ba2\u6237\u7aef\u5df2\u7ecf\u63d0\u4ea4.\n</code></pre> <p>off</p> <pre><code>\u5199\u5230\u7f13\u5b58\u4e2d\u5c31\u4f1a\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u63d0\u4ea4\u6210\u529f\uff0c\u4f46\u4e5f\u4e0d\u662f\u4e00\u76f4\u4e0d\u5237\u5230\u78c1\u76d8\uff0c\u5ef6\u8fdf\u5199\u5165\u78c1\u76d8,\u5ef6\u8fdf\u7684\u65f6\u95f4\u4e3a\u6700\u59273\u500d\u7684wal_writer_delay\u53c2\u6570\u7684(\u9ed8\u8ba4200ms)\u7684\u65f6\u95f4,\u6240\u6709\u5982\u679c\u5373\u4f7f\u5173\u95edsynchronous_commit,\n\u4e5f\u53ea\u4f1a\u9020\u6210\u6700\u591a600ms\u7684\u4e8b\u52a1\u4e22\u5931,\u6b64\u4e8b\u52a1\u751a\u81f3\u5305\u62ec\u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1\uff08\u4f1a\u4e22\u6570\u636e\uff09,\u4f46\u6570\u636e\u5e93\u786e\u53ef\u4ee5\u5b89\u5168\u542f\u52a8,\u4e0d\u4f1a\u53d1\u751f\u5757\u6298\u65ad,\u53ea\u662f\u4e22\u5931\u4e86\u90e8\u5206\u6570\u636e,\u4f46\u5bf9\u9ad8\u5e76\u53d1\u7684\u5c0f\u4e8b\u52a1\u7cfb\u7edf\u6765\u8bf4,\u6027\u80fd\u6765\u8bf4\u63d0\u5347\u8f83\u5927\u3002\n</code></pre> <p>remote_write</p> <pre><code>\u5f53\u4e8b\u52a1\u63d0\u4ea4\u65f6,\u4e0d\u4ec5\u8981\u628awal\u5237\u65b0\u5230\u78c1\u76d8,\u8fd8\u9700\u8981\u7b49wal\u65e5\u5fd7\u53d1\u9001\u5230\u5907\u5e93\u64cd\u4f5c\u7cfb\u7edf(\u4f46\u4e0d\u7528\u7b49\u5907\u5e93\u5237\u65b0\u5230\u78c1\u76d8),\u56e0\u6b64\u5982\u679c\u5907\u5e93\u6b64\u65f6\u53d1\u751f\u5b9e\u4f8b\u4e2d\u65ad\u4e0d\u4f1a\u6709\u6570\u636e\u4e22\u5931,\u56e0\u4e3a\u6570\u636e\u8fd8\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a,\n\u800c\u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u6545\u969c,\u5219\u6b64\u90e8\u5206wal\u65e5\u5fd7\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u5199\u5165\u78c1\u76d8\u5c31\u4f1a\u4e22\u5931,\u5907\u5e93\u542f\u52a8\u540e\u8fd8\u9700\u8981\u60f3\u4e3b\u5e93\u7d22\u53d6wal\u65e5\u5fd7\u3002\n</code></pre> <p>local</p> <pre><code>\u5f53\u4e8b\u52a1\u63d0\u4ea4\u65f6,\u4ec5\u5199\u5165\u672c\u5730\u78c1\u76d8\u5373\u53ef\u8fd4\u56de\u5ba2\u6237\u7aef\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f,\u800c\u4e0d\u7ba1\u662f\u5426\u6709\u540c\u6b65\u5907\u5e93\n\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u540c\u6b65\u5907\u5e93,\u5219 on/remote_write/local\u90fd\u662f\u4e00\u6837\u7684,\u4ec5\u7b49\u5f85\u4e8b\u52a1\u5237\u65b0\u5230\u672c\u5730\u78c1\u76d8.\n</code></pre> <p>\u6b64\u53c2\u6570\u8fd8\u53ef\u4ee5\u5c40\u90e8\u8bbe\u7f6e,\u5f53\u6709\u4e34\u65f6\u6279\u91cf\u4efb\u52a1\u65f6\u53ef\u4ee5\u8fd9\u6837\u8bbe\u7f6e: </p> <pre><code>SET LOCAL synchronous_commit TO OFF; \n</code></pre> <p>\u8fd9\u6837\u5c40\u90e8\u4e8b\u52a1\u53ef\u5411\u5907\u5e93\u5f02\u6b65\u7684\u65b9\u5f0f\u540c\u6b65\uff0c\u800c\u5176\u4ed6\u91cd\u8981\u7684\u4e8b\u52a1\u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u5411\u5907\u5e93\u540c\u6b65\u3002</p>","tags":[]},{"location":"postgres/params/#_7","title":"\u4fee\u6539","text":"<pre><code>postgresql.conf \u670d\u52a1\u5668\u542f\u52a8\u65f6\u9ed8\u8ba4\u8bfb\u53d6\u7684\u914d\u7f6e\n\npostgresql.auto.conf \u4f18\u5148\u7ea7\u9ad8\u4e8epostgresql.conf 9.4\u540e\u5f15\u5165,\u5bf9\u6807oracle sfile pfile \u3002\u3000\u6587\u4ef6\u4e0d\u80fd\u4fee\u6539,\u9700\u8981\u901a\u8fc7ALTER SYSTE\u3000\u4fee\u6539\uff0cALTER SYSTE\u3000RESET | DEFAULT \u5220\u9664\n</code></pre>","tags":[]},{"location":"postgres/params/#_8","title":"\u7b56\u7565","text":"<pre><code>postgresql.conf \u53c2\u6570\u4e3a\u9ed8\u8ba4\u503c,\u4e0d\u505a\u4fee\u6539\uff0c\u4f18\u5316\u53c2\u6570\u901a\u8fc7\u3000postgresql.auto.conf \u4fee\u6539\uff0c\u4e00\u76ee\u4e86\u7136\u3002(\u4e2a\u4eba\u4e60\u60ef)\n</code></pre>","tags":[]},{"location":"postgres/params/#_9","title":"\u67e5\u770b","text":"<pre><code>SELECT name,setting,vartype,boot_val,min_val,max_val,reset_val FROM pg_settings;\n\nshow all;\n</code></pre>","tags":[]},{"location":"postgres/params/#work_mem","title":"work_mem","text":"<p>\u8fd9\u4e9b\u5185\u5b58\u5927\u5c0f\u88ab\u7528\u6765\u5b8c\u6210\u5185\u90e8\u6392\u5e8f\u4e0e\u54c8\u5e0c\u8868\u64cd\u4f5c\u3002 \u5982\u679c\u672a\u5206\u914d\u8db3\u591f\u5185\u5b58\uff0c\u4f1a\u5bfc\u81f4\u7269\u7406I/O\u3002 work_mem\u8fd9\u4e2a\u503c\u662f\u9488\u5bf9\u6bcf\u4e2asession\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u8bbe\u7f6e\u7684\u8fc7\u5927\u3002</p>","tags":[]},{"location":"postgres/params/#_10","title":"\u5b9e\u9a8c","text":"<pre><code>\u521b\u5efa\u6d4b\u8bd5\u8868\npostgres=# create table myt (id serial);  \nCREATE TABLE\n\n\u63d2\u5165\u6d4b\u8bd5\u6570\u636e  \npostgres=# insert into myt select generate_series(1,1000000);  \nINSERT 0 1000000  \n\n\u8bbe\u7f6e\u5f53\u524dsession work_mem\n\npostgres=#set work_me '64kb';\nSET  \npostgres=# show work_mem;  \n work_mem  \n----------  \n 64kB  \n(1 row)\n\n\u67e5\u770b\u4e34\u65f6\u6587\u4ef6\u5360\u7528\u60c5\u51b5\nselect temp_files, temp_bytes from pg_stat_database\n temp_files | temp_bytes  \n------------+------------  \n          0 |          0  \n(1 row)  \n\n\u6267\u884c\u6d4b\u8bd5\nselect * from (select * from myt order by id) t limit 1000; \n\n\u518d\u6b21\u67e5\u770b\u4e34\u65f6\u6587\u4ef6\u5360\u7528\u60c5\u51b5\nselect temp_files, temp_bytes from pg_stat_database\n temp_files | temp_bytes\n------------+------------\n          1 |   14016512 \n(1 row)\n\n\u8bbe\u7f6e\u5f53\u524dsession work_mem\n\npostgres=#set work_mem = '16MB';  \nSET\n\n\u6267\u884c\u6d4b\u8bd5\nselect * from (select * from myt order by id) t limit 1000;\n\n\u518d\u6b21\u67e5\u770b\u4e34\u65f6\u6587\u4ef6\u5360\u7528\u60c5\u51b5\nselect temp_files, temp_bytes from pg_stat_database\n temp_files | temp_bytes\n------------+------------\n          1 |   14016512\n</code></pre> <p>\u6ca1\u6709\u65b0\u589e\u4e34\u65f6\u6587\u4ef6 , \u8bf4\u660ework_mem\u5145\u8db3</p>","tags":[]},{"location":"postgres/params/#maintainance_work_mem","title":"maintainance_work_mem","text":"<p>\u4e3b\u8981\u7528\u4e8eanalyzing\uff0cvacuum\uff0ccreate index, reindex\u7b49\u3002</p> <p>\u5982\u9700\u8fdb\u884c\u5982\u4e0a\u64cd\u4f5c\u65f6\u8bf7\u9002\u5f53\u8c03\u6574maintainance_work_mem \u503c\uff0c\u63d0\u9ad8\u6548\u7387</p>","tags":[]},{"location":"postgres/params/#_11","title":"\u5b9e\u9a8c","text":"<p>\u65b9\u6cd5\u4e0e\u4e0a\u9762\u7c7b\u4f3c\uff0c\u5728\u7edf\u8ba1\u8868\u4e2d\u89c2\u5bdf\u4e34\u65f6\u6587\u4ef6\u4f7f\u7528\u60c5\u51b5\u3002</p>","tags":[]},{"location":"postgres/partition/","title":"\u539f\u751f\u5206\u533a\u8868","text":""},{"location":"postgres/partition/#_1","title":"\u5206\u533a\u8868","text":"<p>\u6570\u636e\u5e93\u5206\u533a\u662f\u4e00\u79cd\u5c06\u6570\u636e\u505a\u7269\u7406\u5206\u7247\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u6280\u672f\uff0c\u867d\u7136\u5206\u533a\u6280\u672f\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c</p> <p>\u4f46\u5176\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u5728\u7279\u5b9a\u7684SQL\u64cd\u4f5c\u4e2d\u51cf\u5c11\u6570\u636e\u8bfb\u53d6\u7684\u603b\u91cf\u4ee5\u7f29\u51cf\u54cd\u5e94\u65f6\u95f4\u3002</p> <p>\u4f7f\u7528\u5206\u533a\u8868\u5bf9\u5e94\u7528\u7a0b\u5e8f\u662f\u900f\u660e\u7684\uff0c\u5bf9\u4e8eINSERT,UPDATE,DELETE,SELECT\u64cd\u4f5c\uff0c\u90fd\u53ea\u9700\u8981\u5bf9\u7236\u8868tbl\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u64cd\u4f5c\u54ea\u4e00\u5f20\u5b50\u8868\u3002</p>"},{"location":"postgres/partition/#_2","title":"\u5206\u533a\u65b9\u5f0f","text":"<ul> <li>\u6c34\u5e73\u5206\u533a  </li> </ul> <p>\u6bd4\u5982\u6309\u7167\u65f6\u95f4\u7ef4\u5ea6\u8fdb\u884c\u5212\u5206\uff0c\u8ba2\u5355\u65f6\u95f4\u3002  </p> <p>\u6c34\u5e73\u5206\u533a\u5212\u5206\u65b9\u5f0f HASH , LIST , RANGE   </p> <ul> <li>\u5782\u76f4\u5206\u533a</li> </ul> <p>\u8303\u5f0f\u89c4\u8303 \uff1a \u8ba2\u5355\u6570\u636e \uff08\u5ba2\u6237\u8868\uff0c\u5546\u54c1\u8868\uff0c\u8ba2\u5355\u8868\uff09</p>"},{"location":"postgres/partition/#_3","title":"\u4f18\u70b9","text":"<ul> <li>\u6027\u80fd\u63d0\u5347\u3002\u9488\u5bf9\u5177\u4f53\u8303\u56f4\u67e5\u8be2\u6216\u70b9\u67e5\u8be2\u3002</li> <li>\u6570\u636e\u7ba1\u7406\u3002 \u5f52\u6863\uff0c\u5220\u9664\u3002\u7279\u522b\u662f\u4ee5\u4e00\u4e2a\u5206\u533a\u505a\u4e3a\u64cd\u4f5c\u5355\u5143\u3002</li> <li>\u6570\u636e\u5e93\u7ba1\u7406\u3002\u7edf\u8ba1\u4fe1\u606f\uff0cvacuum, repack \u64cd\u4f5c\u7b49</li> </ul>"},{"location":"postgres/partition/#_4","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u5206\u533a\u952e\u9009\u53d6\uff0c\u5982\u8868\u5355\u7684\u521b\u5efa\u65f6\u95f4\u3002</li> <li>\u5206\u533a\u5927\u5c0f\u7684\u5212\u5206\u3002\u4e00\u4e2a\u8868\u591a\u5927\u65f6\u5f00\u59cb\u8003\u8651\u5206\u533a\u3002\u4e00\u4e2a\u5206\u533a\u591a\u5927\u6bd4\u8f83\u5408\u9002\u3002\uff08\u7efc\u5408\u5177\u4f53\u4e1a\u52a1\uff09</li> <li>\u5206\u533a\u8868\u6570\u91cf\u63a7\u5236\u3002\u8fc7\u591a\u7684\u5206\u533a\u8868\u53ef\u80fd\u662f\u4e00\u79cd\u707e\u96be\u3002\u53ef\u4ee5\u8003\u8651\u5408\u5e76\u5206\u533a\uff0c\u5f52\u6863\u6570\u636e\u3002</li> <li>\u9ed8\u8ba4\u5206\u533a</li> <li>\u8868\u7ed3\u6784\u66f4\u6539\u5bf9\u73b0\u6709\u8868\u7ed3\u6784\u7684\u5f71\u54cd\u3002\u66f4\u65b0\u7236\u8868\u7ed3\u6784\u5bf9\u5df2\u6709\u5b50\u8868\u7ed3\u6784\u7684\u5f71\u54cd\u3002</li> <li>\u7d22\u5f15\u64cd\u4f5c\uff0c\u5bf9\u5b50\u8868\u65e0\u6548</li> <li>\u5206\u533a\u952e\u66f4\u65b0</li> <li>\u4e3b\u952e\uff0c\u552f\u4e00\u952e\u7ea6\u675f\u3002 \u5168\u5c40\u8fd8\u662f\u5b50\u8868\u6709\u6548\u3002(\u552f\u4e00\u952e+\u5206\u533a\u952e),\u4e3b\u8868\u7684\u4e3b\u952e,\u552f\u4e00\u952e\u5fc5\u987b\u5305\u542b\u5206\u533a\u952e\u3002</li> <li>\u65b0\u5206\u533a\u521b\u5efa\u65b9\u5f0f\u3002\u6bd4\u5982\u6309\u7167\u6708\u5206\u533a\uff0c\u4e0b\u4e2a\u6708\u7684\u5b50\u8868\u662f\u624b\u52a8\u8fd8\u662f\u81ea\u52a8\u521b\u5efa\u3002\u81ea\u52a8\u521b\u5efa\u5bf9\u65b0\u63d2\u5165\u6570\u636e\u7684\u5206\u533a\u952e\u65f6\u95f4\u9700\u8981\u4e25\u683c\u9a8c\u8bc1\u3002</li> <li>enable_partition_pruning \u9700\u8981\u5f00\u542f</li> </ul>"},{"location":"postgres/partition/#_5","title":"\u4f7f\u7528\u9650\u5236","text":"<ul> <li>\u6ca1\u6709\u529e\u6cd5\u521b\u5efa\u8de8\u8d8a\u6240\u6709\u5206\u533a\u7684\u6392\u9664\u7ea6\u675f\uff0c\u53ea\u53ef\u80fd\u5355\u4e2a\u7ea6\u675f\u6bcf\u4e2a\u53f6\u5b50\u5206\u533a\u3002</li> <li>\u5206\u533a\u8868\u4e0a\u7684\u60df\u4e00\u7ea6\u675f\uff08\u4e5f\u5c31\u662f\u4e3b\u952e\uff09\u5fc5\u987b\u5305\u62ec\u6240\u6709\u5206\u533a\u952e\u5217\u3002\u5b58\u5728\u6b64\u9650\u5236\u662f\u56e0\u4e3aPostgreSQL\u53ea\u80fd\u6bcf\u4e2a\u5206\u533a\u4e2d\u5206\u522b\u5f3a\u5236\u5b9e\u65bd\u552f\u4e00\u6027\u3002 </li> </ul>"},{"location":"postgres/partition/#_6","title":"\u666e\u901a\u8868\u8f6c\u6362\u4e3a\u5206\u533a\u8868","text":"<ul> <li>pg \u7248\u672c &lt; 12 \u5229\u7528pathman \u53ef\u5728\u7ebf\u5e73\u6ed1\u8f6c\u6362</li> <li>pg \u7248\u672c &gt;=12 \u539f\u59cb\u65b9\u5f0f </li> </ul> <p>\u601d\u8def\uff1a</p> <p>1 \u65b0\u5efa\u4e00\u5f20\u7ed3\u6784\u5b8c\u5168\u76f8\u540c\u7684\u8868\uff0c</p> <p>2 \u5c06\u539f\u8868\u4f5c\u4e3a\u65b0\u8868\u5b50\u8868 </p> <p>3 \u4fee\u6539\u5bf9\u6362\u8868\u540d \uff08\u8fc7\u7a0b\u52a0\u9501\uff09</p>"},{"location":"postgres/partition/#_7","title":"\u5206\u533a\u8868\u793a\u4f8b","text":"<ul> <li>LIST \u5206\u533a</li> </ul> <pre><code>CREATE TABLE tbl_list(\n  id bigserial,\n  ival int,\n  cval char(1),\n  dval timestamp default now(),\n  primary key(id, ival)\n) partition by list(ival);\ncreate table tbl_list_0 partition of tbl_list for values in (0);\ncreate table tbl_list_1_2 partition of tbl_list for values in (1,2);\ncreate table tbl_list_default partition of tbl_list default;\n\n</code></pre> <ul> <li>RANGE \u5206\u533a</li> </ul> <pre><code>CREATE TABLE tbl_range(\n  id bigserial,\n  ival int,\n  cval char(1),\n  dval timestamp default now(),\n  primary key(id, dval)\n) partition by range(dval);\ncreate table tbl_range_202001 partition of tbl_range for values from ('2020-01-01 00:00:00') to ('2020-02-01 00:00:00');\ncreate table tbl_range_202002 partition of tbl_range for values from ('2020-02-01 00:00:00') to ('2020-03-01 00:00:00');\ncreate table tbl_range_default partition of tbl_range default;\n\n</code></pre> <ul> <li>HASH \u5206\u533a  \uff0c\u4e0d\u80fd\u5305\u542b\u9ed8\u8ba4\u5206\u533a</li> </ul> <pre><code>CREATE TABLE tbl_hash(\n  id bigserial,\n  ival int,\n  cval char(1),\n  dval timestamp default now(),\n  primary key(id, ival)\n) partition by hash(ival);\ncreate table tbl_hash_0 partition of tbl_hash for values WITH (MODULUS 3, REMAINDER 0);\ncreate table tbl_hash_1 partition of tbl_hash for values WITH (MODULUS 3, REMAINDER 1);\ncreate table tbl_hash_2 partition of tbl_hash for values WITH (MODULUS 3, REMAINDER 2);\n</code></pre>"},{"location":"postgres/partman/","title":"Partman","text":""},{"location":"postgres/partman/#_1","title":"\u5206\u533a\u8868","text":""},{"location":"postgres/patroni/","title":"PG\u9ad8\u53ef\u7528Patroni","text":"","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_1","title":"\u73af\u5883","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf Centos 7</li> <li>patroni \u7248\u672c 2.0.2</li> <li>postgres \u7248\u672c 13</li> </ul>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_2","title":"\u5b9e\u73b0\u76ee\u6807","text":"<ul> <li>\u9ad8\u53ef\u7528\u65b9\u6848\u5bf9\u6bd4</li> <li>patroni \u7ed3\u6784\u5206\u6790</li> <li>patroni \u642d\u5efa\u65b0\u96c6\u7fa4</li> <li>patroni \u63a5\u7ba1\u73b0\u6709\u96c6\u7fa4</li> <li>patroni \u7ba1\u7406pg\u914d\u7f6e</li> <li>\u624b\u52a8swithover</li> <li>\u81ea\u52a8failover</li> <li>\u7ef4\u62a4\u6a21\u5f0f</li> <li>\u5f39\u6027\u6269\u5bb9\uff0c\u7f29\u5bb9</li> <li>\u5bf9\u5916\u63d0\u4f9b\u7edf\u4e00\u670d\u52a1</li> <li>RestFULLAPI</li> <li>\u5907\u4efd\u6062\u590d</li> <li>\u76d1\u63a7</li> <li>\u65e5\u5fd7</li> <li>\u5347\u7ea7</li> </ul>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_3","title":"\u9ad8\u53ef\u7528\u65b9\u6848\u5bf9\u6bd4","text":"<p>pg\u7684\u9ad8\u53ef\u7528\u65b9\u6848\u90fd\u662f\u57fa\u4e8e\u6d41\u590d\u5236\u6765\u5b9e\u73b0</p> <ul> <li> <p>PAF pacemaker + corosyns  </p> </li> <li> <p>repmgr repmgr \u624b\u52a8\u6d41\u590d\u5236\u7ba1\u7406 repmgrd \u81ea\u52a8\u6d41\u590d\u5236\u7ba1\u7406 \u5b88\u62a4\u8fdb\u7a0b \u4e3b+\u4ece \u4e3b+\u4ece+\u89c1\u8bc1\u8282\u70b9</p> </li> </ul> <p>\u66f4\u591a\u4ecb\u7ecd</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#patroni","title":"patroni\u67b6\u6784\u5206\u6790","text":"<ul> <li>DCS[etcd] \u5916\u90e8\u4f9d\u8d56 \uff0c\u96c6\u7fa4\u901a\u4fe1\u9009\u4e3b</li> <li>patroni \u4e0epg\u5728\u540c\u4e00\u4e2a\u8282\u70b9\uff0c \u5b88\u62a4\u8fdb\u7a0b</li> </ul>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#patroni_1","title":"patroni\u642d\u5efa\u65b0\u96c6\u7fa4","text":"","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_4","title":"\u521b\u5efa\u865a\u62df\u673a\u73af\u5883","text":"\u8282\u70b9 IP \u5e94\u7528 node0 10.10.1.10 etcd,ntp node1 10.10.1.11 patroni,pg,ntp node2 10.10.1.12 patroni,pg,ntp node3 10.10.1.13 patroni,pg,ntp","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#etcd","title":"\u5b89\u88c5etcd","text":"<p>\u5355\u8282\u70b9etcd \u5b89\u88c5</p> <pre><code>yum install etcd \n</code></pre> <p>\u914d\u7f6e\u5176\u4ed6\u8282\u70b9\u53ef\u8bbf\u95ee /etcd/etcd.conf</p> <pre><code>ETCD_LISTEN_CLIENT_URLS=\"http://10.10.1.10:2379\"\nETCD_ADVERTISE_CLIENT_URLS=\"http://10.10.1.10:2379\"\n</code></pre> <p>etcd \u96c6\u7fa4\u7ba1\u7406</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#patroni_2","title":"\u5b89\u88c5\u914d\u7f6epatroni","text":"<p>python3 \u73af\u5883</p> <pre><code>yum install gcc python3 python3-devel -y\npip3 install --upgrade pip\n</code></pre> <p>\u4f9d\u8d56\u5b89\u88c5</p> <pre><code>pip install psycopg2-binary\npip install patroni[etcd]\n</code></pre> <p>ntp \u5b89\u88c5</p> <pre><code>yum install ntp -y\nsystemctl start ntpd\nsystemctl enable ntpd\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_5","title":"\u6570\u636e\u5e93\u5b89\u88c5","text":"<p>\u53c2\u8003</p> <p>\u4e0d\u9700\u8981\u521d\u59cb\u5316</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_6","title":"\u57fa\u7840\u914d\u7f6e","text":"<p>vi /etc/patroni.yml</p> <pre><code>scope: pg_cluster01           # \u96c6\u7fa4\u540d\u79f0 \nnamespace: /pgs/       # \u540d\u79f0\u7a7a\u95f4\uff0c\u5bf9\u5e94etcd \u6839\u76ee\u5f55\nname: postgresql0        # \u8282\u70b9\u540d\u79f0\n\nrestapi:\n    listen: 10.10.1.11:8008             #\u5bf9\u5916restfull \u63a5\u53e3\n    connect_address: 10.10.1.11:8008\n\netcd:\n    host: 10.10.1.10:2379             # etcd\u670d\u52a1\u5730\u5740\n\nbootstrap:                            # \u5fc3\u8df3 \n    dcs:\n        ttl: 30\n        loop_wait: 10\n        retry_timeout: 10      # \u8bbf\u95eeetcd \u8d85\u65f6\u591a\u4e45\u540e\u91cd\u8bd5\n        maximum_lag_on_failover: 1048576  #\u4ece\u5e93\u843d\u540e\u4e3b\u5e93\u591a\u5c11bytes\u540efailover\u65f6\u4e0d\u80fd\u88ab\u9009\u4e3a\u4e3b\n        postgresql:                 # \u6d41\u590d\u5236\n          use_pg_rewind: true\n          use_slots: false          # \u9ed8\u8ba4true  \u4e3b\u4ece\u6570\u636e\u5e93wal\u4fdd\u7559\u7b56\u7565\n          parameters:                # \u4ee5\u4e0b\u4e3a\u8bbe\u7f6e\u6570\u636e\u5e93\u53c2\u6570\uff0c\u591a\u4e2a\u8282\u70b9\u914d\u7f6e\u7edf\u4e00 \n#           synchronous_standby_names: \"*\" # \u6d41\u590d\u5236 \u540c\u6b65\n#           synchronous_commit: \"on\"  # \u540c\u6b65\u7b49\u7ea7\n#           wal_level: hot_standby\n#           hot_standby: \"on\"\n#           wal_keep_segments: 8\n#           max_wal_senders: 10\n#           max_replication_slots: 10\n#           wal_log_hints: \"on\"\n#           archive_mode: \"on\"\n#           archive_timeout: 1800s\n#           archive_command: mkdir -p ../wal_archive &amp;&amp; test ! -f ../wal_archive/%f &amp;&amp; cp %p ../wal_archive/%f\n#        recovery_conf:\n#          restore_command: cp ../wal_archive/%f %p\n\n    initdb:                           #\u521d\u59cb\u5316\u6570\u636e\u5e93\n    - encoding: UTF8\n    - data-checksums\n\n    pg_hba:                           # \u6570\u636e\u5e93\u8bbf\u95ee\u9a8c\u8bc1\u914d\u7f6e\n    - host replication replicator 0.0.0.0/0 md5\n    - host all all 0.0.0.0/0 md5\n\n    users:                            #\u521d\u59cb\u5316\u6570\u636e\u5e93\u65f6\u521b\u5efa\u5e94\u7528\u7528\u6237\n        admin:\n            password: admin\n            options:\n                - createrole\n                - createdb\n\npostgresql:                           #\u6570\u636e\u5e93\u8bbe\u7f6e\n    listen: 0.0.0.0:5432\n    connect_address: 10.10.1.11:5432\n    data_dir: /var/lib/pgsql/13/data/\n    pgpass: /tmp/pgpass\n    authentication:\n        replication:\n            username: replicator\n            password: rep-pass\n        superuser:\n            username: postgres\n            password: secretpassword\n    parameters:\n        unix_socket_directories: '.'\n\ntags:\n    nofailover: false\n    noloadbalance: false\n    clonefrom: false\n    nosync: false\n\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_7","title":"\u670d\u52a1\u7ba1\u7406","text":"<p>cat /usr/lib/systemd/system/patroni.service </p> <pre><code>[Unit]\nDescription=Runners to orchestrate a high-availability PostgreSQL\nAfter=syslog.target network.target\n\n[Service]\nType=simple\n\nUser=postgres\nGroup=postgres\n\n# Note: avoid inserting whitespace in these Environment= lines, or you may\n# break postgresql-setup.\n\n# Location of database directory\nEnvironment=PATH=$PATH:/usr/pgsql-13/bin\n\n# Where to send early-startup messages from the server (before the logging\n# options of postgresql.conf take effect)\n# This is normally controlled by the global default set by systemd\n# StandardOutput=syslog\n\n# Disable OOM kill on the postmaster\nOOMScoreAdjust=-1000\nEnvironment=PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj\nEnvironment=PG_OOM_ADJUST_VALUE=0\n\nExecStart=/usr/local/bin/patroni /etc/patroni.yml\nExecReload=/bin/kill -HUP $MAINPID\n\nKillMode=process\nKillMode=mixed\nKillSignal=SIGINT\n\n# Do not set any timeout value, so that systemd will not kill postmaster\n# during crash recovery.\nTimeoutSec=0\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>\u9a8c\u8bc1</p> <pre><code> sudo systemd-analyze verify patroni.service\n</code></pre> <p>\u542f\u52a8</p> <pre><code>systemctl start patroni\n</code></pre> <p>\u67e5\u770b\u542f\u52a8\u65e5\u5fd7</p> <pre><code>journalctl -u patroni.service -f -n 1000\n</code></pre> <p>\u67e5\u770bpatroni</p> <pre><code>#patronictl -c /etc/patroni.yml list\n+ Cluster: pg_cluster (6935229608238737808) ----+----+-----------+\n| Member      | Host       | Role   | State   | TL | Lag in MB |\n+-------------+------------+--------+---------+----+-----------+\n| postgresql0 | 10.10.1.11 | Leader | running |  2 |           |\n+-------------+------------+--------+---------+----+-----------+\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_8","title":"\u5176\u4ed6\u8282\u70b9\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c, \u5728\u96c6\u7fa4\u4e2d\u52a0\u5165\u65b0\u8282\u70b9","text":"<p><code>\u6ce8\u610f\u4e8b\u9879</code> <code>patroni.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4e0d\u540c\u7684\u8282\u70b9\u9700\u8981\u4fee\u6539\u6210\u5bf9\u5e94\u8282\u70b9\u76f8\u7b26\u7684\u503c</code></p> <p><code>name: postgresql0</code></p> <p><code>IP\u5199\u6210\u8282\u70b9\u5bf9\u5e94\u7684IP</code></p> <pre><code>#patronictl -c /etc/patroni.yml list -e\n+ Cluster: pg_cluster (6935302809216505755) -----+----+-----------+-----------------+-------------------+------+\n| Member      | Host       | Role    | State   | TL | Lag in MB | Pending restart | Scheduled restart | Tags |\n+-------------+------------+---------+---------+----+-----------+-----------------+-------------------+------+\n| postgresql0 | 10.10.1.11 | Leader  | running | 14 |           |                 |                   |      |\n| postgresql2 | 10.10.1.12 | Replica | running | 14 |         0 |                 |                   |      |\n| postgresql3 | 10.10.1.13 | Replica | running | 14 |         0 |                 |                   |      |\n+-------------+------------+---------+---------+----+-----------+-----------------+-------------------+------+\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#patronipg","title":"patroni\u7ba1\u7406pg\u914d\u7f6e","text":"","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_9","title":"\u591a\u8282\u70b9\u7edf\u4e00\u914d\u7f6e","text":"<p>\u4ee5\u4e0b\u4fee\u6539\u540e\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u751f\u6548\uff0c\u5e76\u4e14\u4fdd\u6301\u4e00\u81f4\u3002</p> <pre><code>\u4fee\u6539\u96c6\u7fa4\u914d\u7f6e\n# patronictl -c /etc/patroni.yml edit-config\n\n</code></pre> <pre><code>\u67e5\u770b\u96c6\u7fa4\u914d\u7f6e \n#patronictl -c /etc/patroni.yml show-config\n\nloop_wait: 10\nmaximum_lag_on_failover: 1048576\npostgresql:\n  parameters:\n    max_connections: 1000\n    synchronous_standby_names: '*'\n  use_pg_rewind: true\n  use_slots: false\nretry_timeout: 10\nttl: 30\n</code></pre> <pre><code>\u4fee\u6539\u540e\u5f85\u751f\u6548\n#patronictl -c /etc/patroni.yml list \n+ Cluster: pg_cluster (6935302809216505755) -----+----+-----------+-----------------+\n| Member      | Host       | Role    | State   | TL | Lag in MB | Pending restart |\n+-------------+------------+---------+---------+----+-----------+-----------------+\n| postgresql0 | 10.10.1.11 | Leader  | running | 14 |           | *               |\n| postgresql2 | 10.10.1.12 | Replica | running | 14 |         0 | *               |\n| postgresql3 | 10.10.1.13 | Replica | running | 14 |         0 | *               |\n+-------------+------------+---------+---------+----+-----------+-----------------+\n</code></pre> <pre><code>\u91cd\u542f\u96c6\u7fa4\u751f\u6548, \u53ef\u6307\u5b9a\u6267\u884c\u8ba1\u5212\u3002\u5b9a\u65f6\u81ea\u52a8\u6267\u884c\n#patronictl -c /etc/patroni.yml restart pg_cluster(\u96c6\u7fa4\u540d)\n</code></pre> <p>\u4ee5\u4e0a\u4fee\u6539\u7684\u6587\u4ef6\u4e3a postgres.conf</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_10","title":"\u5355\u8282\u70b9\u6570\u636e\u5e93\u914d\u7f6e","text":"<p>\u6709\u4e9b\u53c2\u6570\u53ea\u60f3\u5728\u7279\u5b9a\u8282\u70b9\u751f\u6548\uff0c\u914d\u7f6e\u65b9\u5f0f\u4e0e\u5355\u8282\u70b9\u6570\u636e\u5e93\u4e00\u81f4</p> <p>vi postgres.base.conf</p> <p>\u5bf9\u5e94\u8282\u70b9\u6267\u884c restart \u6216 reload \u751f\u6548</p> <pre><code>systemctl restart patroni \nsystemctl reload patroni \n</code></pre> <p>\u6216</p> <pre><code>#patronictl -c /etc/patroni.yml restart/reload pg_cluster(\u96c6\u7fa4\u540d) postgresql0(\u8282\u70b9\u540d) \n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#restfull-api","title":"\u5229\u7528RESTFULL API \u8fdb\u884c\u914d\u7f6e\u7ba1\u7406","text":"","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#swithover","title":"\u624b\u52a8swithover","text":"<p>\u8ba1\u5212\u5185\u8c03\u6574\u4e3b\u8282\u70b9\uff0c\u96c6\u7fa4\u62d3\u6251\u5173\u7cfb</p> <pre><code>\u5c06\u539f\u4e3bpostgresql0\u5207\u6362\u4e3apostgresql2\n#patronictl -c /etc/patroni.yml switchover\nMaster [postgresql0]: \nCandidate ['postgresql2', 'postgresql3'] []: postgresql2\nWhen should the switchover take place (e.g. 2021-03-04T08:50 )  [now]: \nCurrent cluster topology\n+ Cluster: postgres (6935302809216505755) -----+----+-----------+\n| Member      | Host       | Role    | State   | TL | Lag in MB |\n+-------------+------------+---------+---------+----+-----------+\n| postgresql0 | 10.10.1.11 | Leader  | running | 14 |           |\n| postgresql2 | 10.10.1.12 | Replica | running | 14 |         0 |\n| postgresql3 | 10.10.1.13 | Replica | running | 14 |         0 |\n+-------------+------------+---------+---------+----+-----------+\nAre you sure you want to switchover cluster postgres, demoting current master postgresql0? [y/N]: y\n2021-03-04 07:50:08.99426 Successfully switched over to \"postgresql2\"\n+ Cluster: postgres (6935302809216505755) -----+----+-----------+\n| Member      | Host       | Role    | State   | TL | Lag in MB |\n+-------------+------------+---------+---------+----+-----------+\n| postgresql0 | 10.10.1.11 | Replica | stopped |    |   unknown |\n| postgresql2 | 10.10.1.12 | Leader  | running | 14 |           |\n| postgresql3 | 10.10.1.13 | Replica | running | 14 |         0 |\n+-------------+------------+---------+---------+----+-----------+\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#failover","title":"\u81ea\u52a8failover","text":"<p>\u5f53\u96c6\u7fa4\u73af\u5883\u53d1\u751f\u5f02\u5e38\u72b6\u51b5\u65f6\uff0c\u96c6\u7fa4\u81ea\u52a8\u6240\u91c7\u53d6\u7684\u5bf9\u5e94\u63aa\u65bd\u3002</p> <p>\u66f4\u591a\u5f02\u5e38\u72b6\u51b5CASE\u53ef\u53c2\u8003\uff0c\u9ad8\u53ef\u7528\u96c6\u7fa4\u8bbe\u8ba1</p> <ul> <li>\u8282\u70b9\u65ad\u7f51\uff0c\u901a\u4fe1\u5931\u8d25\uff0c\u670d\u52a1\u4e0d\u505c</li> <li>\u8282\u70b9\u65ad\u7535\uff0c\u901a\u4fe1\u5931\u8d25\uff0c\u505c\u670d</li> <li>\u901a\u4fe1\u6210\u529f\uff0c\u670d\u52a1\u505c</li> <li>dcs \u5931\u6548, \u96c6\u7fa4\u53d8\u4e3a\u53ea\u8bfb</li> <li>\u5931\u8054\u8282\u70b9\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4</li> </ul>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_11","title":"\u7ef4\u62a4\u6a21\u5f0f","text":"<p>\u7ef4\u62a4\u6a21\u5f0f\uff1a \u96c6\u7fa4\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002\u4f46\u96c6\u7fa4\u5173\u7cfb\u4e0d\u5728\u63a5\u53d7patroni\u7ba1\u7406\u3002\u6b64\u65f6\u7684\u96c6\u7fa4\u4e3a\u539f\u751f\u7684\u6d41\u590d\u5236\u3002</p> <p>\u4e3b\u52a8\u7ef4\u62a4\u6a21\u5f0f\uff1a \u96c6\u7fa4\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\u5f00\u542f\u7ef4\u62a4\u6a21\u5f0f, \u96c6\u7fa4\u4e0d\u5728\u62e5\u6709autofailover \u80fd\u529b,\u4ecd\u7136\u5177\u6709swithover\u529f\u80fd\u3002\u5f53DCS \u5931\u6548\u96c6\u7fa4\u4e0d\u53d7\u5f71\u54cd.</p> <pre><code># \u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f\npatronictl -c /etc/patroni.yml pause\nSuccess: cluster management is paused\n\n# \u9000\u51fa\u7ef4\u62a4\u6a21\u5f0f\npatronictl -c /etc/patroni.yml resume\nSuccess: cluster management is resumed\n\n# \u5f53\u524d\u72b6\u6001 \u662f\u5426\u4e3a\u7ef4\u62a4\u6a21\u5f0f\n1 \u53ef\u67e5\u770b\u5728DSC \u4e2d\u7684config\u4fe1\u606f\n2 API \u63a5\u53e3\u4fe1\u606f\n\npatronictl -c /etc/patroni/patroni.yaml show-config | grep pause\npause: true\n</code></pre> <p>\u88ab\u52a8\u7ef4\u62a4\u6a21\u5f0f\uff1a \u5f53DCS \u5931\u6548\u65f6\u96c6\u7fa4\u53d8\u4e3a\u53ea\u8bfb\u6a21\u5f0f</p> <p>\u5904\u7406\u65b9\u6cd5, \u589e\u52a0patroni\u4e0eDCS\u4e4b\u95f4\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u5728\u6536\u5230DCS\u5f02\u5e38\u8b66\u544a\u540e\u7ed9\u81ea\u5df1\u5145\u5206\u7684\u65f6\u95f4\u6765\u5904\u7406\u3002 </p> <pre><code>retry_timeout: 86400 (\u4e00\u5929)\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_12","title":"\u5f39\u6027\u6269\u5bb9\u7f29\u5bb9","text":"<ul> <li>\u6269\u5bb9 :</li> </ul> <p>\u5c06patroni.yml \u62f7\u8d1d\u5230\u65b0\u8282\u70b9 \u4fee\u6539\u5bf9\u5e94\u7684\u5185\u5bb9\u540e \u542f\u52a8\u81ea\u52a8\u52a0\u5165\u96c6\u7fa4</p> <ul> <li>\u7f29\u5bb9 :</li> </ul> <p>\u5173\u95ed \u8282\u70b9patroni \u670d\u52a1\u81ea\u52a8\u9000\u51fa\u96c6\u7fa4</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_13","title":"\u5bf9\u5916\u63d0\u4f9b\u7edf\u4e00\u670d\u52a1","text":"<ul> <li>\u4e8c\u5c42 VIP vip-manager</li> <li>\u56db\u5c42 haproxy</li> <li>\u4e03\u5c42 DNS</li> </ul> <p>\u670d\u52a1\u53d1\u73b0\u53c2\u8003\u4e0b\u9762\u7684 restfullapi</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#restfullapi","title":"RestFullAPI","text":"<pre><code>-- \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\n# curl -s http://10.10.1.11:8008/config | jq .\n{\n  \"loop_wait\": 10,\n  \"maximum_lag_on_failover\": 1048576,\n  \"postgresql\": {\n    \"parameters\": {\n      \"max_connections\": 1001,\n      \"synchronous_standby_names\": \"*\"\n    },\n    \"use_pg_rewind\": true,\n    \"use_slots\": false\n  },\n  \"retry_timeout\": 10,\n  \"ttl\": 30\n}\n-- \u8bfb\u53d6\u96c6\u7fa4\u4fe1\u606f\ncurl -s http://10.10.1.11:8008/cluster | jq .\n{\n  \"members\": [\n    {\n      \"name\": \"postgresql0\",\n      \"role\": \"leader\",\n      \"state\": \"running\",\n      \"api_url\": \"http://10.10.1.11:8008/patroni\",\n      \"host\": \"10.10.1.11\",\n      \"port\": 5432,\n      \"timeline\": 16\n    },\n    {\n      \"name\": \"postgresql2\",\n      \"role\": \"replica\",\n      \"state\": \"running\",\n      \"api_url\": \"http://10.10.1.12:8008/patroni\",\n      \"host\": \"10.10.1.12\",\n      \"port\": 5432,\n      \"timeline\": 16,\n      \"lag\": 0\n    },\n    {\n      \"name\": \"postgresql3\",\n      \"role\": \"replica\",\n      \"state\": \"running\",\n      \"api_url\": \"http://10.10.1.13:8008/patroni\",\n      \"host\": \"10.10.1.13\",\n      \"port\": 5432,\n      \"timeline\": 16,\n      \"lag\": 0\n    }\n  ]\n}\n-- \u83b7\u53d6\u8282\u70b9\u89d2\u8272\u4fe1\u606f\ncurl -s http://10.10.1.12:8008/health | jq .role\n\"replica\"\n\ncurl -s http://10.10.1.11:8008/health | jq .role\n\"master\"\n\n-- \u6839\u636eresponse code status\n\u4e3b\u8282\u70b9 200 , \u4ece\u8282\u70b9503 \ncurl -si http://10.10.1.13:8008/master\n\u4ece\u8282\u70b9 200 ,\u4e3b\u8282\u70b9503\ncurl -si http://10.10.1.13:8008/replica\n\n</code></pre>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_14","title":"\u5907\u4efd\u6062\u590d","text":"<ul> <li> <p>etcd \u5907\u4efd\u6062\u590d</p> </li> <li> <p>patroni \u8282\u70b9\u5173\u95ed\u540e\u5220\u9664etcd\u6570\u636e \uff0c\u91cd\u65b0\u542f\u52a8\u540e\u6570\u636e\u518d\u6b21\u751f\u6210</p> </li> <li> <p>\u6b63\u5728\u8fd0\u884c\u7684\u96c6\u7fa4\u5220\u9664etcd\u6570\u636e , \u6570\u636e\u518d\u6b21\u81ea\u52a8\u751f\u6210\u3002</p> </li> <li> <p>pg \u5907\u4efd\u6062\u590d</p> </li> <li> <p>\u5168\u91cf\u5907\u4efd</p> </li> <li>wal \u5907\u4efd</li> </ul> <p>\u5b98\u65b9\u65b9\u6848 wal-e</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_15","title":"\u76d1\u63a7","text":"<ul> <li>patroni_exporter </li> <li>etcd_exporter</li> <li>postgres_exporter</li> </ul>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_16","title":"\u65e5\u5fd7","text":"<ul> <li>FLK</li> </ul>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni/#_17","title":"\u5347\u7ea7","text":"<p>[\u53c2\u8003]</p> <p>https://www.cnblogs.com/zhangeamon/p/9772118.html</p> <p>https://www.linode.com/docs/databases/postgresql/create-a-highly-available-postgresql-cluster-using-patroni-and-haproxy</p> <p>ansible \u7ba1\u7406</p> <p>\u5b9e\u8df5</p>","tags":["\u9ad8\u53ef\u7528"]},{"location":"postgres/patroni02/","title":"Patroni \u9ad8\u53ef\u7528\u7ba1\u7406\u8fdb\u9636","text":""},{"location":"postgres/patroni02/#_1","title":"\u5b8c\u6210\u76ee\u6807","text":"<ul> <li>\u4e3b\u4ece\u540c\u6b65\u7b56\u7565</li> <li>\u5f02\u5730\u591a\u673a\u623f\u7b56\u7565</li> <li>failover \u89e6\u53d1\u8be6\u60c5</li> <li>\u8bbf\u95ee\u8ba4\u8bc1</li> <li>watch-dog</li> <li>\u914d\u7f6e\u6587\u4ef6\u8be6\u60c5</li> <li>fencing</li> <li>DCS \u5931\u6548\u5904\u7406</li> <li>\u52a0\u5165\u8282\u70b9\u590d\u5236\u6570\u636e\u9650\u6d41</li> <li>\u4e3b\u4ece\u5207\u6362\u6d41\u91cf,\u907f\u514d\u91cd\u65b0\u62c9\u53d6</li> <li>\u7ea7\u8054\u590d\u5236</li> <li>callback</li> <li>\u65e5\u5fd7&amp;\u76d1\u63a7</li> </ul>"},{"location":"postgres/patroni02/#_2","title":"\u4e3b\u4ece\u540c\u6b65\u7b56\u7565","text":"<p>\u6570\u636e\u5e93\u4e3b\u4ece\u4e4b\u95f4\u540c\u6b65\u7c7b\u578b</p> <pre><code>Synchronous state of this standby server. Possible values are:\nasync: This standby server is asynchronous.\npotential: This standby server is now asynchronous, but can potentially become synchronous if one of current synchronous ones fails.\nsync: This standby server is synchronous.\nquorum: This standby server is considered as a candidate for quorum standbys.\n</code></pre> <p>\u6570\u636e\u5e93\u7ea7\u540c\u6b65\u914d\u7f6e</p> <pre><code>synchronous_standby_names: '*'\nsynchronous_commit = on \n</code></pre> <p>patroni\u540c\u6b65\u7ba1\u7406</p> <pre><code>patronictl edit-config -s 'synchronous_mode=true'\u52a0\u5165\u8282\u70b9\u590d\u5236\u6570\u636e\u9650\u6d41\npatronictl edit-config -s 'synchronous_mode_strict:true'\n\n\u53c2\u6570\u8bf4\u660e:\n\nsynchronous_mode = true , \n\n\u4e3a\u540c\u6b65\u6a21\u5f0f\uff0c\u53ea\u6709\u4e00\u4e2a\u4ece\u8282\u70b9\u4e3async\u3002\u5728failover\u65f6sync\u8282\u70b9\u624d\u6709\u8d44\u683c\u9009\u4e3a\u65b0\u4e3b\u3002\n\u4e0e\u539f\u6765\u7684pg\u540c\u6b65\u4e0d\u540c\uff0c\u539fpg\u670d\u52a1\u5f53\u6240\u6709\u7684\u4ece\u8282\u70b9\u4e0d\u53ef\u7528\u65f6\u5199\u64cd\u4f5c\u5c06\u4f1a\u88ab\u5835\u585e\u3002\n\u7531patroni \u7ba1\u7406\u7684pg \u8bbe\u7f6e\u4e3asynchronous_mode = true \uff0c\u5f53\u540c\u6b65\u4ece\u5e93\u4e0d\u53ef\u7528\u65f6\u4e3b\u5e93\u53d1\u751f\u964d\u7ea7\u3002\u4e0d\u4f1a\u5f71\u54cd\u4e1a\u52a1\u5199\u64cd\u4f5c\u3002\n\nsynchronous_mode_strict:true\n\u5982\u679c\u4e0d\u60f3\u53d1\u751f\u4e3b\u5e93\u964d\u7ea7\uff0c\u8bbe\u7f6e\u6b64\u53c2\u6570\u3002\u6570\u636e\u5b89\u5168\u6027\u4f1a\u66f4\u9ad8\u3002\u5efa\u8bae\u4e00\u4e3b\u591a\u4ece\u3002\n\n</code></pre> <pre><code>patronictl edit-config -s 'synchronous_mode=true'\npatronictl -c /etc/patroni.yml list\n+ Cluster: postgres (6935302809216505755) +---------+----+-----------+------------------+\n| Member      | Host       | Role         | State   | TL | Lag in MB | Tags             |\n+-------------+------------+--------------+---------+----+-----------+------------------+\n| postgresql0 | 10.10.1.11 | Replica      | running | 31 |         0 | nofailover: true |\n|             |            |              |         |    |           | nosync: true     |\n+-------------+------------+--------------+---------+----+-----------+------------------+\n| postgresql2 | 10.10.1.12 | Sync Standby | running | 31 |         0 |                  |\n+-------------+------------+--------------+---------+----+-----------+------------------+\n| postgresql3 | 10.10.1.13 | Leader       | running | 31 |           |                  |\n+-------------+------------+--------------+---------+----+-----------+------------------+\n</code></pre>"},{"location":"postgres/patroni02/#_3","title":"\u5f02\u5730\u591a\u673a\u623f\u7b56\u7565","text":"<p>A. \u5f53\u5f02\u5730\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\u3002</p> <ul> <li>\u5907\u7528\u673a\u623f\u8282\u70b9\u5728failover\u65f6\u4e0d\u80fd\u9009\u505a\u4e3b</li> <li>\u5907\u7528\u673a\u623f\u8282\u70b9\u4e3b\u4ece\u590d\u5236\u91c7\u7528\u5f02\u6b65\u65b9\u5f0f</li> </ul> <p>\u5b9e\u73b0\u65b9\u6cd5\uff1a \u5728yml \u4e2d\u7684tag\u914d\u7f6e\u5982\u4e0b</p> <pre><code>tags: \n  nofailover: true # failover \u65f6\u4e0d\u80fd\u9009\u4e3a\u4e3b\u8282\u70b9\n  nosync: true # \u5f02\u6b65\n</code></pre> <pre><code>patronictl -c /etc/patroni.yml list\n+ Cluster: postgres (6935302809216505755) -----+----+-----------+------------------+\n| Member      | Host       | Role    | State   | TL | Lag in MB | Tags             |\n+-------------+------------+---------+---------+----+-----------+------------------+\n| postgresql0 | 10.10.1.11 | Replica | running | 20 |         0 | nofailover: true |\n|             |            |         |         |    |           | nosync: true     |\n+-------------+------------+---------+---------+----+-----------+------------------+\n| postgresql2 | 10.10.1.12 | Replica | running | 20 |         0 |                  |\n+-------------+------------+---------+---------+----+-----------+------------------+\n| postgresql3 | 10.10.1.13 | Leader  | running | 20 |           |                  |\n+-------------+------------+---------+---------+----+-----------+------------------+\n</code></pre> <p>B. \u5f53\u5f02\u5730\u8282\u70b9\u4e3a\u591a\u4e2a\u8282\u70b9\u65f6</p> <p>\u5982\u679c\u591a\u4e2a\u8282\u70b9\u90fd\u4ece\u4e3b\u8282\u70b9\u673a\u623f\u540c\u6b65</p> <p>1 \u673a\u623f\u95f4\u5e26\u5bbd</p> <p>2 \u673a\u623f\u95f4\u7f51\u7edc\u5ef6\u8fdf</p> <p>\u66f4\u5408\u7406\u7684\u7ed3\u6784\u62d3\u6251\u5e94\u8be5\u91c7\u7528\u6570\u636e\u5e93\u7ea7\u8054\u590d\u5236\u6a21\u5f0f</p> <p>Standby cluster</p>"},{"location":"postgres/patroni02/#_4","title":"\u8bbf\u95ee\u8ba4\u8bc1","text":"<ul> <li>DSC \u8bbf\u95ee\u8ba4\u8bc1\u7ba1\u7406</li> </ul> <p>DSC \u4f5c\u4e3a\u96c6\u7fa4\u7684\u914d\u7f6e\u7ba1\u7406\u4e2d\u5fc3\uff0c\u867d\u7136\u4e0d\u5b58\u50a8\u4e1a\u52a1\u6570\u636e\uff0c\u4f46\u662f\u5b89\u5168\u6027\u4e5f\u662f\u81f3\u5173\u91cd\u8981\u3002</p> <pre><code>etcd \n  username: 'user'\n  password: 'pwd'\n</code></pre> <ul> <li>API \u8bbf\u95ee\u8ba4\u8bc1</li> </ul> <p>\u7528\u4e8epatroni\u53ef\u901a\u8fc7API \u8bbf\u95ee\u6765\u8fdb\u884c\u7ba1\u7406\uff0c\u5c06\u7aef\u53e3\u66b4\u9732\u51fa\u6765\u4e0d\u52a0\u9632\u62a4\u65e0\u7591\u662f\u5c06\u7ba1\u7406\u6743\u62f1\u624b\u76f8\u8ba9\u3002</p>"},{"location":"postgres/patroni02/#watch-dog","title":"watch-dog","text":"<p>\u57fa\u672c\u539f\u7406\uff1a \u5f53patroni\u542f\u52a8\u540e\u4f1a\u4e0d\u505c\u7684\u5411watch-dog\u53d1\u9001\u5fc3\u8df3\u3002\u5f53watch dog\u8d85\u8fc7\u4e00\u5b9a\u65f6\u95f4\u95f4\u9694\u6ca1\u6709\u6536\u5230\u5fc3\u8df3\u5219\u8ba4\u4e3apatroni\u8fdb\u7a0b\u53d1\u751f\u610f\u5916\uff0cwatch dog\u91cd\u65b0\u7cfb\u7edf\u3002</p> <p>\u57fa\u672c\u914d\u7f6e\uff1a </p> <pre><code>\u5b89\u88c5watchdog\nyum install watchdog -y\nsystemctl start watchdog\n</code></pre> <p>patroni.service</p> <pre><code>ExecStartPre=-/usr/bin/sudo /sbin/modprobe softdog\nExecStartPre=-/usr/bin/sudo /bin/chown postgres /dev/watchdog\n</code></pre> <p>patroni.yml</p> <pre><code>watchdog:\n  mode: automatic # Allowed values: off, automatic, required\n  device: /dev/watchdog\n  safety_margin: 5\n</code></pre>"},{"location":"postgres/patroni02/#fencing","title":"fencing","text":"<p>\u907f\u514d\u53cc\u4e3b\u95ee\u9898</p> <p>patroni \u5728\u4e3b\u8282\u70b9\u7f51\u7edc\u4e0edcs\u4e0d\u901a\u4fe1\u53d1\u751f\u6545\u969c\u65f6\u4f1a\u964d\u7ea7\u4e3a\u53ea\u8bfb\u3002\u4f46\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u7684\u53cc\u4e3b\u3002</p> <p>\u66f4\u4e25\u683c\u7684\u65b9\u5f0f\u662f\u91c7\u7528pg\u7684\u540c\u6b65\u6a21\u5f0f\uff0c\u5f53\u4e3b\u8282\u70b9\u53d1\u73b0\u65e0\u4efb\u4f55\u53ef\u7528\u7684\u4ece\u5e93\u65f6\u5199\u64cd\u4f5c\u88abhang\u4f4f\u3002</p> <pre><code>patronictl edit-config -s 'synchronous_mode=true'\npatronictl edit-config -s 'synchronous_mode_strict:true'\n</code></pre> <p>\u5f53\u96c6\u7fa4\u662f\u4e00\u4e3b\u591a\u4ece\uff0c\u6bd4\u5982\u4e00\u4e3b4\u4ece\u3002\u53ef\u80fd\u53d1\u751f2\u8282\u70b9\u4e4b\u95f4\u4e92\u901a\uff0c \u53e6\u59163\u8282\u70b9\u4e4b\u95f4\u4e92\u901a\u7684\u60c5\u51b5\u3002</p> <p>pg \u5b9e\u73b0\u8bf7\u81ea\u884c\u7ed3\u5408 pg 'quorum' \u53c2\u6570\u8fdb\u884c\u8003\u91cf\u3002\u5177\u4f53\u7ed3\u5408\u4e1a\u52a1\u6570\u636e\u5b89\u5168\u7b49\u7ea7\u8981\u6c42\u3002 </p> <p>patroni </p> <pre><code>synchronous_node_count = 1 # default 1\n</code></pre>"},{"location":"postgres/patroni02/#dcs","title":"dcs\u5931\u6548\u5904\u7406","text":"<p>\u9996\u5148\u5f53DCS\u5931\u6548\u540e\u96c6\u7fa4\u7684\u53cd\u5e94\uff1a</p> <p>\u96c6\u7fa4\u53d8\u4e3a\u53ea\u8bfb\u6a21\u5f0f\uff0c\u539f\u6765\u96c6\u7fa4\u4e2d\u7684\u6240\u6709pg\u670d\u52a1\u90fd\u53d8\u4e3a\u53ea\u8bfb\u3002\u4e3b\u8282\u70b9pg\u4e5f\u88ab\u964d\u7ea7\u4e3a\u53ea\u8bfb\u3002</p> <p>\u53d1\u751f\u4e0a\u8ff0\u73b0\u5728\u4e3b\u8981\u662fpatroni\u7684failover\u673a\u5236\u3002 </p> <ul> <li>\u4e3b\u52a8\u65b9\u5f0f\uff0cdcs\u5931\u6548\u540e\u5bf9\u73b0\u6709\u96c6\u7fa4\u4e0d\u9020\u6210\u5f71\u54cd\u3002\u540c\u65f6\u4e5f\u5931\u53bb\u4e86failover\u80fd\u529b\u3002 </li> </ul> <p>\u601d\u8def failover \u5173\u95ed\u6216\u5ef6\u957f\u751f\u6548</p> <pre><code>\u65b9\u6cd5\u4e00 \uff1a \u5173\u95ed\u96c6\u7fa4\u7684failover\n patronictl -c /etc/patroni.yml pause\n</code></pre> <pre><code>\u65b9\u6cd5\u4e8c \uff1a \nretry_timeout: timeout for DCS and PostgreSQL operation retries (in seconds). DCS or network issues shorter than this will not cause Patroni to demote the leader. Default value: 10\n\u5c06\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u8bbe\u7f6e\u5927\u4e00\u4e9b\uff0c\u6bd4\u5982\u4e00\u5929\u3002\n</code></pre> <ul> <li>\u88ab\u52a8\u65b9\u5f0f\uff0cDSC\u5df2\u7ecf\u5931\u6548\u5e76\u4e14\u77ed\u65f6\u95f4\u5185\u4e0d\u80fd\u4fee\u590d\u3002\u5df2\u5bf9\u73b0\u6709\u751f\u4ea7\u9020\u6210\u5f71\u54cd\u7684\u7d27\u6025\u5904\u7406\u65b9\u5f0f\u3002</li> </ul> <p>\u601d\u8def pg \u8131\u79bbpatroi \u7684\u7ba1\u7406\uff0c\u91c7\u7528\u81ea\u8eab\u6d41\u590d\u5236</p> <p>\u5177\u4f53\u65b9\u6cd5 </p>"},{"location":"postgres/patroni02/#_5","title":"\u52a0\u5165\u8282\u70b9\u590d\u5236\u6570\u636e\u9650\u6d41","text":"<p>pg \u6d41\u590d\u5236\u65b0\u52a0\u5165\u8282\u70b9\u9650\u6d41 </p> <pre><code>pg_basebackup -r\n</code></pre> <p>\u9009\u62e9\u4ece\u54ea\u4e2a\u8282\u70b9\u62c9\u53d6\u5b8c\u6574\u5907\u4efd</p> <pre><code>tags.clonefrom\n</code></pre>"},{"location":"postgres/patroni02/#_6","title":"\u907f\u514d\u91cd\u65b0\u62c9\u53d6","text":"<pre><code>pg_rewind\n</code></pre>"},{"location":"postgres/patroni02/#_7","title":"\u7ea7\u8054\u590d\u5236","text":"<pre><code>tags.replicatefrom: name  \n</code></pre> <p>\u6d4b\u8bd5\u7ed3\u679c\u5199IP\u4e0d\u751f\u6548\uff0c\u5199name\u53ef\u4ee5</p> <p>https://zhuanlan.zhihu.com/p/260958352</p>"},{"location":"postgres/pg_activity/","title":"\u6570\u636e\u5e93\u5b9e\u65f6\u8fd0\u884c\u4fe1\u606f\u67e5\u770b","text":"","tags":[]},{"location":"postgres/pg_activity/#_1","title":"\u4ecb\u7ecd","text":"<p>\u7c7b\u4f3cLinux top \u547d\u4ee4 \u67e5\u770b\u6570\u636e\u5b9e\u65f6\u8fd0\u884c\u60c5\u51b5</p> <p> https://github.com/dalibo/pg_activity</p>","tags":[]},{"location":"postgres/pg_activity/#_2","title":"\u5b89\u88c5","text":"<p>\u6d4b\u8bd5\u73af\u5883centos7 postgresql10</p>","tags":[]},{"location":"postgres/pg_activity/#pg","title":"\u67e5\u770b\u5df2\u5b89\u88c5\u7684PG\u7248\u672c","text":"<p>\u5982\u679c\u67099.2 \u7248\u672c\uff0c\u6e05\u7406,\u5982\u679c\u6ca1\u6709postgresql10-devel \u9700\u8981\u5b89\u88c5</p> <pre><code> yum list installed | grep postgres\n</code></pre>","tags":[]},{"location":"postgres/pg_activity/#_3","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf","text":"<pre><code>export PG_HOME=/usr/pgsql-10\nexport PATH=$PATH:$PG_HOME/bin/\n</code></pre>","tags":[]},{"location":"postgres/pg_activity/#pg_activity","title":"\u5b89\u88c5pg_activity","text":"<pre><code>python3 -m pip install pg_activity psycopg2-binary\n</code></pre>","tags":[]},{"location":"postgres/pg_activity/#_4","title":"\u4f7f\u7528","text":"<p>\u4e0epsql \u8fde\u63a5\u65b9\u5f0f\u76f8\u540c</p> <pre><code>pg_activity -U xxx -p xxx \n</code></pre>","tags":[]},{"location":"postgres/pg_activity/#_5","title":"\u66f4\u591a\u8fde\u63a5\u53c2\u6570","text":"","tags":[]},{"location":"postgres/pg_activity/#_6","title":"\u5b9e\u65f6\u754c\u9762 ,\u6309\u952e\u8bf4\u660e","text":"<pre><code>r   Sort by READ/s, descending\nw   Sort by WRITE/s, descending\nc   Sort by CPU%, descending\nm   Sort by MEM%, descending\nt   Sort by TIME+, descending\n</code></pre>","tags":[]},{"location":"postgres/pg_buffercache/","title":"pg_buffercache","text":"","tags":[]},{"location":"postgres/pg_buffercache/#pg","title":"\u901a\u8fc7\u63d2\u4ef6\u67e5\u770bPG\u6570\u636e\u7f13\u5b58","text":"<pre><code>create extension pg_buffercache;\n</code></pre>","tags":[]},{"location":"postgres/pg_buffercache/#database","title":"\u67e5\u770b\u5f53\u524ddatabase\u7f13\u5b58\u4f7f\u7528\u60c5\u51b5","text":"<pre><code>select c.relname,relname,pg_size_pretty(pg_table_size(c.oid)),pg_size_pretty(count(*) * 8192) as buffered,\nround(100.0*count(*)/(select setting FROM pg_settings where name = 'shared_buffers')::integer,1) as buffer_percent,\nround(100.0 * count(*) *  8192/pg_table_size(c.oid)) as percent_of_table\nfrom pg_class c inner join pg_buffercache b on b.relfilenode = c.relfilenode inner join pg_database d on (b.reldatabase = d.oid and d.datname = current_database())                     \ngroup by c.oid ,c.relname order by 3 desc limit 10;\n</code></pre>","tags":[]},{"location":"postgres/pg_citus/","title":"citus \u6570\u636e\u5e93\u5206\u5e93","text":""},{"location":"postgres/pg_citus/#_1","title":"\u6570\u636e\u5e93\u5206\u5e93\u8c03\u7814","text":"<ul> <li>Greenplum  \u66f4\u9002\u7528\u4e8eAP\u573a\u666f</li> <li>PGXL PGXC  \u793e\u533a\u4e0d\u6d3b\u8dc3\uff0c\u6c9f\u901a\u95ee\u9898\u53cd\u9988\u65f6\u95f4\u957f\u3002\u6ca1\u627e\u5230\u7528\u6237\u7fa4\u4f53. \u5728\u6b64\u57fa\u7840\u4e0a\u53d1\u5c55\u7684\u6709\u4e9a\u4fe1antdb\uff0c\u817e\u8baftbase\u3002\u6ca1\u6709\u90a3\u4e2a\u7814\u53d1\u5b9e\u529b\uff0c\u7b97\u4e86\u5427\u3002</li> <li>citus      \u63d2\u4ef6\u65b9\u5f0f\uff0c\u65e0\u4fb5\u5165\u3002\u5f88\u591a\u725bX\u7684\u7279\u6027\u4f01\u4e1a\u7248\u624d\u652f\u6301\u3002\u4e3b\u8981\u5f3a\u8c03\u591a\u79df\u6237\u3002 </li> <li>mycat      mysql\u652f\u6d3e\uff0c\u963f\u91cc\u5f00\u6e90\uff08\u629b\u5f03\uff09\u9879\u76ee\u3002\u4e3b\u8981\u662f\u5bf9sql\u8bed\u53e5\u7684\u62e6\u622a\uff0c\u9700\u8981\u5bf9\u4e1a\u52a1\u7406\u89e3\u900f\u5f7b\u53c8\u8981\u61c2mycat\uff0c\u5165\u4fb5\u592a\u5f3a\u3002</li> <li>bdr\u3002      2ndquadrant </li> <li>\u5176\u4ed6       \u7531\u6570\u636e\u5e93\u89e6\u53d1\u5668\u5b9e\u73b0\u7684\u76f4\u63a5\u7565\u8fc7</li> </ul> <p>citus \u5f00\u6e90\u793e\u533a\u7248\uff0c\u5982\u4f55\u5206\u5e93\u53ca\u6269\u5bb9\uff0cha</p> <p>\u4e3b\u8981\u601d\u8def\u662f\u901a\u8fc7\u4fee\u6539\u7cfb\u7edf\u7684\u5206\u533a\u8868\uff0c\u624b\u52a8\u8fdb\u884c\u5206\u5e93\u3002  ha \u6570\u636e\u5e93\u81ea\u8eab\u7684\u4e3b\u4ece\u6d41\u590d\u5236\u3002 </p>"},{"location":"postgres/pg_citus/#_2","title":"\u5b9e\u9a8c\u76ee\u6807","text":"<ul> <li>\u52a0\u5165\u6570\u636e\u5e93\u51e0\u70b9\u8fdb\u884c\u6269\u5bb9</li> <li>\u5220\u9664\u6570\u636e\u5e93\u8282\u70b9\u8fdb\u884c\u7f29\u5bb9</li> <li>\u6a21\u62df\u4efb\u610f\u8282\u70b9\u5b95\u673a\u89c2\u5bdfha\u7279\u6027</li> <li>\u538b\u529b\u6d4b\u8bd5\u5224\u65ad\u589e\u52a0\u4e3b\u673a\u8282\u70b9\u4e0e\u6570\u636e\u5e93\u6574\u4f53\u5904\u7406\u80fd\u529b\u4e4b\u95f4\u7684\u7ebf\u5f62\u5173\u7cfb</li> </ul>"},{"location":"postgres/pg_elk/","title":"\u6570\u636e\u5e93\u65e5\u5fd7\u5206\u6790","text":"","tags":[]},{"location":"postgres/pg_elk/#_1","title":"\u6570\u636e\u5e93\u65e5\u5fd7\u5206\u6790","text":"<p>\u6574\u4f53\u67b6\u6784</p> <p>filebeat -&gt; logstash -&gt; elasticseach -&gt; kibana</p> <ul> <li>filebeat \u6536\u96c6\u65e5\u5fd7</li> <li>logstash \u4e2d\u8f6c\u53ca\u65e5\u5fd7\u89c4\u5219\u5339\u914d\u8fc7\u6ee4</li> <li>elasticsearch \u65e5\u5fd7\u5b58\u50a8\u68c0\u7d22\u5e93</li> <li>kibana \u67e5\u770b\u754c\u9762</li> </ul>","tags":[]},{"location":"postgres/pg_elk/#postgresql","title":"postgresql","text":"<pre><code>log_destination = 'csvlog'\nlogging_collector = 'on'\nlog_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'\nlog_rotation_age = '1d'\nlog_rotation_size = '100MB'\nlog_min_messages = 'info'\nlog_min_duration_statement = '1000'\nlog_statement = 'ddl'\n</code></pre>","tags":[]},{"location":"postgres/pg_elk/#filebeat","title":"filebeat","text":"<pre><code>filebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /var/lib/pgsql/***/postgresql-*.csv\n  fields:\n    log_topics: postgresql\n\n  multiline.pattern: '^[[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3} [A-Z]{3}'\n  multiline.negate: true\n  multiline.match: after\nfilebeat.config.modules:\n  path: ${path.config}/modules.d/*.yml\n  reload.enabled: false\nsetup.template.settings:\n  index.number_of_shards: 1\ntags: [\"postgesql\"]\nsetup.kibana:\noutput.logstash:\n  hosts: [\"*.*.*.*:5044\"]\nprocessors:\n  - add_host_metadata: ~\n  - add_cloud_metadata: ~\n</code></pre>","tags":[]},{"location":"postgres/pg_elk/#logstash","title":"logstash","text":"<pre><code>#\n# this config is use for version logstash 7.3.1\n#\n\ninput {\n  beats {\n    port =&gt; 5044\n  }\n\n  #sdtin{\n  #\n  #}\n\n}\n\n\n# The filter part of this file is commented out to indicate that it\n# is optional.\n\n# use csv plugin against pglog , pglog neet set log format to csv first.\nfilter {\n  csv {\n    columns =&gt; [\n      \"log_time\",\n      \"user_name\",\n      \"database_name\",\n      \"process_id\",\n      \"connection_from\",\n      \"session_id\",\n      \"session_line_num\",\n      \"command_tag\",\n      \"session_start_time\",\n      \"virtual_transaction_id\",\n      \"transaction_id\",\n      \"error_severity\",\n      \"sql_state_code\",\n      \"message\",\n      \"detail\",\n      \"hint\",\n      \"internal_query\",\n      \"internal_query_pos\",\n      \"context\",\n      \"query\",\n      \"query_pos\",\n      \"location\",\n      \"application_name\"\n    ]\n  }\n}\n\n#\n# different log type out put different log format\n# 1. log duration log\n# 2. norm log statment\n# 3. checkpint log\n# 4. other\nfilter {\n if [message] =~ /duration: [0-9]{1,8}[.]{0,1}[0-9]{1,5} ms/ {\n     mutate {\n         split =&gt; { \"message\" =&gt; \"statement:\" }\n         add_field =&gt; {\"duration\" =&gt; \"%{[message][0]}\"}\n         add_field =&gt; {\"statement\" =&gt; \"%{[message][1]}\"}\n     }\n    mutate { gsub =&gt; [ \"duration\", \"duration: \", \"\" ] }\n    mutate { gsub =&gt; [ \"duration\", \" ms\", \"\" ] }\n    mutate { convert =&gt; { \"duration\" =&gt; \"float\" } }\n    mutate {\n      add_field =&gt; {\"sqltype\" =&gt;  \"slowsql\" }\n      remove_field =&gt; \"message\"\n   }\n  } else if [message] =~ /statement: / {\n    mutate { gsub =&gt; [ \"message\", \"statement: \", \"\" ] }\n    mutate { rename =&gt; {\"message\" =&gt; \"statement\"}}\n    mutate {add_field =&gt; { \"sqltype\" =&gt; \"statementsql\" } }\n  } else if [message] =~ /checkpoint / {\n    mutate {add_field =&gt; { \"sqltype\" =&gt; \"checkpoint\" } }\n    mutate { rename =&gt; {\"message\" =&gt; \"statement\"}}\n  } else{\n    mutate {add_field =&gt; { \"sqltype\" =&gt; \"other\" } }\n  }\n\n  mutate { remove_field =&gt; [\n    \"connection_from\",\n    \"session_line_num\",\n    \"command_tag\",\n    \"session_start_time\",\n    \"virtual_transaction_id\",\n    \"transaction_id\",\n    \"error_severity\",\n    \"sql_state_code\",\n    \"detail\",\n    \"hint\",\n    \"internal_query\",\n    \"internal_query_pos\",\n    \"context\",\n    \"query\",\n    \"query_pos\",\n    \"location\",\n    \"application_name\",\n    \"source\",\n    \"input_type\"\n  ] }\n}\n\noutput {\n# file {\n#   path =&gt; \"/etc/logstash/pg.log\"\n#   codec =&gt; line { format =&gt; \"custom format: %{message}\"}\n# }\n\n#   for debug\n\n#    stdout {\n#        codec =&gt; rubydebug\n#    }\n\n\n elasticsearch {\n   hosts =&gt; \"*.*.*.*:9200\"\n#   manage_template =&gt; false\n   template_name =&gt; \"postgres_template\"\n   index =&gt; \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n   #user =&gt; \"elastic\"\n   #password =&gt; \"123456\"\n }\n}\n</code></pre>","tags":[]},{"location":"postgres/pg_fdw/","title":"\u8de8\u5e93\u64cd\u4f5c","text":"<p>dblink</p> <p>https://www.cnblogs.com/lottu/p/13331387.html</p> <p>fdw</p> <p>https://www.cnblogs.com/lottu/p/13345187.html</p> <p>\u6ce8\u610f\u4e8b\u9879</p> <ul> <li> <p>\u67e5\u8be2\u6761\u4ef6\u4e0b\u63a8\uff0c\u65b0\u7248\u672c\u529f\u80fd\u66f4\u5168</p> </li> <li> <p>ddl \u64cd\u4f5c , fdw \u5982\u679c\u7528\u4e8e\u5386\u53f2\u5f52\u6863</p> </li> </ul>"},{"location":"postgres/pg_json/","title":"\u6570\u636e\u5e93\u7684json\u7c7b\u578b","text":"","tags":[]},{"location":"postgres/pg_json/#json-jsonb","title":"json \u4e0e jsonb","text":"<p>json \u4fdd\u6301\u539f\u59cb\u683c\u5f0f\uff0c  jsonb\u662f\u89e3\u6790\u8f93\u5165\u540e\u4fdd\u5b58\u7684\u4e8c\u8fdb\u5236\uff0c\u5728\u89e3\u6790\u65f6\u4f1a\u8fc7\u6ee4\u6389\u4e0d\u5fc5\u8981\u7684\u7a7a\u683c\u548c\u91cd\u590d\u7684\u5065\u3002</p> <pre><code>SELECT '{\"name\": \"zhangsan\", \"age\":      17, \"sex\":\"m\",\"age\":17.5}'::json;\n                            json                            \n------------------------------------------------------------\n {\"name\": \"zhangsan\", \"age\":      17, \"sex\":\"m\",\"age\":17.5}\n</code></pre> <pre><code>SELECT '{\"name\": \"zhangsan\", \"age\":      17, \"sex\":\"m\",\"age\":17.5}'::jsonb;\n                     jsonb                     \n-----------------------------------------------\n {\"age\": 17.5, \"sex\": \"m\", \"name\": \"zhangsan\"}\n</code></pre> <p>json \u63d2\u5165\u53ef\u80fd\u4f1a\u66f4\u5feb\u4e9b\uff0cjsonb\u7684\u8bfb\u53d6\u66f4\u5feb</p>","tags":[]},{"location":"postgres/pg_json/#_1","title":"\u64cd\u4f5c\u7b26","text":"","tags":[]},{"location":"postgres/pg_json/#json-jsonb_1","title":"json ,jsonb \u64cd\u4f5c\u7b26","text":"\u64cd\u4f5c\u7b26 \u53f3\u64cd\u4f5c\u6570\u7c7b\u578b \u63cf\u8ff0 \u793a\u4f8b \u7ed3\u679c -&gt; int \u83b7\u53d6JSON\u6570\u7ec4\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 select '[{\"a\":\"foo\"},{\"b\":\"bar\"},{\"c\":\"baz\"}]'::json-&gt;2; {\"c\":\"baz\"} -&gt; text \u901a\u8fc7\u952e\u83b7\u53d6\u503c select '{\"a\": {\"b\":\"foo\"}}'::json-&gt;'a'; {\"b\":\"foo\"} -&gt;&gt; int \u83b7\u53d6JSON\u6570\u7ec4\u5143\u7d20\u4e3a text select '[1,2,3]'::json-&gt;&gt;2; 3 -&gt;&gt; text \u901a\u8fc7\u952e\u83b7\u53d6\u503c\u4e3atext select '{\"a\":1,\"b\":2}'::json-&gt;&gt;'b'; 2 #&gt; text[] \u5728\u6307\u5b9a\u7684\u8def\u5f84\u83b7\u53d6JSON\u5bf9\u8c61 select '{\"a\": {\"b\":{\"c\": \"foo\"}}}'::json#&gt;'{a,b}'; {\"c\": \"foo\"} #&gt;&gt; text[] \u5728\u6307\u5b9a\u7684\u8def\u5f84\u83b7\u53d6JSON\u5bf9\u8c61\u4e3a text select '{\"a\":[1,2,3],\"b\":[4,5,6]}'::json#&gt;&gt;'{a,2}'; 3","tags":[]},{"location":"postgres/pg_json/#jsonb","title":"jsonb \u64cd\u4f5c\u7b26","text":"","tags":[]},{"location":"postgres/pg_json/#_2","title":"\u7d22\u5f15\u67e5\u8be2","text":"","tags":[]},{"location":"postgres/pg_json/#key-btree","title":"\u5355key \u67e5\u8be2\u3002btree \u7d22\u5f15","text":"<pre><code>postgres=# create table test (id int, js jsonb);  \nCREATE TABLE  \n\npostgres=# create index idx_test_2 on test using btree (((js-&gt;&gt;'key1')::int));  \nCREATE INDEX  \n\npostgres=# explain select * from test where (js-&gt;&gt;'key1')::int between 1 and 10 ;  \n                                              QUERY PLAN                                                \n------------------------------------------------------------------------------------------------------  \n Index Scan using idx_test_2 on test  (cost=0.15..24.27 rows=6 width=36)  \n   Index Cond: ((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10))  \n(2 rows)  \n\n</code></pre>","tags":[]},{"location":"postgres/pg_json/#keybtree_gin","title":"\u591aKEY\u6df7\u5408\uff0c\u4f7f\u7528btree_gin, \u8868\u8fbe\u5f0f\u7d22\u5f15","text":"<pre><code>postgres=# create extension btree_gin;  \nCREATE EXTENSION  \n\npostgres=# create index idx_test_1 on test using gin (((js-&gt;&gt;'key1')::int), ((js-&gt;&gt;'key2')::int), ((js-&gt;&gt;'key3')::int));  \nCREATE INDEX  \n\npostgres=# explain select * from test where (js-&gt;&gt;'key1')::int between 1 and 10   \npostgres-# ;  \n                                                 QUERY PLAN                                                   \n------------------------------------------------------------------------------------------------------------  \n Bitmap Heap Scan on test  (cost=24.07..33.64 rows=6 width=36)  \n   Recheck Cond: ((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10))  \n   -&gt;  Bitmap Index Scan on idx_test_1  (cost=0.00..24.06 rows=6 width=0)  \n         Index Cond: ((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10))  \n(4 rows)  \n\npostgres=# explain select * from test where (js-&gt;&gt;'key1')::int between 1 and 10  or (js-&gt;&gt;'key2')::int between 1 and 15;  \n                                                                                             QUERY PLAN                                                                                               \n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  \n Bitmap Heap Scan on test  (cost=48.13..59.32 rows=13 width=36)  \n   Recheck Cond: (((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10)) OR ((((js -&gt;&gt; 'key2'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key2'::text))::integer &lt;= 15)))  \n   -&gt;  BitmapOr  (cost=48.13..48.13 rows=13 width=0)  \n         -&gt;  Bitmap Index Scan on idx_test_1  (cost=0.00..24.06 rows=6 width=0)  \n               Index Cond: ((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10))  \n         -&gt;  Bitmap Index Scan on idx_test_1  (cost=0.00..24.06 rows=6 width=0)  \n               Index Cond: ((((js -&gt;&gt; 'key2'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key2'::text))::integer &lt;= 15))  \n(7 rows)  \n\npostgres=# explain select * from test where (js-&gt;&gt;'key1')::int between 1 and 10  and (js-&gt;&gt;'key2')::int between 1 and 15;  \n                                                                                             QUERY PLAN                                                                                                \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  \n Bitmap Heap Scan on test  (cost=40.00..44.05 rows=1 width=36)  \n   Recheck Cond: ((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10) AND (((js -&gt;&gt; 'key2'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key2'::text))::integer &lt;= 15))  \n   -&gt;  Bitmap Index Scan on idx_test_1  (cost=0.00..40.00 rows=1 width=0)  \n         Index Cond: ((((js -&gt;&gt; 'key1'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key1'::text))::integer &lt;= 10) AND (((js -&gt;&gt; 'key2'::text))::integer &gt;= 1) AND (((js -&gt;&gt; 'key2'::text))::integer &lt;= 15))  \n(4 rows)  \n\n</code></pre>","tags":[]},{"location":"postgres/pg_json/#gin","title":"gin \u7d22\u5f15\u7684\u652f\u6301","text":"<pre><code>The default GIN operator class for jsonb supports queries with top-level key-exists operators ?, ?&amp; and ?| operators and path/value-exists operator @&gt;.  \n\nThe non-default GIN operator class jsonb_path_ops supports indexing the @&gt; operator only.  \n</code></pre> <p>\u652f\u6301 @&gt; \u64cd\u4f5c\u7b26\u7684\u7d22\u5f15\u5982\u4e0b\uff08jsonb_path_ops\u53ea\u652f\u6301@&gt;\u64cd\u4f5c\u7b26\uff0c\u7d22\u5f15\u7684\u4f53\u79ef\u8981\u5c0f\u4e9b\u4f46\u662f\u6548\u7387\u9ad8\uff09 </p> <pre><code>create table tbl(id int, js jsonb);\n\ncreate index idx_tbl_1 on tbl using gin (js jsonb_path_ops);\n</code></pre> <p>\u652f\u6301\u9664\u8303\u56f4\u67e5\u8be2\u4ee5\u5916\u7684\u6240\u6709\u67e5\u8be2\u7684\u7d22\u5f15\u5982\u4e0b</p> <pre><code>create table tbl(id int, js jsonb);  \n\npostgres=# create index idx_tbl_1 on tbl using gin (js);  -- \u4f7f\u7528\u9ed8\u8ba4ops\u5373\u53ef \n\n</code></pre>","tags":[]},{"location":"postgres/pg_json/#json-key-value","title":"JSON KEY VALUE\u503c\u8303\u56f4\u67e5\u8be2\u52a0\u901f","text":"<p>\u628a\u8303\u56f4\u67e5\u8be2\u7684\u7c7b\u578b\u63d0\u53d6\u51fa\u6765\uff0c\u521b\u5efabtree\u8868\u8fbe\u5f0f\u7d22\u5f15\uff0c\u5982\u679c\u6709\u4efb\u610f\u7ec4\u5408\u7684\u8303\u56f4\u67e5\u8be2\uff0c\u4f7f\u7528gin\u6216rum\u8868\u8fbe\u5f0f\u7d22\u5f15\u3002</p> <pre><code>create extension btree_gin;  \ncreate index idx1 on tbl using gin( ((js-&gt;&gt;'k1')::float8), ((js-&gt;&gt;'k2')::numeric), ... ((js-&gt;&gt;'kn')::float8) );   \n</code></pre> <pre><code>create extension rum;  \ncreate index idx1 on tbl using rum( ((js-&gt;&gt;'k1')::float8), ((js-&gt;&gt;'k2')::numeric), ... ((js-&gt;&gt;'kn')::float8) );\n</code></pre>","tags":[]},{"location":"postgres/pg_json/#_3","title":"\u6a21\u7cca\u5339\u914d\u7d22\u5f15","text":"<p>https://pgxn.org/dist/parray_gin/1.3.3/</p> <p>\u7ed3\u5408\u4e86pg_trgm, \u5c06\u6570\u7ec4\u6216JSON\u4e2d\u7684value\u6253\u6563\u6210token\u540e\u8fdb\u884c\u7d22\u5f15\u6784\u5efa. \u5b9e\u73b0\u6570\u7ec4\u6216JSON\u5143\u7d20\u7ea7\u522b\u7684\u6a21\u7cca\u5339\u914d</p>","tags":[]},{"location":"postgres/pg_lock/","title":"\u9501\u673a\u5236","text":"<p>https://blog.csdn.net/pg_hgdb/article/details/79403651</p> <p>https://habr.com/en/company/postgrespro/blog/500714/</p> <p>\u8868\u9501 https://www.modb.pro/db/26462</p> <pre><code>\u67e5\u770b\u88ab\u5835\u585e\u7684\u4efb\u52a1\nselect * from pg_locks where not granted;\n locktype | database | relation | page | tuple | virtualxid | transactionid | classid | objid | objsubid | virtualtransaction | pid | mode | granted | fastpath \n----------+----------+----------+------+-------+------------+---------------+---------+-------+----------+--------------------+-----+------+---------+----------\n(0 \u884c\u8bb0\u5f55)\n\n\u67e5\u770b\u7b49\u5f85\u9501\u4fe1\u606f\uff0c\u662f\u88ab\u8c01\u5835\u585e\u4e86\nselect pg_blocking_pids(pid);\n pg_blocking_pids \n------------------\n {}\n\n\u7ec8\u6b62\u8fdb\u7a0b\n\nselect pg_cancel_backend(pid);  # select \n\nselect pg_terminate_backend(pid); # update insert delete \n</code></pre>"},{"location":"postgres/pg_lock/#_1","title":"\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b","text":"<p>Postgres \u6570\u636e\u5e93\u5171\u6709\u4e09\u79cd\u6570\u636e\u9694\u79bb\u7ea7\u522b\u3002</p> <ul> <li>Read Commit \u8bfb\u770b\u63d0\u4ea4  \u9ed8\u8ba4\u7ea7\u522b \u5728\u8bfb\u5f00\u59cb\u7684\u65f6\u5019\u5efa\u7acb\u6570\u636e\u5feb\u7167</li> <li>Repeat Read \u53ef\u91cd\u590d\u8bfb\u3002\u5728\u4e8b\u52a1\u5f00\u59cb\u7684\u65f6\u5019\u5efa\u7acb\u6570\u636e\u5feb\u7167</li> <li>SSI Serializable \u5e8f\u5217\u5316 \u7406\u89e3\u4e3a\u53ea\u6709\u4e00\u4e2a\u7528\u6237\u4f7f\u7528\u7684\u60c5\u51b5</li> </ul> <p>\u4f7f\u7528\u4e3e\u4f8b</p> <pre><code>postgres=# \\h lock\nCommand:     LOCK\nDescription: lock a table\nSyntax:\nLOCK [ TABLE ] [ ONLY ] name [ * ] [, ...] [ IN lockmode MODE ] [ NOWAIT ]\n\nwhere lockmode is one of:\n\n    ACCESS SHARE | ROW SHARE | ROW EXCLUSIVE | SHARE UPDATE EXCLUSIVE\n    | SHARE | SHARE ROW EXCLUSIVE | EXCLUSIVE | ACCESS EXCLUSIVE\n</code></pre> <p>\u9501\u5b9a\u4e00\u5f20\u8868</p> <pre><code>postgres=# begin ;\nBEGIN\npostgres=# lock TABLE wt IN access exclusive mode ;\nLOCK TABLE\n\n</code></pre>"},{"location":"postgres/pg_pathman/","title":"pg_pathman \u5206\u533a\u8868","text":"","tags":[]},{"location":"postgres/pg_pathman/#_1","title":"\u4ecb\u7ecd","text":"<p>\u5206\u533a\u8868\u7684\u8bc9\u6c42\u5728\u73b0\u5b9e\u7684\u751f\u6210\u4e2d\u7684\u610f\u4e49\u4e0d\u5fc5\u591a\u8bf4\uff0cpg\u4ee5\u524d\u7684\u5b9e\u73b0\u65b9\u5f0f\u591a\u91c7\u7528\u89e6\u53d1\u5668\uff0crules\u5b9e\u73b0\u3002\u6570\u636e\u91cf\u4e0a\u6765\u65f6\u6027\u80fd\u660e\u663e\u4e0d\u5c3d\u5982\u610f\u3002  \u867d\u7136pg10 \uff0c11 \u7248\u672c\u5728\u5206\u533a\u8868\u7684\u7279\u6027\u4e0a\u4e0d\u65ad\u53d1\u529b\u3002\u4f46\u662f\u6027\u80fd\u5565\u8fd8\u662f\u4e0d\u591f\u7ed9\u529b\u3002  pg_pathman \u5206\u533a\u8868\u529f\u80fd\u5728\u76ee\u524d\u7684pg\u7248\u672c10.6 \u4e2d\u4f18\u52bf\u8fd8\u662f\u975e\u5e38\u660e\u663e\u7684\u3002   </p> <p>\u5728\u671f\u5f85pg\u81ea\u8eab\u5206\u533a\u8868\u7279\u6027\u7684\u540c\u65f6\uff0c\u5f53\u524d\u7684pg10\u4e2d\u8fd8\u662f\u4f7f\u7528pg_pathman\u6765\u5b9e\u73b0\u5206\u533a\u529f\u80fd\u5427\u3002</p>","tags":[]},{"location":"postgres/pg_pathman/#pathmanpg11","title":"pathman\u4e0epg11 \u5bf9\u6bd4","text":"<p>\u4f18\u70b9: \u652f\u6301HASH\u548cRANGE\u5206\u533a\uff0c\u540e\u7eed\u4f1a\u652f\u6301LIST\u5206\u533a \u652f\u6301\u81ea\u52a8\u548c\u624b\u52a8\u7684\u5206\u533a\u7ef4\u62a4 \u4e3a\u5206\u533a\u8868\u751f\u6210\u66f4\u6709\u6548\u7684\u6267\u884c\u8ba1\u5212 \u901a\u8fc7\u5f15\u5165\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7684\u6267\u884c\u8ba1\u5212\u8282\u70b9RuntimeAppend &amp; RuntimeMergeAppend\uff0c \u5b9e\u73b0\u8fd0\u884c\u65f6\u52a8\u6001\u6dfb\u52a0\u5206\u533a\u5230\u6267\u884c\u8ba1\u5212\u4e2d \u4e3a\u65b0\u63d2\u5165\u6570\u636e\u81ea\u52a8\u521b\u5efa\u5206\u533a(\u53ea\u5bf9RANGE\u5206\u533a) \u63d0\u4f9b\u7528\u6237callbacks\u63a5\u53e3\u5904\u7406\u521b\u5efa\u5206\u533a\u4e8b\u4ef6\u3002   \u63d0\u4f9b\u5728\u7ebf\u5206\u533a\u5b9e\u65bd(\u5728\u7ebf\u91cd\u5b9a\u4e49)\uff0c\u7236\u8868\u6570\u636e\u8fc1\u79fb\u5230\u5b50\u8868\uff0c\u62c6\u5206\uff0c \u5408\u5e76\u5206\u533a</p> <p>\u4e0d\u8db3:  \u4e0d\u652f\u6301list\u5206\u533a;\u4e0d\u652f\u6301\u4e8c\u7ea7\u5206\u533a;\u6743\u9650\uff0c\u7d22\u5f15\uff0ctrigger\u7b49\u65e0\u6cd5\u7ee7\u627f; \u4fee\u6539\u4e3b\u952e\u9ed8\u8ba4\u7684seq\u9700\u8981\u91cd\u5efa\u5206\u533a\u3002    </p> <p>PG11\u5185\u7f6e\u5206\u533a  \u4f18\u70b9:  \u652f\u6301hash\uff0crange\uff0clist\u5206\u533a \u652f\u6301\u591a\u5b57\u6bb5\u7ec4\u5408\u5206\u533a\uff0c\u652f\u6301\u8868\u8fbe\u5f0f\u5206\u533a \u652f\u6301\u521b\u5efa\u4e3b\u952e\uff0c\u5916\u952e\uff0c\u7d22\u5f15\uff0c\u5206\u533a\u8868\u81ea\u52a8\u7ee7\u627f\u3002 \u652f\u6301update\u5206\u533a\u952e \u652f\u6301\u5206\u533a\u8868DETACH\uff0cATTACH\uff0c\u652f\u6301\u4e8c\u7ea7\u5206\u533a \u5206\u533a\u81ea\u52a8\u521b\u5efa  Default partition Partition improvements   </p> <p>\u4e0d\u8db3:   </p> <p>\u5728\u4e3b\u8868\u6dfb\u52a0\u6743\u9650\uff0c\u7d22\u5f15\uff0ctrigger\u7b49\u65e0\u6cd5\u7ee7\u627f \u5206\u533a\u8868\u4e0d\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u8868\u7684\u5916\u952e\u4e3b\u8868   </p>","tags":[]},{"location":"postgres/pg_pathman/#_2","title":"\u5206\u533a\u8868\u6570\u91cf\u5bf9\u63d2\u5165\u6570\u636e\u7684\u5f71\u54cd","text":"<p>https://www.jianshu.com/p/1cba77d18694</p>","tags":[]},{"location":"postgres/pg_pathman/#pathman","title":"pathman \u5206\u533a\u8868 \u8f6c\u6362\u4e3a\u539f\u751f\u5206\u533a\u8868","text":"<p>https://github.com/digoal/blog/blob/master/201911/20191113_01.md</p> <p>\u4e3b\u8981\u601d\u8def</p> <p>1 \u521b\u5efa\u4e00\u4e2a\u4e0e\u539f\u6765\u5206\u533a\u8868\u4e00\u6837\u7684\u4e3b\u8868\u5305\u62ec\u5206\u533a\u65b9\u5f0f \u3002</p> <p>2 \u5c06\u539f\u6765\u7684\u4e3b\u8868\u4e0a\u7684\u5206\u533a\u90fd\u5378\u8f7d\u4e3a\u666e\u901a\u8868\uff0c\u5728\u91cd\u65b0\u6309\u7167\u539f\u751f\u5206\u533a\u8868\u7684\u65b9\u5f0f\u6302\u8f7d\u4e0a\u53bb\u3002</p> <p>\u76f4\u63a52 \u4e5f\u884c</p> <p>\u62d3\u5c55\u601d\u8003\u3002 \u5206\u533a\u6570\u636e\u8fc1\u79fb\u4f7f\u7528pg_pathman\uff0c\u8fc1\u79fb\u540e\u518d\u8f6c\u6362\u5230\u539f\u751f\u8868\u3002</p>","tags":[]},{"location":"postgres/pg_pathman/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u9700\u8981\u5c06pg_pathman\u653e\u5728\u540e\u9762\u6ce8\u518c\uff0c\u5982pg_stat_statements\u3002</p> <pre><code>shared_preload_libraries = 'pg_stat_statements,pg_pathman'\n</code></pre> <p>\u521b\u5efa\u62d3\u5c55</p> <pre><code>CREATE SCHEMA pathman;\nGRANT USAGE ON SCHEMA pathman TO PUBLIC;\nCREATE EXTENSION pg_pathman WITH SCHEMA pathman;\n</code></pre>","tags":[]},{"location":"postgres/pg_pathman/#_4","title":"\u53c2\u8003","text":"<p>https://github.com/postgrespro/pg_pathman</p> <p>https://github.com/digoal/blog/blob/362b84417ca8b7aaf1add31fe7689c347642bb9a/201610/20161024_01.md</p>","tags":[]},{"location":"postgres/pg_pathman/#_5","title":"\u5e38\u89c1\u9519\u8bef","text":"<pre><code>FATAL:  could not load library \"/usr/pgsql-12/lib/pg_pathman.so\": /usr/pgsql-12/lib/pg_pathman.so: undefined symbol: expandTableLikeClause\npostgres \u7248\u672c\u95ee\u9898\n</code></pre>","tags":[]},{"location":"postgres/pg_pathman/#_6","title":"\u7b80\u5355\u5e94\u7528","text":"<p>1 \u521b\u5efa\u8868\u5206\u533a\uff0c\u7981\u6b62\u6570\u636e\u8fc1\u79fb</p> <p>2 \u5e76\u884c\u8fc1\u79fb\u6570\u636e</p> <p>3 \u7981\u6b62\u4e3b\u8868</p> <p>\u8868 log  \u5fc5\u9700\u6ee1\u8db3</p> <ul> <li> <p>\u5b57\u6bb5 created_time not null</p> </li> <li> <p>\u65e0\u5916\u952e\u7ea6\u675f </p> </li> </ul> <p>\u6309\u6708\u5206\u8868,\u540e\u7eed\u6570\u636e\u8d85\u51fa\u8303\u56f4\u4f1a\u81ea\u52a8\u521b\u5efa\u5206\u533a\uff08\u9ed8\u8ba4\uff09</p> <p>\u67e5\u770b\u8868\u4e2d\u6700\u65e9\u65e5\u671f</p> <pre><code>select min(created_time) from log;\n---\n2018-05-18 00:00:00\n</code></pre> <p>\u5206\u8868 false \u8868\u793a\u7981\u6b62\u6570\u636e\u79fb\u52a8</p> <pre><code>select create_range_partitions('log'::regclass,'created_time','2018-05-18 00:00:00'::timestamp,interval '1 month', null,false);\n</code></pre> <p>\u67e5\u770b\u5206\u533a\u8868</p> <pre><code>select * from pathman_partition_list where parent = 'log'::regclass;\n</code></pre> <p>\u5e76\u884c\u8fc1\u79fb\u6570\u636e</p> <pre><code>select partition_table_concurrently('log'::regclass,10000,1.0);\n</code></pre> <p>\u67e5\u770b\u8fc1\u79fb\u72b6\u6001</p> <pre><code>select * from pathman_concurrent_part_tasks ;\n</code></pre> <p>\u7981\u4e3b\u8868</p> <pre><code>select set_enable_parent('log'::regclass,false);\n</code></pre> <p>\u67e5\u770b\u6570\u636e</p> <pre><code>select count(1) from only log;\n</code></pre>","tags":[]},{"location":"postgres/pg_pathman/#_7","title":"\u5206\u533a\u8868\u5e38\u7528\u7ba1\u7406","text":"<p>\u5c06\u4e00\u4e2a\u5206\u533a\u62c6\u5206\u4e3a\u4e24\u4e2a\u5206\u533a</p> <pre><code>split_range_partition(partition_relid REGCLASS,\n                      split_value     ANYELEMENT,\n                      partition_name  TEXT DEFAULT NULL,\n                      tablespace      TEXT DEFAULT NULL)\n</code></pre> <p>\u5408\u5e76\u591a\u4e2a\u8fde\u7eed\u5206\u533a,\u6570\u636e\u5c06\u5230\u7b2c\u4e00\u4e2a\u5206\u533a</p> <pre><code>merge_range_partitions(variadic partitions REGCLASS[])\n</code></pre> <p>\u5411\u540e\u8ffd\u52a0\u4e00\u4e2a\u5206\u533a,\u5206\u533a\u95f4\u9694\u9ed8\u8ba4</p> <pre><code>append_range_partition(parent_relid   REGCLASS,\n                       partition_name TEXT DEFAULT NULL,\n                       tablespace     TEXT DEFAULT NULL)\n</code></pre> <p>\u5411\u524d\u8ffd\u52a0\u4e00\u4e2a\u5206\u533a\uff0c\u5206\u533a\u95f4\u9694\u9ed8\u8ba4</p> <pre><code>prepend_range_partition(parent_relid   REGCLASS,\n                        partition_name TEXT DEFAULT NULL,\n                        tablespace     TEXT DEFAULT NULL)\n</code></pre> <p>\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u95f4\u9694\u5206\u533a: \u5982\u52a0\u4e00\u4e2a</p> <pre><code>add_range_partition(parent_relid   REGCLASS,\n                    start_value    ANYELEMENT,\n                    end_value      ANYELEMENT,\n                    partition_name TEXT DEFAULT NULL,\n                    tablespace     TEXT DEFAULT NULL)\n</code></pre> <p>\u5220\u9664\u4e00\u4e2a\u5206\u533a\uff0c\u53ca\u6570\u636e\u662f\u5426\u5220\u9664. \u4e0d\u5220\u9664\u6570\u636e\u5c06\u5165\u4e3b\u8868</p> <pre><code>drop_range_partition(partition TEXT, delete_data BOOLEAN DEFAULT TRUE)\n</code></pre> <p>\u5378\u8f7d\u5206\u533a\u4e3a\u666e\u901a\u8868</p> <pre><code>detach_range_partition(partition_relid REGCLASS)\n</code></pre> <p>\u6302\u8f7d\u666e\u901a\u8868\u4e3a\u5206\u533a\u8868</p> <pre><code>attach_range_partition(parent_relid    REGCLASS,\n                       partition_relid REGCLASS,\n                       start_value     ANYELEMENT,\n                       end_value       ANYELEMENT)\n</code></pre>","tags":[]},{"location":"postgres/pg_pathman/#_8","title":"\u53c2\u6570","text":"<p>\u4fee\u6539\u9ed8\u8ba4\u5206\u533a\u95f4\u9694</p> <pre><code>set_interval(relation REGCLASS, value ANYELEMENT)\n</code></pre> <p>\u662f\u5426\u7981\u7528\u4e3b\u8868,\u7981\u7528\u540e\u6267\u884c\u8ba1\u5212\u5c06\u4e0d\u5728\u8d70\u4e3b\u8868</p> <pre><code>set_enable_parent(relation REGCLASS, value BOOLEAN)\n</code></pre> <p>\u662f\u5426\u81ea\u52a8\u521b\u5efa\u5206\u533a. \u5f00\u542f\u540e\u6ce8\u610f\u4e8b\u9879\uff0c \u5982\u679c\u6709\u4e00\u6761\u6570\u636e\u7684\u65f6\u95f4\u5f02\u5e38\uff0c\u4f1a\u521b\u5efa\u5927\u91cf\u7684\u5206\u533a\u8868\u3002\u707e\u96be</p> <pre><code>set_auto(relation REGCLASS, value BOOLEAN)\n</code></pre>","tags":[]},{"location":"postgres/pg_pathman/#_9","title":"\u9057\u7559\u95ee\u9898","text":"<p>1 \u539f\u8868\u5206\u533a\u540e\u6570\u636e\u78c1\u76d8\u5360\u7528\u589e\u52a0\u8fd1\u4e00\u500d\uff0c\u9700\u8981vacuum full \u89e3\u51b3. \u4e3b\u8868\u6b8b\u7559</p> <p>\u6570\u636e\u5168\u90e8\u5206\u533a\u540e vacuum \u901f\u5ea6\u4e5f\u5f88\u5feb</p> <p>2 \u5206\u533a\u540e\u5bf9\u7236\u8868\u6dfb\u52a0\u6216\u5220\u9664\u7d22\u5f15\u64cd\u4f5c\u5bf9\u73b0\u6709\u5206\u533a\u8868\u4e0d\u4ea7\u751f\u4f5c\u7528\uff0c\u4ec5\u5bf9\u65b0\u751f\u6210\u7684\u5206\u533a\u6709\u6548\u3002How do I create indexes?</p>","tags":[]},{"location":"postgres/pg_pathman/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u5bf9\u5df2\u7ecf\u5206\u533a\u7684\u8868\u4f7f\u7528copy \u65b9\u5f0f\u5bfc\u5165\u6570\u636e\u540e\u6570\u636e\u53ea\u5b58\u5728\u4e8e\u7236\u8868\u4e2d\uff0c\u6b64\u65f6\u6267\u884cpartition_table_concurrently \u65e0\u6548\u679c</p> <p>\u89e3\u51b3</p> <pre><code> 1 set_enable_parent('log'::regclass, true)\n</code></pre> <pre><code> 2 \u521b\u5efa\u5206\u533a\u8868 \u5982\u63d2\u5165\u4e00\u6761\u6570\u636e \uff0c \u65f6\u95f4\u6bd4\u6700\u5c0f\u65f6\u95f4\u8fd8\u5c0f\uff0cselect min(create) from only log\n</code></pre> <pre><code> 3 partition_table_concurrently\n</code></pre> <p>\u5206\u533a\u8868\u4e0e\u539f\u751f\u8868\u6bd4\u8f83\u3002\u7ba1\u7406\u4e0a\u5e26\u6765\u4e86\u5f88\u5927\u7684\u4fbf\u5229\uff0c\u5c24\u5176\u662f\u6570\u636e\u7684\u5f52\u6863\u6574\u7406\u3002</p> <p>\u6027\u80fd\u4e0a\u53cd\u800c\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u5dee\uff0c\u67e5\u8be2\u6761\u4ef6\u4e00\u5b9a\u8981\u5e26\u4e0a\u5206\u533a\u5065\uff0c\u5426\u5219\u4f1a\u626b\u63cf\u6240\u6709\u5b50\u8868\u3002</p> <p>\u5f53\u5355\u4e2a\u7d22\u5f15\u7684\u5927\u5c0f\u8d85\u8fc7\u7269\u7406\u5185\u5b58\u7684\u4e00\u534a\u65f6\u8003\u8651\u5206\u8868</p>","tags":[]},{"location":"postgres/pg_pathman/#_11","title":"\u9047\u89c1\u8fc7\u7684\u9519\u8bef","text":"<pre><code>ERROR:  unrecognized node type: 369\n\u80cc\u666f:  SQL statement \"select public.create_single_range_partition\n</code></pre> <p>\u89e3\u51b3\uff1a https://github.com/postgrespro/pg_pathman/issues/224</p> <p>\u5c06 1.5.11 \u5347\u7ea7\u81f3 1.5.12 </p>","tags":[]},{"location":"postgres/pg_prewarm/","title":"\u6570\u636e\u9884\u52a0\u8f7d","text":"<p>https://blog.csdn.net/Hehuyi_In/article/details/102653909</p>"},{"location":"postgres/pg_rewind/","title":"pg_rewind \u65f6\u95f4\u7ebf\u5bf9\u9f50","text":"<p>pg_rewind requires that the target server either has the wal_log_hints option enabled in postgresql.conf or data checksums enabled when the cluster was initialized with initdb. Neither of these are currently on by default. full_page_writes must also be set to on, but is enabled by default.</p> <p>wal_log_hints</p>"},{"location":"postgres/pg_rewind/#_1","title":"\u4f7f\u7528\u573a\u666f","text":"<p>\u5728\u6570\u636e\u5e93\u4e3b\u4ece\u7ed3\u6784\u4e2d\uff0c\u4ece\u53d8\u6210\u4e3b\u6613\u3002\u4f46\u662f\u7531\u4e3b\u53d8\u4e3a\u4ece\u5374\u9700\u8981\u4e00\u756a\u5468\u6298\u3002 \u5982\u679c\u662f\u6570\u636e\u91cf\u5c11\u65f6\u91cd\u65b0\u4f7f\u7528pg_backup\u62c9\u4e00\u4efd\u4ece\u5373\u53ef\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u91cf\u5927\u65f6\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u7684\u8017\u65f6\u8017\u80fd\u3002\u5bf9\u7ebf\u4e0a\u4e1a\u52a1\u4e5f\u4f1a\u6709\u5f71\u54cd\u3002     \u5728\u5b9e\u9645\u7684\u573a\u666f\u4e2d\u4e3b\u4ece\u4e4b\u95f4\u7684\u6570\u636e\u7edd\u5927\u90e8\u5206\u65f6\u4e00\u81f4\u7684\uff0c\u53ea\u6709\u975e\u5e38\u5c11\u91cf\u7684\u8fd1\u671f\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e0d\u4e00\u81f4\u7684\u3002 \u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u5f0f\u53ef\u4ee5\u5229\u7528\u5df2\u6709\u7684\u6570\u636e\uff0c\u5145\u5206\u5229\u7528\u5df2\u6709\u7684\u6570\u636e\u5462\uff1f pg_rewind\u767b\u573a \u544a\u522b\u4e00\u4e0b\u56de\u5230\u89e3\u653e\u524d\u3002</p>"},{"location":"postgres/pg_rewind/#_2","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u6570\u636e\u5e93\u6bcf\u6b21\u7684\u4e3b\u4ece\u5207\u6362\u65f6\uff0ctimeLine\u4f1a\u589e\u52a01\u3002 \u65b0\u8001\u6570\u636e\u5e93\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u7ebf\u4e0a\u8fd0\u884c\u3002 \u4f7f\u7528pg_rewind \u5c06\u6570\u636e\u62c9\u56de\u5230\u65f6\u95f4\u7ebf(timeLine)\u4ea7\u751f\u5206\u88c2\u7684\u90a3\u4e2a\u70b9\u4e0a\u3002\u91cd\u65b0\u9009\u62e9\u65f6\u95f4\u7ebf\uff0c\u91cd\u653e\u65b0\u65f6\u95f4\u7ebf\u4e0a\u7684wal\u65e5\u5fd7\uff0c\u4f7f\u4e24\u4e2a\u6570\u636e\u5e93\u91cd\u65b0\u56de\u5230\u4e00\u4e2a\u65f6\u95f4\u7ebf\uff0c\u5e76\u4e14\u6570\u636e\u4e00\u81f4\u3002  </p>"},{"location":"postgres/pg_rewind/#_3","title":"\u5f00\u59cb\u5b9e\u9a8c","text":"<p>\u80cc\u666f: </p> <p>\u4e3b\u4ece\u6570\u636e\u5e93\u7ed3\u6784</p> <p>10.1.88.71 \u4e3b\u5e93 10.1.88.72 \u4ece\u5e93</p> <p>\u76ee\u6807</p> <p>\u6570\u636e\u5e93\u4e3b\u4ece\u5151\u6362\uff0c \u4e3b\u964d\u4e3a\u4ece\u65f6\u4f7f\u7528pg_rewind\u6821\u5bf9\u65f6\u95f4\u7ebf</p>"},{"location":"postgres/pg_rewind/#_4","title":"\u5b9e\u9645\u64cd\u4f5c","text":"<p>\u6ce8\u610f\u4e8b\u9879 : </p> <ul> <li>\u5fc5\u987b\u5f00\u542ffull_page_writes \u9ed8\u8ba4\u5f00\u542f</li> <li>\u5fc5\u987b\u5f00\u542fwal_log_hints \u4fee\u6539\u540e\u9700\u8981\u91cd\u542f \u6216\u8005data block checksum \u6570\u636e\u5e93\u521d\u59cb\u5316\u65f6\u8bbe\u7f6e</li> </ul> <p>\u5982\u679c\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u6ca1\u6709\u5f00\u542fchecksum ,\u5728version 12 \u53ca\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u53ef\u4ee5\u4f7f\u7528 pg_checksum \u91cd\u65b0\u8bbe\u7f6e  </p> <p>1 \u5c0610.1.88.72\u4ece\u5e93\u53d8\u6210\u4e3b\u5e93</p> <pre><code>#\u4ece\u53d8\u4e3b\ntouch /home/postgres.trigger\n#\u67e5\u770b\u65e5\u5fd7\n2019-03-15 14:15:02.608 CST [7831] LOG:  trigger file found: /home/postgres.trigger\n2019-03-15 14:15:02.608 CST [7831] LOG:  redo done at 0/2000130\n2019-03-15 14:15:02.608 CST [7831] LOG:  selected new timeline ID: 2\n2019-03-15 14:15:02.608 CST [7828] LOG:  database system is ready to accept read only connections\n2019-03-15 14:15:02.686 CST [7831] LOG:  archive recovery complete\n2019-03-15 14:15:02.703 CST [7828] LOG:  database system is ready to accept connections\n#\u6b64\u65f6\u4e24\u4e2a\u6570\u636e\u5e93\u90fd\u53ef\u5199\n</code></pre> <p>2 \u6a21\u62df\u5411\u4e24\u4e2a\u6570\u636e\u5e93\u4e2d\u5199\u6570\u636e</p> <p>3 \u5c06\u6570\u636e\u5e93\u539f\u4e3b\u5e93\uff0810.1.88.71\uff09\u53d8\u4e3a\u4ece\u5e93</p>"},{"location":"postgres/pg_rewind/#_5","title":"\u4e00\u4e0b\u6b65\u9aa4\u5fc5\u987b\u6309\u7167\u987a\u5e8f\u6267\u884c\uff0c\u5e76\u4e14\u4e2d\u95f4\u4e0d\u8981\u64cd\u4f5c\u5931\u8bef\uff01\uff01\uff01","text":"<p>a \u505c\u5e93</p> <pre><code>  systemctl stop postgresql-10\n</code></pre> <p>b \u5207\u6362\u5230postgres\u7528\u6237 \u8fdb\u884c\u65f6\u95f4\u7ebf\u5bf9\u9f50</p> <pre><code># \u5207\u7528\u6237\nsudo su - postgres \n# \u6d4b\u8bd5 -n\n/usr/pgsql-10/bin/pg_rewind -n -D /var/lib/pgsql/10/data/ --source-server=\"hostaddr=10.1.88.72 user=postgres port=5432\"\n# \u6b63\u5f0f\u6267\u884c\n/usr/pgsql-10/bin/pg_rewind -D /var/lib/pgsql/10/data/ --source-server=\"hostaddr=10.1.88.72 user=postgres port=5432\" -P\n</code></pre> <p>c \u4fee\u6539 recovery.conf</p> <pre><code>mv recovery.done recovery.conf\n</code></pre> <p>vi recovery.conf</p> <pre><code>recovery_target_timeline='latest'\nstandby_mode = 'on'\nprimary_conninfo = 'user=postgres passfile=''/root/.pgpass'' host=10.1.88.72 port=5432 sslmode=prefer sslcompression=1 krbsrvname=postgres target_session_attrs=any'\n</code></pre>"},{"location":"postgres/pg_rewind/#_6","title":"\u6ce8\u610f\u4e8b\u9879:","text":"<p>host \u6307\u5411\u65b0\u4e3b\u5e93\u5730\u5740</p> <p>\u4ee5\u4e0a\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u6570\u636e\u5e93\u662f\u5173\u95ed\u72b6\u6001!!!! \uff0c \u5982\u679c\u51fa\u73b0\u6570\u636e\u5e93\u4ee5\u4e3b\u5e93\u7684\u5f62\u5f0f\u8fd0\u884c\u7684\u60c5\u51b5\uff0cpg_stat_replication \u4e2d\u7684 flush_lsn , replay_lsn \u4e0d\u5728\u66f4\u65b0\u3002\u53ca\u4e3b\u4ece\u6570\u636e\u4e0d\u66f4\u65b0\u3002 \u53ea\u80fd\u91cd\u65b0\u62c9\u53d6\u3002 </p> <p>pg_rewind \u4f1a\u5c06 recovery.conf \u4f1a\u88ab recovery.done\u3002\u590d\u5236\u8fc7\u7a0b\u4f1a\uff0c\u5982\u679c\u4e3b\u5e93\u6709\u7684recovery.done\u6587\u4ef6\uff0c\u5219\u4f1a\u590d\u5236\u5230\u5907\u5e93\u5e76\u8986\u76d6\u6587\u4ef6\u3002\u6b64\u65f6\u91cd\u65b0\u4fee\u6539recovery.done\u5e76\u91cd\u547d\u540d\u4e3arecovery.conf</p> <p>\u8c28\u8bb0\uff0c\u5728\u542f\u52a8\u6570\u636e\u524d\u4ed4\u7ec6\u68c0\u6d4b recovery.conf \u6587\u4ef6\u3002\u786e\u4fdd\u6570\u636e\u5e93\u4ee5\u4ece\u5e93\u5f62\u5f0f\u8fd0\u884c\u3002</p> <p>4 \u542f\u52a8\u6570\u636e\u5e93\uff0c\u5e76\u9a8c\u8bc1</p>"},{"location":"postgres/pg_rewind/#_7","title":"\u5907\u6ce8","text":"<p>\u4ee5\u524d\u64cd\u4f5c\u65f6\uff0c\u4e3b\u4ece\u5207\u6362\u540e\uff0c\u4e3b\u4ece\u72b6\u6001\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u5411\u4e3b\u5e93\u5199\u6570\u636e\uff0c\u4ece\u5e93\u6ca1\u6709\u540c\u6b65\u3002\uff08\u539f\u56e0\u4e0d\u8be6\uff09   \u4eca\u5929\u6309\u7167\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u6d4b\u8bd5\u7684\u591a\u6b21\u90fd\u6210\u529f\u4e86\uff01\uff01\uff01</p>"},{"location":"postgres/pg_rewind/#_8","title":"\u6269\u5c55","text":"<p>\u67e5\u770b\u6570\u636e\u5e93timeline \u7b49\u4fe1\u606f</p> <pre><code># \u5728\u6570\u636e\u6240\u5728\u4f4d\u7f6e\u6267\u884c\n/usr/pgsql-10/bin/pg_controldata .\n</code></pre>"},{"location":"postgres/pg_rewind/#_9","title":"\u66f4\u591a","text":"<p>https://github.com/digoal/blog/blob/master/201901/20190128_02.md</p>"},{"location":"postgres/pg_rewind/#_10","title":"\u5e94\u7528","text":"<p>\u5178\u578b\u5e94\u7528\u573a\u666f\uff0c\u5728\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u540e\uff0c\u539f\u4e3b\u5e93\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4\u4e2d\u3002</p>"},{"location":"postgres/pg_rewind/#_11","title":"\u539f\u7406","text":"<p>\u57fa\u672c\u601d\u60f3\u662f\u5c06\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u7ea7\u7684\u53d8\u5316\u4ece\u6e90\u96c6\u7fa4\u590d\u5236\u5230\u76ee\u6807\u96c6\u7fa4\u3002</p> <p>1 \u8fde\u63a5\u5230\u6e90\u7aef\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u5bf9\u6bd4\u627e\u5230\u672c\u5730\u6570\u636e\u5e93\u5206\u53c9\u70b9\u4e4b\u524d\u6700\u540e\u4e00\u6b21checkpoint\u7684\u5728wal\u65e5\u5fd7\u4e2d\u4f4d\u7f6e\uff0c\u89e3\u6790\u5206\u53c9\u70b9\u540e\u7684WAL\uff0c\u8bb0\u5f55\u8fd9\u4e9b\u4e8b\u52a1\u4fee\u6539\u4e86\u54ea\u4e9b\u6570\u636e\u5757</p> <p>2 \u5bf9\u4e8e\u6570\u636e\u6587\u4ef6\uff0c\u53ea\u4ece\u65b0\u4e3b\u62c9\u53d6\u88ab\u65e7\u4e3b\u4fee\u6539\u4e86\u7684\u6570\u636e\u5757\uff0c\u5e76\u8986\u76d6\u65e7\u4e3b\u6570\u636e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u6570\u636e\u5757</p> <p>3 \u62f7\u8d1dWAL segments, <code>pg_xact</code>,  \u53ca\u914d\u7f6e\u6587\u4ef6\uff0c \u5ffd\u7565 <code>pg_dynshmem/</code>, <code>pg_notify/</code>, <code>pg_replslot/</code>, <code>pg_serial/</code>, <code>pg_snapshots/</code>, <code>pg_stat_tmp/</code>, and <code>pg_subtrans/</code> </p> <p>4 \u628a\u65e7\u4e3b\u6539\u6210\u6062\u590d\u6a21\u5f0f\uff0c\u6062\u590d\u7684\u8d77\u70b9\u5219\u8bbe\u7f6e\u4e3a\u5206\u53c9\u70b9\u524d\u7684\u6700\u8fd1\u4e00\u6b21checkpoint</p> <p>5 \u5f53\u542f\u52a8\u65e7\u4e3b\u5e93\u540e\uff0c\u81ea\u52a8\u91cd\u653ewal\u65e5\u5fd7\u5373\u53ef\u5b8c\u6210\u6570\u636e\u7684\u540c\u6b65</p> <p>\u53c2\u52a0\u5b98\u65b9\u6587\u6863 https://www.postgresql.org/docs/14/app-pgrewind.html</p>"},{"location":"postgres/pg_rewind/#rewind","title":"\u521b\u5efarewind \u7528\u6237","text":"<pre><code>CREATE USER {{ REWIND_USER }} ENCRYPTED PASSWORD '{{ REWIND_PASSWORD }}';\nGRANT EXECUTE ON function pg_catalog.pg_ls_dir(text, boolean, boolean) TO {{ REWIND_USER }};\nGRANT EXECUTE ON function pg_catalog.pg_stat_file(text, boolean) TO {{ REWIND_USER }};\nGRANT EXECUTE ON function pg_catalog.pg_read_binary_file(text) TO {{ REWIND_USER }};\nGRANT EXECUTE ON function pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean) TO {{ REWIND_USER }};\n</code></pre>"},{"location":"postgres/pg_rewrite/","title":"pg_rewrite","text":"","tags":[]},{"location":"postgres/pg_rewrite/#_1","title":"\u5728\u7ebf\u5206\u533a\u8868","text":"<p>https://github.com/cybertec-postgresql/pg_rewrite</p>","tags":[]},{"location":"postgres/pg_rewrite/#_2","title":"\u4f7f\u7528\u6d4b\u8bd5","text":"<p>PostgreSQL server version 13 or later is required.</p>","tags":[]},{"location":"postgres/pg_rman/","title":"pg_rman \u5907\u4efd\u6062\u590d\u6570\u636e\u5e93","text":""},{"location":"postgres/pg_rman/#_1","title":"\u9002\u7528\u573a\u666f","text":"<p>PG_RMAN \u57fa\u4e8e\u672c\u5730\u6570\u636e\u62f7\u8d1d\u7684\u65b9\u5f0f\uff0c\u8981\u6c42\u4e0e\u6570\u636e\u5e93\u9700\u8981\u5b89\u88c5\u5728\u540c\u4e00\u4e2a\u673a\u5668\u8282\u70b9\u4e0a\u3002</p> <p>\u9002\u7528\u4e8e\u9879\u76ee\u521d\u671f\uff0c\u5bf9\u6570\u636e\u5e93\u7684\u89c4\u5212\u5904\u4e8e\u521d\u7ea7\u9636\u6bb5\u3002\u5b9e\u4f53\u673a\u4e0d\u5145\u5206\u7684\u60c5\u51b5\u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002</p> <p>\u6570\u636e\u5e93\u4f7f\u7528ssd\u76d8\uff0c\u5907\u4efd\u78c1\u76d8\u91c7\u7528\u4f01\u4e1asata\u5927\u76d8\u3002\u6216nfs\u7f51\u76d8\u7b49\u3002</p> <p>PG_RMAN \u652f\u6301\u5168\u5907\u4efd\uff0c\u589e\u91cf\u5907\u4efd\uff0c\u5907\u4efd\u9a8c\u8bc1\uff0c\u4fdd\u7559\u7b56\u7565\u7b49</p> <p>\u5e94\u7528\u8f6f\u4ef6\u5305\u5730\u5740 https://github.com/ossc-db/pg_rman/releases</p>"},{"location":"postgres/pg_rman/#_2","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code>-- \u521d\u59cb\u5316\n/usr/pgsql-13/bin/pg_rman -D /var/lib/pgsql/13/data/  -B /data/backup/ init\n\n-- \u5728/data/backup \u76ee\u5f55\u4e0b\u4f1a\u4ea7\u751f\u5982\u4e0b\u76ee\u5f55\u7ed3\u6784\nbackup \npg_rman.ini\nsystem_identifier\ntimeline_history\n\n-- \u5168\u5907\u4efd\npg_rman backup -B /pgdata/backup -D /var/lib/pgsql/13/data/  -b full  -h 127.0.0.1 -p 5432 -U backup -d postgres\n\n-- \u9a8c\u8bc1\npg_rman validate\n\n-- \u8be6\u60c5\u67e5\u770b\npg_rman show detail\n\n-- \u589e\u91cf\u5907\u4efd\npg_rman backup -B /pgdata/backup -D /var/lib/pgsql/13/data/  -b incremental  -h 127.0.0.1 -p 5432 -U backup -d postgres\n\n</code></pre> <p>\u8bbe\u7f6e\u4fdd\u7559\u7b56\u7565</p> <pre><code>vi pg_rman.ini \n\nKEEP_ARCLOG_DAYS = 7\nKEEP_DATA_DAYS = 7\nKEEP_SRVLOG_DAYS = 7\n\n</code></pre> <pre><code>-- \u6062\u590d\npg_rman restore -B /pgdata/backup -D /var/lib/pgsql/13/data/ \n\n\u6570\u636e\u6062\u590d\u540e \u6570\u636e\u5e93\u53ef\u80fd\u5904\u4e8epg_wal_replay_resume() \u7684\u72b6\u6001,\u5728\u6570\u636e\u5e93\u6267\u884c\u5b8c pg_wal_replay_resume \u540e\u6570\u636e\u5e93\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\n</code></pre>"},{"location":"postgres/pg_stat_statements/","title":"pg_stat_statements \u6570\u636e\u5e93\u7edf\u8ba1\u4fe1\u606f","text":"","tags":[]},{"location":"postgres/pg_stat_statements/#pg_stat_statements","title":"pg_stat_statements \u6269\u5c55","text":"","tags":[]},{"location":"postgres/pg_stat_statements/#_1","title":"\u5b89\u88c5","text":"<pre><code>yum install postgresql10-contrib.x86_64\n\n</code></pre>","tags":[]},{"location":"postgres/pg_stat_statements/#_2","title":"\u4fee\u6539\u914d\u7f6e\u53c2\u6570","text":"<pre><code>vi $PGDATA/postgresql.conf  \n\nshared_preload_libraries='pg_stat_statements'  # \u52a0\u8f7d\u6a21\u5757\u3000\u9700\u8981\u91cd\u542f , \u8fd1\u671f\u6d4b\u8bd5\u4e0d\u9700\u8981\u6dfb\u52a0\u4e5f\u53ef\u4ee5\u3002\u81ea\u5e26\u6269\u5c55\n\ntrack_io_timing = on  # \u8ddf\u8e2aIO\u8017\u65f6 (\u53ef\u9009)\n\ntrack_activity_query_size = 2048 # \u8bbe\u7f6e\u5355\u6761SQL\u7684\u6700\u957f\u957f\u5ea6\uff0c\u8d85\u8fc7\u88ab\u622a\u65ad\u663e\u793a\uff08\u53ef\u9009)\n\npg_stat_statements.max = 10000  #\u5728pg_stat_statements\u4e2d\u6700\u591a\u4fdd\u7559\u591a\u5c11\u6761\u7edf\u8ba1\u4fe1\u606f\uff0c\u901a\u8fc7LRU\u7b97\u6cd5\uff0c\u8986\u76d6\u8001\u7684\u8bb0\u5f55\u3002\n\npg_stat_statements.track = all  # all - (\u6240\u6709SQL\u5305\u62ec\u51fd\u6570\u5185\u5d4c\u5957\u7684SQL), top - \u76f4\u63a5\u6267\u884c\u7684SQL(\u51fd\u6570\u5185\u7684sql\u4e0d\u88ab\u8ddf\u8e2a), none - (\u4e0d\u8ddf\u8e2a)\n\npg_stat_statements.track_utility = off  #\u662f\u5426\u8ddf\u8e2a\u975eDML\u8bed\u53e5 (\u4f8b\u5982DDL\uff0cDCL)\uff0con\u8868\u793a\u8ddf\u8e2a, off\u8868\u793a\u4e0d\u8ddf\u8e2a \n\npg_stat_statements.save = on #\u91cd\u542f\u540e\u662f\u5426\u4fdd\u7559\u7edf\u8ba1\u4fe1\u606f  \n\n</code></pre>","tags":[]},{"location":"postgres/pg_stat_statements/#_3","title":"\u91cd\u542f\u6570\u636e\u5e93","text":"<pre><code>systemctl restart postgresql-10\n</code></pre>","tags":[]},{"location":"postgres/pg_stat_statements/#_4","title":"\u521b\u5efa\u6269\u5c55","text":"<pre><code>create extension pg_stat_statements;\n\n\\d pg_stat_statements\n                    View \"public.pg_stat_statements\"\n       Column        |       Type       | Collation | Nullable | Description \n---------------------+------------------+-----------+----------+---------\n userid              | oid              |           |          | \u6267\u884c\u8be5\u8bed\u53e5\u7684\u7528\u6237\u7684 OID\n dbid                | oid              |           |          | \u5728\u5176\u4e2d\u6267\u884c\u8be5\u8bed\u53e5\u7684\u6570\u636e\u5e93\u7684 OID\n queryid             | bigint           |           |          | \u5185\u90e8\u54c8\u5e0c\u7801\uff0c\u4ece\u8bed\u53e5\u7684\u89e3\u6790\u6811\u8ba1\u7b97\u5f97\u6765 \n query               | text             |           |          | \u8bed\u53e5\u7684\u6587\u672c\u5f62\u5f0f \n calls               | bigint           |           |          | \u88ab\u6267\u884c\u7684\u6b21\u6570 \n total_time          | double precision |           |          | \u5728\u8be5\u8bed\u53e5\u4e2d\u82b1\u8d39\u7684\u603b\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u8ba1 \n min_time            | double precision |           |          | \u5728\u8be5\u8bed\u53e5\u4e2d\u82b1\u8d39\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u8ba1 \n max_time            | double precision |           |          | \u5728\u8be5\u8bed\u53e5\u4e2d\u82b1\u8d39\u7684\u6700\u5927\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u8ba1\n mean_time           | double precision |           |          | \u5728\u8be5\u8bed\u53e5\u4e2d\u82b1\u8d39\u7684\u5e73\u5747\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u8ba1 \n stddev_time         | double precision |           |          | \u5728\u8be5\u8bed\u53e5\u4e2d\u82b1\u8d39\u65f6\u95f4\u7684\u603b\u4f53\u6807\u51c6\u504f\u5dee\uff0c\u4ee5\u6beb\u79d2\u8ba1 \n rows                | bigint           |           |          | \u8be5\u8bed\u53e5\u68c0\u7d22\u6216\u5f71\u54cd\u7684\u884c\u603b\u6570 \n shared_blks_hit     | bigint           |           |          | \u8be5\u8bed\u53e5\u9020\u6210\u7684\u5171\u4eab\u5757\u7f13\u51b2\u547d\u4e2d\u603b\u6570 \n shared_blks_read    | bigint           |           |          | \u8be5\u8bed\u53e5\u8bfb\u53d6\u7684\u5171\u4eab\u5757\u7684\u603b\u6570 \n shared_blks_dirtied | bigint           |           |          | \u8be5\u8bed\u53e5\u5f04\u810f\u7684\u5171\u4eab\u5757\u7684\u603b\u6570 \n shared_blks_written | bigint           |           |          | \n local_blks_hit      | bigint           |           |          | \n local_blks_read     | bigint           |           |          | \u8be5\u8bed\u53e5\u8bfb\u53d6\u7684\u672c\u5730\u5757\u7684\u603b\u6570 \n local_blks_dirtied  | bigint           |           |          | \u8be5\u8bed\u53e5\u5f04\u810f\u7684\u672c\u5730\u5757\u7684\u603b\u6570 \n local_blks_written  | bigint           |           |          | \u8be5\u8bed\u53e5\u5199\u5165\u7684\u672c\u5730\u5757\u7684\u603b\u6570 \n temp_blks_read      | bigint           |           |          | \n temp_blks_written   | bigint           |           |          | \n blk_read_time       | double precision |           |          | \u8be5\u8bed\u53e5\u82b1\u5728\u8bfb\u53d6\u5757\u4e0a\u7684\u603b\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u8ba1\uff08\u5982\u679ctrack_io_timing\u88ab\u542f\u7528\uff0c\u5426\u5219\u4e3a\u96f6) \n blk_write_time      | double precision |           |          | \u8be5\u8bed\u53e5\u82b1\u5728\u5199\u5165\u5757\u4e0a\u7684\u603b\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u8ba1\uff08\u5982\u679ctrack_io_timing\u88ab\u542f\u7528\uff0c\u5426\u5219\u4e3a\u96f6) \n\n</code></pre> <p>\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u4e86\u4e00\u4e2a\u540d\u4e3a pg_stat_statements \u7684\u89c6\u56fe,\u5bf9\u6570\u636e\u5e93\u7684\u8ddf\u8e2a\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e2a\u89c6\u56fe\u5c55\u5f00\u3002</p>","tags":[]},{"location":"postgres/pg_stat_statements/#top-sql","title":"\u5206\u6790TOP SQL","text":"<p>\u6700\u8017IO SQL</p> <p>\u5355\u6b21\u8c03\u7528\u6700\u8017IO SQL TOP 5</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by (blk_read_time+blk_write_time)/calls desc limit 5;  \n</code></pre> <p>\u603b\u6700\u8017IO SQL TOP 5</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by (blk_read_time+blk_write_time) desc limit 5;  \n</code></pre> <p>\u6700\u8017\u65f6 SQL</p> <p>\u5355\u6b21\u8c03\u7528\u6700\u8017\u65f6 SQL TOP 5</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by mean_time desc limit 5;  \n</code></pre> <p>\u603b\u6700\u8017\u65f6 SQL TOP 5</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by total_time desc limit 5;  \n</code></pre> <p>\u54cd\u5e94\u65f6\u95f4\u6296\u52a8\u6700\u4e25\u91cd SQL</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by stddev_time desc limit 5;  \n</code></pre> <p>\u6700\u8017\u5171\u4eab\u5185\u5b58 SQL</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by (shared_blks_hit+shared_blks_dirtied) desc limit 5;  \n</code></pre> <p>\u6700\u8017\u4e34\u65f6\u7a7a\u95f4 SQL</p> <pre><code>select userid::regrole, dbid, query from pg_stat_statements order by temp_blks_written desc limit 5;  \n</code></pre> <p>\u6700\u8bbf\u95ee\u9891\u7e41 SQL </p> <pre><code>select userid::regrole, dbid, query ,calls from pg_stat_statements order by calls desc limit 5;\n</code></pre>","tags":[]},{"location":"postgres/pg_stat_statements/#_5","title":"\u91cd\u7f6e\u7edf\u8ba1\u4fe1\u606f","text":"<p>pg_stat_statements\u662f\u7d2f\u79ef\u7684\u7edf\u8ba1\uff0c\u5982\u679c\u8981\u67e5\u770b\u67d0\u4e2a\u65f6\u95f4\u6bb5\u7684\u7edf\u8ba1\uff0c\u9700\u8981\u6253\u5feb\u7167</p> <pre><code>\u5efa\u5feb\u7167\u8868\ncreate table stat_pg_stat_statements as select log_time ,* from pg_stat_statements where 1=2;\n\u63d2\u5165\u6570\u636e\ninsert into stat_pg_stat_statements select now() ,* from pg_stat_statements;\n</code></pre> <p>\u7528\u6237\u4e5f\u53ef\u4ee5\u5b9a\u671f\u6e05\u7406\u5386\u53f2\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u901a\u8fc7\u8c03\u7528\u5982\u4e0bSQL</p> <pre><code>select pg_stat_statements_reset();  \n</code></pre>","tags":[]},{"location":"postgres/pg_stat_statements/#_6","title":"pg_stat_statements \u6570\u636e\u5e93\u7edf\u8ba1\u4fe1\u606f","text":"<p>https://github.com/cybertec-postgresql/pgwatch2</p> <p>https://github.com/wrouesnel/postgres_exporter</p>","tags":[]},{"location":"postgres/pg_trgm/","title":"pg_trgm\u7684gist\u548cgin\u7d22\u5f15\u52a0\u901f\u5b57\u7b26\u5339\u914d\u67e5\u8be2","text":""},{"location":"postgres/pg_trgm/#_1","title":"\u80cc\u666f","text":"<p>\u5bf9\u8f66\u724c\u53f7\u7684\u8bb0\u5fc6\u6709\u65f6\u53ef\u80fd\u8bb0\u4f4f\u7684\u662f\u524d\u51e0\u4f4d\uff0c\u6709\u65f6\u53ef\u80fd\u662f\u540e\u51e0\u4f4d\uff0c\u4e0d\u540c\u7684\u4eba\u8bb0\u8f66\u724c\u53f7\u7684\u4e60\u60ef\u4e5f\u4e0d\u540c\u3002  \u901a\u5e38\u662f\u662f\u5bb9\u6613\u8bb0\u4f4f\u9996\u5c3e\uff0c\u4e2d\u95f4\u4e0d\u6e05\u695a\u3002 \u90a3\u4e48\u5982\u4f55\u5728\u5927\u91cf\u5df2\u6709\u8f66\u724c\u6570\u636e\u4e2d\u5feb\u901f\u6839\u636e\u6a21\u7cca\u7684\u4fe1\u606f\u6765\u8fdb\u884c\u67e5\u8be2\u5462\uff1f </p>"},{"location":"postgres/pg_trgm/#_2","title":"\u6a21\u62df","text":"<p>\u6570\u636e\u5e93\u8868\u4e2d\u7ea6\u6709500w\u6761\u8f66\u724c\u53f7\u8bb0\u5f55\uff0c\u5bf9\u8868\u4e2d\u7684\u8f66\u724c\u53f7\u8fdb\u884c\u6a21\u7cca\u67e5\u8be2\u3002 \u5373\u652f\u6301 car_id like '%XXXX%XXX%' \u67e5\u8be2</p> <pre><code>---\u521b\u5efa\u8868\ncreate table t_car (id int , car_id text);\n\n--\u63d2\u5165500\u4e07\u8f66\u724c\u6570\u636e \n\ninsert into t_car select generate_series(1,5000000), (array['\u8fbdA','\u8fbdB','\u5409A','\u5409B','\u9ed1A','\u9ed1B'])[floor(random()*6+1)] || substring(md5(random()::text),0,6);\n\n--\u67e5\u770b\u6570\u636e\n\nselect * from t_car limit 5;\n id |  car_id  \n----+----------\n  1 | \u5409A43bb9\n  2 | \u5409B19b64\n  3 | \u8fbdAfb04e\n  4 | \u5409Bcf90c\n  5 | \u8fbdBe67df\n(5 \u884c\u8bb0\u5f55)\n\n</code></pre>"},{"location":"postgres/pg_trgm/#_3","title":"\u7d22\u5f15","text":"<ul> <li>\u987a\u5e8f\u626b\u63cf</li> </ul> <pre><code>explain analyze verbose select * from t_car where car_id = '\u8fbdBe67df';\n                                                          QUERY PLAN                                                          \n------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..54069.87 rows=2 width=14) (actual time=0.458..268.782 rows=4 loops=1)\n   Output: id, car_id\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on public.t_car  (cost=0.00..53069.67 rows=1 width=14) (actual time=140.151..253.061 rows=1 loops=3)\n         Output: id, car_id\n         Filter: (t_car.car_id = '\u8fbdBe67df'::text)\n         Rows Removed by Filter: 1666665\n         Worker 0: actual time=246.618..246.619 rows=0 loops=1\n         Worker 1: actual time=173.812..251.916 rows=1 loops=1\n Planning time: 0.174 ms\n Execution time: 268.820 ms\n(12 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a269.684 ms\n</code></pre> <ul> <li>btree</li> </ul> <pre><code>\u521b\u5efabtree\u7c7b\u578b\u7d22\u5f15\ncreate index btree_index_01 on t_car using btree (car_id);\n\n\u7b49\u503c\u67e5\u8be2,\u7ed3\u679c\u8fd8\u662f\u76f8\u5f53\u7ed9\u529b\npostgres=# explain analyze verbose select * from t_car where car_id = '\u8fbdBe67df';\n                                                          QUERY PLAN                                                          \n------------------------------------------------------------------------------------------------------------------------------\n Index Scan using btree_index_01 on public.t_car  (cost=0.43..3.77 rows=2 width=14) (actual time=0.047..0.057 rows=4 loops=1)\n   Output: id, car_id\n   Index Cond: (t_car.car_id = '\u8fbdBe67df'::text)\n Planning time: 0.218 ms\n Execution time: 0.091 ms\n(5 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a0.971 ms\n\n\u540e\u6a21\u7cca\u67e5\u8be2\uff0c\u4e0d\u5c3d\u4eba\u610f\u3002\u4e0d\u7b26\u5408\u9884\u671f\u3002\npostgres=# explain analyze verbose select * from t_car where car_id like '\u8fbdBe67df%';\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..54119.47 rows=498 width=14) (actual time=0.426..281.444 rows=4 loops=1)\n   Output: id, car_id\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on public.t_car  (cost=0.00..53069.67 rows=208 width=14) (actual time=138.857..270.492 rows=1 loops=3)\n         Output: id, car_id\n         Filter: (t_car.car_id ~~ '\u8fbdBe67df%'::text)\n         Rows Removed by Filter: 1666665\n         Worker 0: actual time=148.488..267.226 rows=2 loops=1\n         Worker 1: actual time=268.058..268.058 rows=0 loops=1\n Planning time: 0.153 ms\n Execution time: 281.481 ms\n(12 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a282.275 ms\n</code></pre> <p>\u4ee5\u4e0abtree\u7d22\u5f15\u6ca1\u6709\u8d77\u5230\u4f5c\u7528\u7684\u539f\u56e0,\u662f\u56e0\u4e3a\u5728\u521b\u5efa\u7d22\u5f15\u65f6\uff0c\u9ed8\u8ba4\u7684opclass\u4e3a\u7b49\u503c\u67e5\u8be2\u3002\u8be6\u60c5 </p> <pre><code>\u91cd\u65b0\u521b\u5efabtree\u7d22\u5f15\n\ndrop index btree_index_01;\ncreate index btree_index_01 on t_car using btree (car_id text_pattern_ops);\n\n\u8fd9\u6b21\u67e5\u8be2\u7ed3\u679c\u7b26\u5408\u9884\u671f\nexplain analyze verbose select * from t_car where car_id like '\u8fbdBe67df%';\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Index Scan using btree_index_01 on public.t_car  (cost=0.43..2.66 rows=498 width=14) (actual time=0.050..0.073 rows=4 loops=1)\n   Output: id, car_id\n   Index Cond: ((t_car.car_id ~&gt;=~ '\u8fbdBe67df'::text) AND (t_car.car_id ~&lt;~ '\u8fbdBe67dg'::text))\n   Filter: (t_car.car_id ~~ '\u8fbdBe67df%'::text)\n Planning time: 0.473 ms\n Execution time: 0.106 ms\n(6 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a1.407 ms\n\n\u524d\u6a21\u7cca\u67e5\u8be2\u8fd8\u662f\u4e0d\u884c\nexplain analyze verbose select * from t_car where car_id like '%\u8fbdBe67df';\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Gather  (cost=1000.00..54119.47 rows=498 width=14) (actual time=0.476..309.504 rows=4 loops=1)\n   Output: id, car_id\n   Workers Planned: 2\n   Workers Launched: 2\n   -&gt;  Parallel Seq Scan on public.t_car  (cost=0.00..53069.67 rows=208 width=14) (actual time=121.528..297.927 rows=1 loops=3)\n         Output: id, car_id\n         Filter: (t_car.car_id ~~ '%\u8fbdBe67df'::text)\n         Rows Removed by Filter: 1666665\n         Worker 0: actual time=200.075..294.789 rows=1 loops=1\n         Worker 1: actual time=164.486..295.015 rows=1 loops=1\n Planning time: 0.139 ms\n Execution time: 309.536 ms\n(12 \u884c\u8bb0\u5f55)\n\n\u65f6\u95f4\uff1a310.278 ms\n\n\u89e3\u51b3\u524d\u6a21\u7cca\u67e5\u8be2\u7684\u65b9\u6cd5\uff0c\u53cd\u8f6c\u67e5\u8be2\u5b57\u6bb5\u3002\u5728\u903b\u8f91\u4e0a\u53d8\u6210\u540e\u6a21\u7cca\u67e5\u8be2\u3002\ncreate index btree_index_02 on t_car using btree (reverse(car_id) text_pattern_ops);\n</code></pre> <ul> <li>gin</li> </ul> <p>\u771f\u6b63\u7684\u652f\u6301\u6a21\u7cca\u67e5\u8be2</p> <pre><code>\u521b\u5efa\u6269\u5c55\ncreate extension pg_trgm;\n\n\u521b\u5efagin\u7d22\u5f15\n\ncreate index gin_index_01 on t_car using gin(car_id gin_trgm_ops);\n\n\u6a21\u7cca\u67e5\u8be2\u901f\u5ea6\u4e5f\u80fd\u98de\nexplain analyze verbose select * from t_car where car_id like '%\u8fbdBe67df%';\n                                                       QUERY PLAN                                                       \n------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on public.t_car  (cost=36.86..579.80 rows=498 width=14) (actual time=3.936..4.018 rows=4 loops=1)\n   Output: id, car_id\n   Recheck Cond: (t_car.car_id ~~ '%\u8fbdBe67df%'::text)\n   Heap Blocks: exact=4\n   -&gt;  Bitmap Index Scan on gin_index_01  (cost=0.00..36.73 rows=498 width=0) (actual time=3.900..3.900 rows=4 loops=1)\n         Index Cond: (t_car.car_id ~~ '%\u8fbdBe67df%'::text)\n Planning time: 2.918 ms\n Execution time: 4.359 ms\n\nexplain analyze verbose select * from t_car where car_id like '%\u8fbdBe6%df%';\n                                                        QUERY PLAN                                                         \n---------------------------------------------------------------------------------------------------------------------------\n Bitmap Heap Scan on public.t_car  (cost=17.06..560.00 rows=498 width=14) (actual time=5.958..15.353 rows=35 loops=1)\n   Output: id, car_id\n   Recheck Cond: (t_car.car_id ~~ '%\u8fbdBe6%df%'::text)\n   Rows Removed by Index Recheck: 3273\n   Heap Blocks: exact=3098\n   -&gt;  Bitmap Index Scan on gin_index_01  (cost=0.00..16.93 rows=498 width=0) (actual time=5.172..5.172 rows=3308 loops=1)\n         Index Cond: (t_car.car_id ~~ '%\u8fbdBe6%df%'::text)\n Planning time: 0.224 ms\n Execution time: 15.462 ms\n(9 \u884c\u8bb0\u5f55)\n\n</code></pre>"},{"location":"postgres/pg_trgm/#_4","title":"\u6269\u5c55\u9605\u8bfb","text":"<p>rum \u662f\u4e00\u4e2a\u7d22\u5f15\u63d2\u4ef6\uff0c\u7531Postgrespro\u5f00\u6e90\uff0c\u9002\u5408\u5168\u6587\u68c0\u7d22\uff0c\u5c5e\u4e8eGIN\u7684\u589e\u5f3a\u7248\u672c\u3002   </p> <p>\u589e\u5f3a\u5305\u62ec\uff1a   </p> <p>1\u3001\u5728RUM\u7d22\u5f15\u4e2d\uff0c\u5b58\u50a8\u4e86lexem\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u6240\u4ee5\u5728\u8ba1\u7b97ranking\u65f6\uff0c\u4e0d\u9700\u8981\u56de\u8868\u67e5\u8be2\uff08\u800cGIN\u9700\u8981\u56de\u8868\u67e5\u8be2\uff09\u3002    </p> <p>2\u3001RUM\u652f\u6301phrase\u641c\u7d22\uff0c\u800cGIN\u65e0\u6cd5\u652f\u6301\u3002    </p> <p>3\u3001\u5728\u4e00\u4e2aRUM\u7d22\u5f15\u4e2d\uff0c\u5141\u8bb8\u7528\u6237\u5728posting tree\u4e2d\u5b58\u50a8\u9664ctid\uff08\u884c\u53f7\uff09\u4ee5\u5916\u7684\u5b57\u6bb5VALUE\uff0c\u4f8b\u5982\u65f6\u95f4\u6233\u3002    </p> <p>\u5982\u679c\u8fd9\u79cd\u9700\u6c42\u591a\u4e86\u8fd8\u662f\u8003\u8651elasticsearch\u5427</p> <p>zombodb\u662fPostgreSQL\u4e0eElasticSearch\u7ed3\u5408\u7684\u4e00\u4e2a\u7d22\u5f15\u63a5\u53e3\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bfb\u5199ES\u3002</p>"},{"location":"postgres/pgage/","title":"\u6570\u636e\u5e93\u5e74\u9f84","text":""},{"location":"postgres/pgage/#_1","title":"\u80cc\u666f","text":"<p>\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u6807\u8bc6\u7b26\u4f7f\u7528\u7684\u662f32\u4f4d\u7684,\u6700\u5927\u53ef\u8868\u793a42\u4e2a\u4ebf\u3002\u5f53\u524d\u4e8b\u52a1\u7684\u6570\u636e\u572820\u4ebf\u4e2a\u4e8b\u52a1\u4e4b\u540e\u5c06\u53d8\u7684\u4e0d\u53ef\u89c1\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u56de\u5377\uff09\uff0cPostgres\u5f15\u5165\u4e86\u4e00\u4e2a\u51bb\u7ed3\u4e8b\u52a1\u6807\u8bc6\u7684\u6982\u5ff5\u3002 \u5e76\u5b9e\u73b0\u4e86\u540d\u4e3afreeze\u7684\u51bb\u7ed3\u8fc7\u7a0b\u3002</p>"},{"location":"postgres/pgage/#_2","title":"\u51bb\u7ed3\u8fc7\u7a0b","text":"<p>\u4e24\u79cd\u6a21\u5f0f</p> <ul> <li> <p>\u60f0\u6027\u6a21\u5f0f</p> </li> <li> <p>\u8feb\u5207\u6a21\u5f0f</p> </li> </ul> <p>\u60f0\u6027\u6a21\u5f0f\u56de\u8df3\u8fc7\u9875\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u4f4d\u53ef\u89c1\u7684\u6570\u636e\u5e93\u5757\uff08\u7531\u6570\u636e\u5e93\u4e2d\u7684vm\u53ef\u89c1\u6027\u6620\u5c04\uff09</p> <p>\u8feb\u5207\u6a21\u5f0f\u4f1a\u626b\u63cf\u6240\u6709\u7684\u9875\uff0c\u68c0\u67e5\u8868\u4e2d\u7684\u6240\u6709\u5143\u7ec4\u3002\u5e76\u53ef\u80fd\u5220\u9664\u4e0d\u5fc5\u8981\u7684clog\u6587\u4ef6\u4e0e\u9875\u9762\u3002</p> <p>\u6539\u8fdb\u7684\u8feb\u5207\u6a21\u5f0f\uff0c\u4f1a\u8df3\u8fc7\u9875\u9762\u4e2d\u6240\u6709\u7684\u5143\u7ec4\u90fd\u5df2\u88ab\u51bb\u7ed3\u8fc7\u7684\u9875\u9762</p> <p>\u9996\u5148\u4ecb\u7ecd\u51e0\u4e2a\u6570\u636e\u5e93\u503c</p> <pre><code> -- \u5f53\u524d\u4e8b\u52a1\u53f7\n select txid_current();\n\n -- \u8bb0\u5f55\u4e8b\u52a1\u53f7\n select xmax,xmin ,* from table_name where xxxx;\n\n -- \u8868\u5e74\u9f84\uff0c \u8868\u4e2d\u6700\u8001\u884c\u7684\u4e8b\u52a1\u53f7\n select age(relfrozenxid) from pg_class where relname = table_name;\n\n -- database \u5e74\u9f84\n select datname , age(datfrozenxid) from pg_database ;\n\n -- \u6570\u636e\u914d\u7f6e\n show vacuum_freeze_min_age ; -- \u9ed8\u8ba4\u503c5\u5343\u4e07\n\n show vacuum_freeze_table_age ; -- \u9ed8\u8ba4\u503c1.5\u4ebf\n\n show autovacuum_freeze_max_age ; -- \u9ed8\u8ba4\u503c2\u4ebf\n\n show autovacuum_naptime ; -- \u9ed8\u8ba4\u503c1 \u5206\u949f\n</code></pre>"},{"location":"postgres/pgage/#_3","title":"\u89e6\u53d1\u6761\u4ef6","text":"<p>\u5f53\u524d\u5e74\u9f84\u5927\u4e8e5\u5343\u4e07\u65f6 \u60f0\u6027\u6a21\u5f0f \u5f53\u524d\u5e93\u5e74\u9f84\u5927\u4e8e1.5\u4ebf\u65f6 \u8feb\u5207\u6a21\u5f0f</p> <p>\u51bb\u7ed3\u540e\u4fee\u6539\u8868\u548c\u5e93\u7684 relfrozenxid\uff0cdatfrozenxid \u503c\u3002</p>"},{"location":"postgres/pgage/#_4","title":"\u624b\u52a8\u51bb\u7ed3","text":"<pre><code> vacuum freeze \n</code></pre> <p>\u7531\u4e8e\u51bb\u7ed3\u7684\u8fc7\u7a0b\u4f1a\u5360\u7528\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u8d44\u6e90\u3002\u53ef\u6839\u636e\u5f53\u524d\u6570\u636e\u7684\u5e74\u9f84\u5728\u4e1a\u52a1\u4f4e\u5cf0\u671f\u8fdb\u884c\u624b\u52a8\u51bb\u7ed3\uff0c\u964d\u4f4e\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002</p>"},{"location":"postgres/pgautofailover/","title":"pg_auto_failover \u5b9e\u8df5","text":"","tags":[]},{"location":"postgres/pgautofailover/#_1","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u67b6\u6784","text":"<p>citus\u540c\u6e90postgres\u9ad8\u53ef\u7528\u65b9\u6848</p> <p>\u89d2\u8272:</p> <ul> <li>\u4e3b\u8282\u70b9 (master)</li> <li>\u590d\u5236\u8282\u70b9 (slave)</li> <li>\u76d1\u63a7\u8282\u70b9 (monitor)</li> </ul>","tags":[]},{"location":"postgres/pgautofailover/#_2","title":"\u96c6\u7fa4\u642d\u5efa","text":"","tags":[]},{"location":"postgres/pgautofailover/#_3","title":"\u73af\u5883\u8bf4\u660e","text":"","tags":[]},{"location":"postgres/pgautofailover/#_4","title":"\u8f6f\u4ef6\u7248\u672c","text":"<ul> <li>postgresql 14.4</li> <li>pg_auto_failover 1.6.4</li> <li>centos 7</li> </ul>","tags":[]},{"location":"postgres/pgautofailover/#_5","title":"\u7f51\u7edc\u73af\u5883","text":"IP \u8f6f\u4ef6 10.10.2.11 monitor 10.10.2.12 master 10.10.2.13 replication","tags":[]},{"location":"postgres/pgautofailover/#_6","title":"\u4ece\u96f6\u5f00\u59cb\u5efa\u8bbe","text":"<p>\u200b   \u6ca1\u6709\u4efb\u4f55\u5386\u53f2\u5305\u88b1\uff0c\u5305\u62ec\u6570\u636e\u5e93\u81ea\u8eab\u7684\u642d\u5efa</p> <p>\u200b   \u624b\u52a8\u5b89\u88c5</p> <p>\u200b     \u5728\u6240\u6709\u7684\u8282\u70b9\u4e0a\u6267\u884c</p> <pre><code>-- \u6570\u636e\u5e93\u5b89\u88c5\nsudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm\nsudo yum install -y postgresql14-server\n</code></pre> <pre><code># install pg_auto_failover\ncurl https://install.citusdata.com/community/rpm.sh | sudo bash\nyum install pg_auto_failover_14.x86_64 -y\n\n# confirm installation\n/usr/pgsql-14/bin/pg_autoctl --version\n</code></pre> <p>\u200b     \u521b\u5efamonitor\u8282\u70b9</p> <pre><code>--\u521b\u5efa\u76d1\u63a7\u8282\u70b9\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl create monitor \\\n   --hostname node0 \\\n   --auth trust \\\n   --ssl-self-signed \\\n   --pgdata /var/lib/pgsql/14/data/ \\\n   --pgctl /usr/pgsql-14/bin/pg_ctl \"\n\n--\u542f\u52a8\u76d1\u63a7\u8282\u70b9\u670d\u52a1\n/usr/pgsql-14/bin/pg_autoctl -q show systemd --pgdata \"/var/lib/pgsql/14/data\" | tee /etc/systemd/system/pgautofailover.service\n\nsystemctl start pgautofailover\n\n-- \u67e5\u770bnode\u8fde\u63a5monitor \u4fe1\u606f\n/usr/pgsql-14/bin/pg_autoctl show uri --formation monitor --pgdata /var/lib/pgsql/14/data/\n\npostgres://autoctl_node@node0:5432/pg_auto_failover?sslmode=require\n\n</code></pre> <p>\u200b       \u521b\u5efa\u6570\u636e\u5e93\u4e3b\u8282\u70b9</p> <pre><code>-- \u521b\u5efa\u6570\u636e\u5e93\u8282\u70b9\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl create postgres \\\n    --hostname node1 \\\n    --name node1 \\\n    --pgctl /usr/pgsql-14/bin/pg_ctl \\\n    --pgdata /var/lib/pgsql/14/data/ \\\n    --auth trust \\\n    --ssl-self-signed \\\n    --monitor 'postgres://autoctl_node@node0:5432/pg_auto_failover?sslmode=require' \\\n    \"\n\n</code></pre> <pre><code>\u521b\u5efa\u8282\u70b9\u8bf4\u660e\uff0c\u5728create postgres\u540e\uff0c\u5c06\u5728\u672c\u5730\u751f\u6210\u914d\u7f6e\u4fe1\u606f\u3002\u5177\u4f53\u53ef\u67e5\u770b\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl show file   --pgdata /var/lib/pgsql/14/data/\"\n</code></pre> <pre><code>-- systemd \u7ba1\u7406\u670d\u52a1\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl -q show systemd --pgdata /var/lib/pgsql/14/data \"  &gt; /etc/systemd/system/pgautofailover.service\n\n-- \u542f\u52a8\u670d\u52a1\nsystemctl start pgautofailover\n</code></pre> <p>\u200b       \u521b\u5efa\u6570\u636e\u5e93\u4ece\u8282\u70b9</p> <pre><code>-- \u5728\u53e6\u4e00\u4e2a\u8282\u70b9\u521b\u5efa\u4ece\u5e93\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl create postgres \\\n    --hostname node2 \\\n    --name node2 \\\n    --pgctl /usr/pgsql-14/bin/pg_ctl \\\n    --pgdata /var/lib/pgsql/14/data/ \\\n    --auth trust \\\n    --ssl-self-signed \\\n    --monitor 'postgres://autoctl_node@node0:5432/pg_auto_failover?sslmode=require' \\\n    \"\n</code></pre> <pre><code>-- systemd \u7ba1\u7406\u670d\u52a1\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl -q show systemd --pgdata /var/lib/pgsql/14/data \"  &gt; /etc/systemd/system/pgautofailover.service\n\n-- \u542f\u52a8\u670d\u52a1\nsystem start pgautofailover\n</code></pre> <pre><code>-- \u5728monitor\u8282\u70b9\u67e5\u770b\u72b6\u6001\n/usr/pgsql-14/bin/pg_autoctl   show state --pgdata /var/lib/pgsql/14/data/\n\n  Name |  Node |  Host:Port |       TLI: LSN |   Connection |      Reported State |      Assigned State\n-------+-------+------------+----------------+--------------+---------------------+--------------------\nnode1 |     1 | node1:5432 |   1: 0/500BD90 |   read-write |             primary |             primary\n node2 |   111 | node2:5432 |   1: 0/500BD90 |    read-only |           secondary |           secondary\n\n</code></pre> <pre><code>-- \u5728\u76d1\u63a7\u70b9\u5220\u9664postgres\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl drop node  --destroy --force --name node2 \"\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#_7","title":"\u73b0\u6709\u6570\u636e\u5e93\u63a5\u7ba1","text":"<p>\u200b   \u4e0d\u5f71\u54cd\u73b0\u6709\u6570\u636e\u5e93\u4e1a\u52a1\uff0c\u4f7f\u5176\u5177\u6709\u9ad8\u53ef\u7528\u80fd\u529b</p> <p>\u200b    \u4e0e\u4ece\u96f6\u5f00\u59cb\u521b\u5efa\u96c6\u7fa4\u4e0d\u540c\u7684\u662f\uff0c\u5728create postgres\u9636\u6bb5\uff0c\u6839\u636e    --pgdata \u76ee\u5f55\u6240\u6307\u5b9a\u7684 pg_controldata \u6765\u5224\u65ad\u6570\u636e\u5e93\u6570   \u636e\u76ee\u5f55\u73b0\u6709\u60c5\u51b5\u3002\u5305\u62ec\u662f\u5426\u9700\u8981\u521d\u59cb\u5316\u6570\u636e\u5e93\uff0c\u53ca\u73b0\u6709\u6570\u636e\u5e93\u72b6\u6001 </p>","tags":[]},{"location":"postgres/pgautofailover/#_8","title":"\u96c6\u7fa4\u7ba1\u7406","text":"","tags":[]},{"location":"postgres/pgautofailover/#_9","title":"\u72b6\u6001\u67e5\u770b","text":"<pre><code>/usr/pgsql-14/bin/pg_autoctl   show state --pgdata /var/lib/pgsql/14/data/\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#switch","title":"\u624b\u52a8switch","text":"<pre><code>/usr/pgsql-14/bin/pg_autoctl  perform switchover --formation default --group 0  --pgdata /var/lib/pgsql/14/data/\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#failover","title":"\u81ea\u52a8failover","text":"","tags":[]},{"location":"postgres/pgautofailover/#_10","title":"\u8282\u70b9\u5931\u8d25","text":"<pre><code>- \u4e3b\u8282\u70b9\u5931\u8d25\n  When the primary node is unhealthy, and only when the secondary node is itself in good health, then the primary node is asked to transition to the DRAINING state, and the attached secondary is asked to transition to the state PREPARE_PROMOTION. In this state, the secondary is asked to catch-up with the WAL traffic from the primary, and then report success.\n\nThe monitor then continues orchestrating the promotion of the standby: it stops the primary (implementing STONITH in order to prevent any data loss), and promotes the secondary into being a primary now.\n\nDepending on the exact situation that triggered the primary unhealthy, it\u2019s possible that the secondary fails to catch-up with WAL from it, in that case after the PREPARE_PROMOTION_CATCHUP_TIMEOUT the standby reports success anyway, and the failover sequence continues from the monitor.\n\nWhen the keeper reports an acceptable WAL difference in the two nodes again, then the replication is upgraded back to being synchronous. While a secondary node is not in the SECONDARY state, secondary promotion is disabled.\n\u4e3b\u673a\u6062\u590d\u540e\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4\u4e2d\uff0c\u5e76\u4e14\u72b6\u6001\u4e3asecondary\n</code></pre> <pre><code>- \u5907\u8282\u70b9\u5931\u8d25\nWhen the secondary node is unhealthy, the monitor assigns to it the state CATCHINGUP, and assigns the state WAIT_PRIMARY to the primary node. When implementing the transition from PRIMARY to WAIT_PRIMARY, the keeper disables synchronous replication.\n</code></pre> <pre><code>- \u76d1\u63a7\u8282\u70b9\u5931\u8d25\nThen the primary and secondary node just work as if you didn\u2019t have setup pg_auto_failover in the first place, as the keeper fails to report local state from the nodes. Also, health checks are not performed. It means that no automated failover may happen, even if needed.\n</code></pre> <p>\u5c3d\u91cf\u907f\u514d\u76d1\u63a7\u8282\u70b9\u4e0e\u4e3b\u8282\u70b9\u540c\u65f6\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u5982\u907f\u514d\u540c\u673a\u67b6\uff0c\u540c\u673a\u623f\uff0c\u540c\u4e00\u4e2a\u7f51\u7edc\u5206\u533a\u3002</p>","tags":[]},{"location":"postgres/pgautofailover/#_11","title":"\u7f51\u7edc\u95ee\u9898","text":"","tags":[]},{"location":"postgres/pgautofailover/#_12","title":"\u7ef4\u62a4\u6a21\u5f0f","text":"<pre><code>$ pg_autoctl enable maintenance\n$ pg_autoctl disable maintenance\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#_13","title":"\u589e\u51cf\u8282\u70b9","text":"<p>\u200b   \u6dfb\u52a0\u6570\u636e\u5e93\u8282\u70b9</p> <p>\u200b        \u4e0e\u524d\u9762\u52a0\u5165\u4ece\u8282\u70b9\u4e00\u81f4</p> <p>\u200b     \u5220\u9664\u6570\u636e\u5e93\u8282\u70b9</p> <pre><code>-- \u5728\u76d1\u63a7\u70b9\u5220\u9664postgres\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl drop node  --destroy --force --name node3 --formation formation_name_003\"\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#_14","title":"\u5207\u6362\u7b56\u7565\u673a\u5236","text":"<pre><code> pgautofailover.health_check_max_retries | 2\n pgautofailover.health_check_period      | 20000\n pgautofailover.health_check_retry_delay | 2000\n pgautofailover.health_check_timeout     | 5000\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#_15","title":"\u591a\u96c6\u7fa4\u7ba1\u7406","text":"","tags":[]},{"location":"postgres/pgautofailover/#_16","title":"\u591a\u96c6\u7fa4\u7ba1\u7406\u8bf4\u660e","text":"<p>\u200b   \u591a\u96c6\u7fa4\u8fd9\u91cc\u7684\u542b\u4e49\u662f\u4e00\u4e2amonitor\u7ba1\u7406\u591a\u5957\u96c6\u7fa4</p> <p>\u200b   \u4e3b\u8981\u7528\u5230\u7684\u4e24\u4e2a\u6982\u5ff5</p> <ul> <li> <p>formation</p> </li> <li> <p>group</p> </li> </ul> <p>A formation is a logical set of PostgreSQL services that are managed together.</p> <p>It is possible to operate many formations with a single monitor instance. Each formation has a group of Postgres nodes and the FSM orchestration implemented by the monitor applies separately to each group.</p> <p>\u901a\u8fc7\u8bf4\u660e\u53ef\u4ee5\u77e5\u9053\uff0c\u5229\u7528formation\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2amonitor\u7ba1\u7406\u591a\u5957\u96c6\u7fa4\u3002</p> <p>A group consists of a PostgreSQL primary server and a secondary server setup with Hot Standby synchronous replication.</p> <p>The notion of a formation that contains multiple groups in pg_auto_failover is useful when setting up and managing a whole Citus formation, where the coordinator nodes belong to group zero of the formation, and each Citus worker node becomes its own group and may have Postgres standby nodes.</p> <p>\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u601d\u8def\uff0c\u4e00\u5957citus\u96c6\u7fa4\u5728\u4e00\u4e2aformation\u4e4b\u4e0b\uff0ccitus\u4e2d\u7684\u591a\u4e2a\u4e3b\u4ece\u8282\u70b9\u901a\u8fc7group\u6765\u533a\u5206\u3002</p>","tags":[]},{"location":"postgres/pgautofailover/#_17","title":"\u5177\u4f53\u5b9e\u73b0\u6848\u4f8b","text":"","tags":[]},{"location":"postgres/pgautofailover/#formation","title":"\u5229\u7528formation \u7ba1\u7406\u591a\u5957\u96c6\u7fa4","text":"<pre><code>-- \u521b\u5efaformation , \u9ed8\u8ba4\u4f7f\u7528default\n/usr/pgsql-14/bin/pg_autoctl create formation \\\n --pgdata /var/lib/pgsql/14/data/ \\\n --monitor 'postgres://autoctl_node@node0:5432/pg_auto_failover1?sslmode=require' \\\n --formation formation_name_003 \\\n --kind pgsql \\\n --dbname pg_auto_failover\n</code></pre> <pre><code>--\u67e5\u770b formation \u4fe1\u606f\nselect * from pgautofailover.formation ;\n    formationid     | kind  |      dbname       | opt_secondary | number_sync_standbys \n--------------------+-------+-------------------+---------------+----------------------\n default            | pgsql | postgres          | t             |                    0\n formation_name_003 | pgsql | postgres          | t             |                    0\n(2 rows)\n</code></pre> <pre><code>-- \u5728\u521b\u5efa\u6570\u636e\u5e93\u8282\u70b9\u65f6\u6307\u5b9aformation\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl create postgres \\\n--hostname node3 \\\n--formation formation_name_003 \\\n--name node3 \\\n--pgctl /usr/pgsql-14/bin/pg_ctl \\\n--pgdata /var/lib/pgsql/14/data/ \\\n--auth trust \\\n--ssl-self-signed \\\n--monitor 'postgres://autoctl_node@node0:5432/pg_auto_failover?sslmode=require' \\ \n\"\n\n\u6ce8\u610f\u4e8b\u9879: \n--hostname \u672c\u673ahost\uff0c\n--formation \u4e0a\u9762\u521b\u5efa\u7684formation ,\n--name\u8282\u70b9\u540d\u79f0 ,\n--monitor monitor\u8282\u70b9\u8fde\u63a5\u4fe1\u606f\n</code></pre> <pre><code>-- \u67e5\u770b\u6570\u636e\u5e93\u8282\u70b9\u672c\u5730\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\nsu - postgres -c \"/usr/pgsql-14/bin/pg_autoctl show file   --pgdata /var/lib/pgsql/14/data/\"\n</code></pre> <pre><code>-- \u5728monitor\u8282\u70b9\u67e5\u770b \u6570\u636e\u5e93node\u8282\u70b9\u6ce8\u518c\u60c5\u51b5\nselect formationid,nodeid ,groupid,nodename from pgautofailover.node;\n    formationid     | nodeid | groupid | nodename \n--------------------+--------+---------+----------\n formation_name_003 |    120 |       0 | node3\n default            |      1 |       0 | node_1\n default            |    111 |       0 | node2\n(3 rows)\n\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#group-citus","title":"\u5229\u7528group \u7ba1\u7406citus\u4e2d\u7684\u591a\u96c6\u7fa4","text":"<p>\u5728\u521b\u5efapg\u8282\u70b9\u65f6\u5e76\u6ca1\u6709\u53c2\u8003\u7528\u6765\u6307\u5b9agroup, \u6587\u6863\u4e2d\u6709\u5982\u4e0b\u5173\u4e8egroup\u7684\u63cf\u8ff0\u3002</p> <p>in a pgsql formation, there can be only one group, with groupId 0</p> <p>At the moment citus formation kinds are not managed in the Open Source version of pg_auto_failover.</p> <p>\u5f88\u9057\u61be\uff0c\u73b0\u5f00\u6e90\u7248\u672c\u5e76\u4e0d\u652f\u6301 citus\u7c7b\u578b\u7684formation\u3002 \u7c7b\u578b\u4e3apgsql\u7684formation\u4e2d\u53ea\u652f\u6301\u4e3a\u96f6\u7684group\u3002</p> <p>\u7528pgautofailover\u6765\u7ba1\u7406citus \u96c6\u7fa4\u8fd8\u662f\u4f7f\u7528\u591a\u4e2aformaton \u5427</p>","tags":[]},{"location":"postgres/pgautofailover/#_18","title":"\u76d1\u63a7\u8282\u70b9\u9ad8\u53ef\u7528","text":"<pre><code>-- \u6570\u636e\u5e93\u7684\u4e3b\u4ece\u6d41\u590d\u5236 mon1\u4e3b\u8282\u70b9,mon2\u590d\u5236\u8282\u70b9 \n-- \u5728\u521b\u5efaformation \u53ca postgres \u8282\u70b9\u65f6\uff0c \u5c06-- monitor \u53c2\u6570\u6307\u5b9a\u4e3a\npostgres://mon1:5432,mon2:5432,mon3:5432/pg_auto_failover?target_session_attrs=read-write&amp;sslmode=prefer\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#_19","title":"\u5ba2\u6237\u7aef\u9ad8\u53ef\u7528","text":"<pre><code>$ psql -d \"postgresql://host1,host2/dbname?target_session_attrs=read-write\"\n$ psql -d \"postgresql://host1:port2,host2:port2/dbname?target_session_attrs=read-write\"\n$ psql -d \"host=host1,host2 port=port1,port2 target_session_attrs=read-write\"\n</code></pre>","tags":[]},{"location":"postgres/pgautofailover/#_20","title":"\u5e38\u7528\u547d\u4ee4","text":"<p>https://pg-auto-failover.readthedocs.io/en/master/ref/manual.html</p>","tags":[]},{"location":"postgres/pgautofailover/#_21","title":"\u5b89\u5168\u53ca\u6743\u9650","text":"","tags":[]},{"location":"postgres/pgbench/","title":"pgbench \u538b\u529b\u6d4b\u8bd5","text":""},{"location":"postgres/pgbench/#_1","title":"\u4ecb\u7ecd","text":"<p>pgbench\u662f\u4e00\u79cd\u5728PostgreSQL\u4e0a\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u7684\u7b80\u5355\u7a0b\u5e8f\u3002 \u5b98\u65b9\u6587\u6863 </p> <ul> <li>\u9ed8\u8ba4\u6d4b\u8bd5</li> <li>\u81ea\u5b9a\u4e49\u6d4b\u8bd5</li> </ul>"},{"location":"postgres/pgbench/#_2","title":"\u9ed8\u8ba4\u6d4b\u8bd5","text":"<p>pgbench\u4e2d\u9ed8\u8ba4\u81ea\u5e26\u4e00\u5957\u6d4b\u8bd5\u6570\u636e\u5e93\u548c\u6d4b\u8bd5sql\u811a\u672c\u3002</p>"},{"location":"postgres/pgbench/#_3","title":"\u521d\u59cb\u5316\u9ed8\u8ba4\u6570\u636e\u5e93","text":"<pre><code>\u4f7f\u7528 -i \u521d\u59cb\u5316\u6570\u636e\u5e93\n\n#pgbench -U postgres -i -s 10 pgbenchdb\nNOTICE:  table \"pgbench_history\" does not exist, skipping\nNOTICE:  table \"pgbench_tellers\" does not exist, skipping\nNOTICE:  table \"pgbench_accounts\" does not exist, skipping\nNOTICE:  table \"pgbench_branches\" does not exist, skipping\ncreating tables...\n100000 of 1000000 tuples (10%) done (elapsed 0.14 s, remaining 1.23 s)\n200000 of 1000000 tuples (20%) done (elapsed 0.27 s, remaining 1.06 s)\n300000 of 1000000 tuples (30%) done (elapsed 0.42 s, remaining 0.99 s)\n400000 of 1000000 tuples (40%) done (elapsed 0.51 s, remaining 0.77 s)\n500000 of 1000000 tuples (50%) done (elapsed 0.72 s, remaining 0.72 s)\n600000 of 1000000 tuples (60%) done (elapsed 0.87 s, remaining 0.58 s)\n700000 of 1000000 tuples (70%) done (elapsed 0.97 s, remaining 0.42 s)\n800000 of 1000000 tuples (80%) done (elapsed 1.15 s, remaining 0.29 s)\n900000 of 1000000 tuples (90%) done (elapsed 1.30 s, remaining 0.14 s)\n1000000 of 1000000 tuples (100%) done (elapsed 1.46 s, remaining 0.00 s)\nset primary keys...\ndone.\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n-i --initialize \u8868\u793a\u521d\u59cb\u5316\u6570\u636e,\u6ce8\u610f\u539f\u6765\u7684\u6570\u636e\u5982\u679c\u5b58\u5728\u5c06\u88ab\u8986\u76d6\u3002\n-s scale_factor \u89c4\u6a21\u56e0\u5b50 \u6570\u636e\u91cf\u89c4\u6a21\n\n\u67e5\u770b\u521d\u59cb\u5316\u540e\u7684\u6570\u636e\u5e93\n\npsql -U postgres -d pgbenchdb\npgbenchdb=# \\d+\n                               \u5173\u8054\u5217\u8868\n \u67b6\u6784\u6a21\u5f0f |        \u540d\u79f0        |  \u7c7b\u578b  |  \u62e5\u6709\u8005  |    \u5927\u5c0f    | \u63cf\u8ff0 \n----------+--------------------+--------+----------+------------+------\n public   | pg_stat_statements | \u89c6\u56fe   | postgres | 0 bytes    | \n public   | pgbench_accounts   | \u6570\u636e\u8868 | postgres | 128 MB     | \n public   | pgbench_branches   | \u6570\u636e\u8868 | postgres | 8192 bytes | \n public   | pgbench_history    | \u6570\u636e\u8868 | postgres | 0 bytes    | \n public   | pgbench_tellers    | \u6570\u636e\u8868 | postgres | 8192 bytes | \n(5 \u884c\u8bb0\u5f55)\n\n</code></pre>"},{"location":"postgres/pgbench/#_4","title":"\u5f00\u59cb\u6d4b\u8bd5","text":"<pre><code>pgbench -M prepared -r -n -c 100 -j 100 -T 100 -U postgres   pgbenchdb \ntransaction type: &lt;builtin: TPC-B (sort of)&gt;\nscaling factor: 10\nquery mode: prepared\nnumber of clients: 100\nnumber of threads: 100\nduration: 100 s\nnumber of transactions actually processed: 375474\nlatency average = 26.667 ms\ntps = 3749.964314 (including connections establishing)\ntps = 3754.003534 (excluding connections establishing)\nscript statistics:\n - statement latencies in milliseconds:\n         0.002  \\set aid random(1, 100000 * :scale)\n         0.000  \\set bid random(1, 1 * :scale)\n         0.000  \\set tid random(1, 10 * :scale)\n         0.000  \\set delta random(-5000, 5000)\n         0.252  BEGIN;\n         0.299  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;\n         0.199  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;\n        13.609  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;\n         9.879  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;\n         0.252  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);\n         2.100  END;\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n-M \u6a21\u5f0f simple extended prepared\n-r \u6bcf\u4e00\u4e2a\u8bed\u53e5\u82b1\u8d39\u7684\u4e8b\u52a1\u65f6\u95f4\n-n \u8fd0\u884c\u524d\u4e0d\u6267\u884cvaccumun ,\u81ea\u5b9a\u4e49\u7684\u811a\u672c\u8fd0\u884c\u4e2d\u5fc5\u987b\u8981\u4f7f\u7528\n-c \u5ba2\u6237\u7aef\u6570\u91cf\n-j \u7ebf\u7a0b\u6570\u91cf \u5ba2\u6237\u7aef\u5171\u7528\u6240\u6709\u7684\u7ebf\u7a0b -j &lt;= -c \n-T \u8fd0\u884c\u7684\u65f6\u95f4 \u5355\u4f4d\u79d2 \u3002 \u65f6\u95f4\u592a\u77ed\u4f1a\u5bfc\u81f4\u7ed3\u679c\u4e0d\u662f\u5f88\u51c6\u786e\uff0c\u81f3\u5c11\u8981\u8fd0\u884c\u51e0\u5206\u949f\uff0c\u6d88\u9664\u566a\u58f0\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u3002\n-t \u8fd0\u884c\u7684\u4e8b\u52a1\u6570 \u6bcf\u4e2a\u5ba2\u6237\u7aef\n</code></pre>"},{"location":"postgres/pgbench/#_5","title":"\u7ed3\u679c\u89e3\u8bfb","text":"<p>\u7565 \uff0c\u4e00\u770b\u5c31\u61c2</p>"},{"location":"postgres/pgbench/#_6","title":"\u81ea\u5b9a\u4e49\u6d4b\u8bd5","text":"<p>\u793a\u4f8b\u8bf4\u660e</p> <pre><code>pgbench -M prepared -n -r -c 32 -j 32 -P 5 -C -f ./test.sql -U postgres pgbenchdb -T 300\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879: pgbench\u4e0epg\u4e0d\u8981\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a</p> <p>\u5404\u79cd\u573a\u666f\u538b\u529b\u6d4b\u8bd5 https://github.com/digoal/blog/blob/362b84417ca8b7aaf1add31fe7689c347642bb9a/201706/20170601_02.md</p>"},{"location":"postgres/pgbench/#_7","title":"\u9047\u89c1\u95ee\u9898","text":"<p>\u6d4b\u8bd5 -C \u53c2\u6570\u65f6 \u4f7f\u7528\u7684pgbouncer\u4f5c\u4e3a\u8fde\u63a5\u6c60\u51fa\u73b0\u5982\u4e0b\u9519\u8bef</p> <pre><code>Cannot assign requested address\n</code></pre> <p>\u539f\u56e0\u5ba2\u6237\u7aef\u9891\u7e41\u7684\u8fde\u670d\u52a1\u5668\uff0c\u7531\u4e8e\u6bcf\u6b21\u8fde\u63a5\u90fd\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u7ed3\u675f\uff0c\u5bfc\u81f4\u5f88\u591a\u7684TIME_WAIT\uff0c\u4ee5\u81f3\u4e8e\u7528\u5149\u4e86\u53ef\u7528\u7684\u7aef\u53e3\u53f7\uff0c\u6240\u4ee5\u65b0\u7684\u8fde\u63a5\u6ca1\u529e\u6cd5\u7ed1\u5b9a\u7aef\u53e3\uff0c\u5373\u201cCannot assign requested address\u201d\u3002 \u662f\u5ba2\u6237\u7aef\u7684\u95ee\u9898\u4e0d\u662f\u670d\u52a1\u5668\u7aef\u7684\u95ee\u9898\u3002\u901a\u8fc7netstat\uff0c\u7684\u786e\u770b\u5230\u5f88\u591aTIME_WAIT\u72b6\u6001\u7684\u8fde\u63a5\u3002 </p> <p>client\u7aef\u9891\u7e41\u5efa\u7acb\u8fde\u63a5\uff0c\u800c\u7aef\u53e3\u91ca\u653e\u8f83\u6162\uff0c\u5bfc\u81f4\u5efa\u7acb\u65b0\u8fde\u63a5\u65f6\u65e0\u53ef\u7528\u7aef\u53e3\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p>\u6267\u884c\u547d\u4ee4\u4fee\u6539\u5982\u4e0b2\u4e2a\u5185\u6838\u53c2\u6570 \uff08\u9700\u8981root\u6743\u9650\uff09 sysctl -w net.ipv4.tcp_timestamps=1  \u5f00\u542f\u5bf9\u4e8eTCP\u65f6\u95f4\u6233\u7684\u652f\u6301,\u82e5\u8be5\u9879\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u4e0b\u9762\u4e00\u9879\u8bbe\u7f6e\u4e0d\u8d77\u4f5c\u7528  sysctl -w net.ipv4.tcp_tw_recycle=1  \u8868\u793a\u5f00\u542fTCP\u8fde\u63a5\u4e2dTIME-WAIT sockets\u7684\u5feb\u901f\u56de\u6536   </p>"},{"location":"postgres/pgbouncer/","title":"pgbouncer \u8fde\u63a5\u6c60","text":""},{"location":"postgres/pgbouncer/#_1","title":"\u80cc\u666f\u4ecb\u7ecd","text":"<ul> <li>Pgbouncer\u662f\u4e00\u4e2a\u9488\u5bf9PostgreSQL\u6570\u636e\u5e93\u7684\u8f7b\u91cf\u7ea7\u8fde\u63a5\u6c60  </li> <li>pgbouncer \u7684\u76ee\u6807\u662f\u964d\u4f4e\u56e0\u4e3a\u65b0\u8fde\u63a5\u5230 PostgreSQL \u7684\u8fde\u63a5\u800c\u5bfc\u81f4\u7684\u6027\u80fd\u635f\u5931   </li> </ul> <p>\u4f7f\u7528\u672f\u8bed\u8bf4\u660e\uff1a \u4e3a\u4e86\u540e\u9762\u7684\u63cf\u8ff0\u66f4\u6e05\u6670\uff0c\u4f7f\u7528\u5982\u4e0b\u672f\u8bed</p> <ul> <li>Client : \u6307\u8bbf\u95ee\u8005  </li> <li>Pgboucer: \u6307\u8fde\u63a5\u6c60  </li> <li>Postgres: \u6307\u6570\u636e\u5e93\u3002</li> <li>Connetions: \u6307\u5f7c\u6b64\u4e4b\u95f4\u7684\u8fde\u63a5</li> </ul> <p>\u6574\u4f53\u67b6\u6784  </p> <p>\u539f\u6765: Client -&gt; Postgres \u73b0\u5728: Client -&gt; Pgbounce -&gt; Postgres</p>"},{"location":"postgres/pgbouncer/#_2","title":"\u4f18\u52bf","text":"<p>\u5185\u5b58\u6d88\u8017\u4f4e(\u9ed8\u8ba4\u4e3a2k/\u8fde\u63a5)\uff0c\u56e0\u4e3aBouncer\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u63a5\u53d7\u5b8c\u6574\u7684\u6570\u636e\u5305\u3002  Postgres\u7684\u8fde\u63a5\u662f\u8fdb\u7a0b\u6a21\u578b\uff0cpogbouncer \u4f7f\u7528libevent\u8fdb\u884csocket \u901a\u4fe1\u3002  </p> <p>\u603b\u7ed3\uff1a \u6570\u636e\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u5efa\u7acb\u8fde\u63a5\u5f88\u8017\u8d44\u6e90\uff0cpgboucer\u5c31\u662f\u4e3a\u4e86\u51cf\u5c11\u6570\u636e\u8bbf\u95ee\u4e2d\u7684\u5efa\u7acb\u8fde\u63a5\u6b21\u6570\uff0c\u91cd\u590d\u5229\u7528\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u8fdb\u800c\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b\u3002</p>"},{"location":"postgres/pgbouncer/#_3","title":"\u4e09\u79cd\u8fde\u63a5\u6c60\u6a21\u578b","text":"<ul> <li>session \u4f1a\u8bdd\u7ea7 \uff1b \u6bd4\u8f83\u53cb\u597d</li> <li>transaction \u4e8b\u52a1\u7ea7\uff1b \u6bd4\u8f83\u6fc0\u8fdb</li> <li>statement \u4e00\u4e2asql \uff1b \u5ba2\u6237\u7aef\u5f3a\u5236autocommit \u6a21\u5f0f</li> </ul>"},{"location":"postgres/pgbouncer/#_4","title":"\u5b89\u88c5","text":"<pre><code>\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u4e2d\u7248\u672c\nyum list pgbouncer.x86_64\npgbouncer.x86_64                         1.15.0-1.rhel7\n\n\u5347\u7ea7\u5230\u6700\u65b0\u7248\nyum update pgbouncer.x86_64\n\n\u5b89\u88c5\nyum install pgbouncer.x86_64 -y\n\n\u542f\u52a8\nsystemctl start pgbouncer \nsystemctl enable pgbouncer\n\n</code></pre>"},{"location":"postgres/pgbouncer/#_5","title":"\u7b80\u5355\u914d\u7f6e","text":"<pre><code>cat /etc/pgbouncer/pgbouncer.ini | grep -v '^;' | grep -v '^$' \n[databases]\npostgres= host=127.0.0.1 port=5432 user=postgres dbname=postgres connect_query='select 1' pool_size=40\nzabbix= host=10.1.88.74 port=5432 dbname=zabbix  connect_query='select 1' pool_size=40\n[pgbouncer]\nlogfile = /var/log/pgbouncer/pgbouncer.log\npidfile = /var/run/pgbouncer/pgbouncer.pid\nlisten_addr = 0.0.0.0\nlisten_port = 6432\nauth_type = md5\nauth_file = /etc/pgbouncer/userlist.txt\nadmin_users = postgres\nstats_users = stats, postgres\npool_mode = session\nserver_reset_query = DISCARD ALL\nmax_client_conn = 100\ndefault_pool_size = 20\nlog_connections = 0 \nlog_disconnections = 0\n</code></pre>"},{"location":"postgres/pgbouncer/#_6","title":"\u8bf4\u660e:","text":""},{"location":"postgres/pgbouncer/#databases","title":"[databases]","text":"<p>\u4e3b\u8981\u601d\u60f3\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\u76f8\u5f53\u4e8e\u4ee3\u7406\uff0c\u5448\u4e0a\u5bf9\u8bbf\u95ee\u8005\uff0c\u542f\u4e0b\u5bf9\u540e\u7aef\u6570\u636e\u5e93\u3002  \u7b2c\u4e00\u9879\u7684\u540d\u79f0\u662fpgbouncer\u5bf9\u5916\u63d0\u4f9b\u7684\u6570\u636e\u5e93\u540d postgres ,\u7b49\u53f7\u540e\u9762\u662f\u8fde\u63a5\u540e\u7aef\u6570\u636e\u5e93\u540d\u4fe1\u606f pool_mode = session pool_size , \u6307\u5b9adatabase \u8fde\u63a5\u5230\u540e\u7aef\u670d\u52a1\u5668\u7684\u8fde\u63a5\u6570\u7684\u6700\u5927\u503c\u3002\u914d\u5408\u6570\u636e\u5e93\u4e2d\u7684database connection limit ;</p> <p>\u5173\u4e8euser \u914d\u7f6e\u540e\u9762\u7ec6\u8bf4</p>"},{"location":"postgres/pgbouncer/#pgbouncer","title":"[pgbouncer]","text":"<p>pgbouncer\u81ea\u8eab\u7684\u914d\u7f6e  max_client_conn=\u5141\u8bb8\u7528\u6237\u5efa\u7acb\u591a\u5c11\u4e2a\u8fde\u63a5\u5230pgbouncer   ,\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u4e2d\u7684max_connection\u3002 default_pool_size \u8868\u793a\u9ed8\u8ba4\u8fde\u63a5\u6c60\u4e2d\u5efa\u7acb\u591a\u5c11\u4e2a\u5230\u540e\u7aef\u6570\u636e\u5e93\u7684\u8fde\u63a5,\u5168\u5c40\u3002 </p>"},{"location":"postgres/pgbouncer/#user","title":"\u5173\u4e8e\u7528\u6237 User\u7684\u914d\u7f6e\u8bf4\u660e","text":"<p>\u4e3b\u8981\u914d\u7f6e [databases]\u4e2d user \u8868\u793a\u8fde\u63a5\u5230\u540e\u7aef\u6570\u636e\u5e93\u6240\u4f7f\u7528\u7684\u7528\u6237 [pgbouncer]\u4e2d user \u8868\u793a\u7528\u6237\u8fde\u63a5\u5230pgbouncer\u4e2d\u6240\u4f7f\u7528\u7684\u7528\u6237</p> <p>\u60c5\u51b51\uff1a \u5982\u679c\u5728databases\u4e2d\u6307\u5b9auser=zabbix Client\u65e0\u8bba\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u7528\u6237\uff0c\u8fde\u63a5postgres\u7684\u7528\u6237\u90fd\u662fzabbix</p> <p>\u60c5\u51b52:  \u5982\u679c\u5728database\u4e2d\u6ca1\u6709\u6307\u5b9auser ,\u8fde\u63a5postgres\u7684\u7528\u6237\u4e3aClient\u4f7f\u7528\u7684\u7528\u6237</p> <p>pg\u4e2d\u67e5\u770b\u5f53\u524d\u7528\u6237</p> <pre><code>postgres=# select * from current_user;\n current_user \n--------------\n postgres\n(1 \u884c\u8bb0\u5f55)\n</code></pre> <p>auth_file \u5185\u5bb9 \u683c\u5f0f \"user\" \"password\",\u6ce8\u610f\u9700\u8981\u53cc\u5f15\u53f7  \u53ef\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u5185\u5bb9</p> <pre><code>select usename,passwd from pg_shadow ; \n</code></pre> <pre><code>cat /etc/pgbouncer/userlist.txt  \n\"zabbix\" \"md520e0e8833ebe8947cd347f94b1c4977f\"\n</code></pre> <p>\u8ba4\u8bc1\u65b9\u6cd5: \u5728pgbouncer\u4e2d\u6267\u884c</p> <pre><code>show config;\nauth_query | SELECT usename, passwd FROM pg_shadow WHERE usename=$1\n</code></pre> <p>\u63a8\u8350\uff1a \u4e0d\u5728database\u4e2d\u914d\u7f6euser, \u5728auth_file\u4e2d\u914d\u7f6euser</p>"},{"location":"postgres/pgbouncer/#pgboucer","title":"\u767b\u9646pgboucer \u63a7\u5236\u53f0","text":"<pre><code>psql -p 6432 -U postgres  -h 127.0.0.1 pgbouncer\npsql (10.4, \u670d\u52a1\u5668 1.9.0/bouncer)\n\u8f93\u5165 \"help\" \u6765\u83b7\u53d6\u5e2e\u52a9\u4fe1\u606f.\n\npgbouncer=# show clients\npgbouncer-# ;\n type |   user   | database  | state  |   addr    | port  | local_addr | local_port |    connect_time     |    request_time     | wait | wait_us | close_needed |    ptr    | link | remote_pid | tls \n------+----------+-----------+--------+-----------+-------+------------+------------+---------------------+---------------------+------+---------+--------------+-----------+------+------------+-----\n C    | postgres | pgbouncer | active | 127.0.0.1 | 57048 | 127.0.0.1  |       6432 | 2019-01-02 16:22:22 | 2019-01-02 16:22:29 |    0 |       0 |            0 | 0x1a938c0 |      |          0 | \n(1 \u884c\u8bb0\u5f55)\n\npgbouncer=# show pools;\n     database     |   user    | cl_active | cl_waiting | sv_active | sv_idle | sv_used | sv_tested | sv_login | maxwait | maxwait_us | pool_mode \n------------------+-----------+-----------+------------+-----------+---------+---------+-----------+----------+---------+------------+-----------\n normandy_cloud_d | postgres  |         0 |          0 |         0 |       0 |       1 |         0 |        0 |       0 |          0 | session\n pgbouncer        | pgbouncer |         1 |          0 |         0 |       0 |       0 |         0 |        0 |       0 |          0 | statement\n(2 \u884c\u8bb0\u5f55)\n\n\u66f4\u591a\n\nshow  help;\nNOTICE:  Console usage\n\u63cf\u8ff0:  \n    SHOW HELP|CONFIG|DATABASES|POOLS|CLIENTS|SERVERS|VERSION\n    SHOW FDS|SOCKETS|ACTIVE_SOCKETS|LISTS|MEM\n    SHOW DNS_HOSTS|DNS_ZONES\n    SHOW STATS|STATS_TOTALS|STATS_AVERAGES\n    SET key = arg\n    RELOAD\n    PAUSE [&lt;db&gt;]\n    RESUME [&lt;db&gt;]\n    DISABLE &lt;db&gt;\n    ENABLE &lt;db&gt;\n    RECONNECT [&lt;db&gt;]\n    KILL &lt;db&gt;\n    SUSPEND\n    SHUTDOWN\n\n\n</code></pre>"},{"location":"postgres/pgbouncer/#poolsize","title":"\u5173\u4e8epoolsize\u7684\u8bf4\u660e","text":"<p>[databases]\u4e2d pool_size: \u914d\u7f6e\u8fde\u63a5\u6c60\u7684\u5927\u5c0f,\u5982\u679c\u6ca1\u6709\u914d\u7f6e\uff0c\u4f7f\u7528[pgbouncer]default_pool_size [pgbouncer]\u4e2d  default_pool_size: \u8fde\u63a5\u6c60\u7684\u9ed8\u8ba4\u5927\u5c0f max_client_conn: client\u5230pgbouncer\u7684\u6700\u5927\u6570 pool_mode: \u8fde\u63a5\u6a21\u5f0f  min_pool_size: \u8fde\u63a5\u6c60\u7684\u6700\u5c0f\u5927\u5c0f\uff0c\u5373\u6bcf\u4e2a\u8fde\u63a5\u6c60\u81f3\u5c11\u4f1a\u5411\u540e\u7aef\u6570\u636e\u5e93\u4fdd\u6301\u591a\u5c11\u4e2a\u8fde\u63a5\u3002Pgboucer -&gt; Postgres    reserve_pool_size: How many additional connections to allow to a pool. 0 disables. reserve_pool_timeout: \u4fdd\u7559\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4  max_user_connections: Client -&gt; pgbouncer \u6bcf\u4e2a\u7528\u6237\u6700\u5927\u8fde\u63a5\u6570  max_db_connections: Client -&gt; Pgbouncer \u6bcf\u4e2a\u6570\u636e\u5e93\u6700\u5927\u8fde\u63a5\u6570  disable_pqexec:  \u7981\u6b62\u7b80\u5355\u67e5\u8be2\u3002 \u7b80\u5355\u67e5\u8be2\u534f\u8bae\u5141\u8bb8\u4e00\u4e2a\u8bf7\u6c42\u53d1\u9001\u591a\u6761Sql\uff0c\u4f46\u662f\u5bb9\u6613\u9020\u6210Sql\u6ce8\u5165\u98ce\u9669\u3002 </p>"},{"location":"postgres/pgbouncer/#_7","title":"\u5173\u4e8e\u65e5\u5fd7\u4fe1\u606f\u914d\u7f6e\u8bf4\u660e","text":"<p>syslog: \u662f\u5426\u6253\u5f00syslog syslog_ident: Under what name to send logs to syslog.  Default: pgbouncer (program name) log_disconnections:    log_connections:    log_pooler_errors: Client pgbouncer \u4e4b\u95f4\u7684\u9519\u8bef\u65e5\u5fd7  </p>"},{"location":"postgres/pgbouncer/#pgbouncer_1","title":"\u5173\u4e8e\u8bbf\u95eepgbouncer\u914d\u7f6e","text":"<p>admin_users:  \u53ef\u4ee5\u767b\u9646console\u6267\u884c\u6240\u6709\u547d\u4ee4\u7684\u7528\u6237\u3002 \u591a\u4e2a\u7528\u6237\u4e4b\u95f4\u7528','\u53f7\u5206\u5272 stats_users:  \u53ef\u4ee5\u767b\u9646console\u6267\u884cSHOW \u547d\u4ee4(except SHOW FDS)\u7684\u7528\u6237\u3002 </p>"},{"location":"postgres/pgbouncer/#_8","title":"\u5173\u4e8e\u76d1\u63a7\u68c0\u67e5\u8d85\u65f6\u8bbe\u7f6e","text":"<p>server_reset_query: \u5f53\u4e00\u4e2a\u540e\u7aef\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4f1a\u8bdd\u88ab\u67d0\u4e00\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\u65f6\uff0c\u5b83\u7684\u5c5e\u6027\u53ef\u80fd\u4f1a\u88ab\u4fee\u6539\u3002\u5f53\u8fd9\u4e2a\u540e\u7aef\u6570\u636e\u5e93\u8fde\u63a5\u88ab\u7b2c\u4e8c\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\u7684\u65f6\u5c31\u6709\u53ef\u80fd\u4ea7\u751f\u95ee\u9898\u3002\u5982\u4e0a\u4e2a\u8fde\u63a5\u4e2d\u6709 ABORT or ROLLBACK ,\u4e0b\u4e2a\u4f7f\u7528\u6b64\u8fde\u63a5\u7684\u7528\u6237\u80af\u80fd\u4f1a\u5f88\u60e8\u3002  \u6240\u4ee5\u9700\u8981\u5c06\u6240\u6709\u7684\u5c5e\u6027\u6e05\u7a7a\u3002  Default: DISCARD ALL</p> <p>server_check_delay\uff1a Default: 30.0  server_check_query\uff1a select 1   </p> <p>\u66f4\u591a\u914d\u7f6e\u4fe1\u606f</p>"},{"location":"postgres/pgpool2/","title":"pgpoolii \u8bfb\u5199\u5206\u79bb","text":"<p>https://www.pgpool.net/docs/pgpool-II-3.5.4/doc/tutorial-zh_cn.html#dist-def</p> <p>https://www.xiaomastack.com/2019/08/16/postgresql\u96c6\u7fa4/</p>"},{"location":"postgres/pgstattuple/","title":"\u8868\u7a7a\u95f4\u81a8\u80c0","text":""},{"location":"postgres/pgstattuple/#_1","title":"\u80cc\u666f\u4ecb\u7ecd","text":"<p>\u7531\u4e8emvcc\u673a\u5236\uff0c\u6570\u636e\u88ab\u5220\u9664\u540e\u53ea\u662f\u88ab\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u5b9e\u9645\u7a7a\u95f4\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u8fd9\u662f\u8868\u7a7a\u95f4\u81a8\u80c0\u7684\u6839\u672c\u539f\u56e0\u3002</p> <p>\u76ee\u524d\u7528\u4e8e\u89e3\u51b3\u8868\u7a7a\u95f4\u81a8\u80c0\u65b9\u5f0f\u6709\u5982\u4e0b\u65b9\u5f0f</p> <p>1 \u5220\u9664dead tuple </p> <ul> <li>vacuum  ,tuple\u88ab\u6e05\u7406\u3002\u6570\u636e\u5e93\u53ef\u4ee5\u81ea\u52a8\u6267\u884cautovacuum</li> <li>vacuum full ,tuple\u88ab\u6e05\u7406\u5e76\u4e14\u7a7a\u95f4\u8fde\u7eed\u7d27\u51d1\u3002\u5f0a\u7aef\uff0c\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u9501\u8868\u3002\u5e94\u7528\u4e0d\u53ef\u7528</li> <li>\u4e3a\u4e86\u907f\u514d\u9501\u8868\u7684\u5f71\u54cd\uff0c\u63d0\u4f9b\u7684pg_squeeze\u62d3\u5c55,\u4f7f\u7528\u903b\u8f91\u590d\u5236\u3002pg_repack\u62d3\u5c55\uff0c\u4f7f\u7528\u4e86\u89e6\u53d1\u5668\uff0c\u5f71\u54cd\u4e1a\u52a1\u7684\u6027\u80fd\u3002</li> </ul> <p>2 fillfactor</p> <p>3 vacuum_defer_cleanup_age &gt; 0, \u662f\u4ee5\u4e8b\u52a1\u4e3a\u5355\u4f4d\u3002\u914d\u5408pg_resetwal \u53ef\u4ee5\u505a\u5230flashback</p> <pre><code>\u4ee3\u4ef71\uff0c\u4e3b\u5e93\u81a8\u80c0\uff0c\u56e0\u4e3a\u5783\u573e\u7248\u672c\u8981\u5ef6\u8fdf\u82e5\u5e72\u4e2a\u4e8b\u52a1\u540e\u624d\u80fd\u88ab\u56de\u6536\u3002\n\u4ee3\u4ef72\uff0c\u91cd\u590d\u626b\u63cf\u5783\u573e\u7248\u672c\uff0c\u91cd\u590d\u8017\u8d39\u5783\u573e\u56de\u6536\u8fdb\u7a0b\u7684CPU\u8d44\u6e90\u3002\uff08n_dead_tup\u4f1a\u4e00\u76f4\u5904\u4e8e\u8d85\u8fc7\u5783\u573e\u56de\u6536\u9608\u503c\u7684\u72b6\u6001\uff0c\u4ece\u800cautovacuum \u4e0d\u65ad\u5524\u9192worker\u8fdb\u884c\u56de\u6536\u52a8\u4f5c\uff09\u3002\n\u5f53\u4e3b\u5e93\u7684 autovacuum_naptime=\u5f88\u5c0f\u7684\u503c\uff0c\u540c\u65f6autovacuum_vacuum_scale_factor=\u5f88\u5c0f\u7684\u503c\u65f6\uff0c\u5c24\u4e3a\u660e\u663e\u3002\n\u4ee3\u4ef73\uff0c\u5982\u679c\u671f\u95f4\u53d1\u751f\u5927\u91cf\u5783\u573e\uff0c\u5783\u573e\u7248\u672c\u53ef\u80fd\u4f1a\u5728\u4e8b\u52a1\u5230\u8fbe\u5e76\u89e3\u7981\u540e\uff0c\u7206\u70b8\u6027\u7684\u88ab\u56de\u6536\uff0c\u4ea7\u751f\u5927\u91cf\u7684WAL\u65e5\u5fd7\uff0c\u4ece\u800c\u9020\u6210WAL\u7684\u5199IO\u5c16\u523a\u3002\n</code></pre> <p>4 reindex \u4ece\u65b0\u5efa\u7acb\u7d22\u5f15\uff0c\u4e0d\u8981\u5ffd\u7565\u8868\u81a8\u80c0\u4e2d\u7d22\u5f15\u7684\u5f71\u54cd\uff0c\u901a\u5e38\u6765\u8bf4\u7d22\u5f15\u6240\u5360\u7684\u7a7a\u95f4\u548c\u7ef4\u62a4\u6210\u672c\u8981\u9ad8\u4e8e\u6570\u636e\u8868\uff0c\u5728pg version 12\u7248\u672c\u4e2d\u9884\u8ba1reindex\u65f6\u4e0d\u9700\u8981\u9501\u8868\u3002</p>"},{"location":"postgres/pgstattuple/#_2","title":"\u5904\u7406\u5b8c\u6bd5\u540e\u9700\u8981\u91cd\u65b0\u751f\u6210\u7edf\u8ba1\u4fe1\u606f","text":"<pre><code> ANALYZE;\n</code></pre> <p>\u5728\u6267\u884c\u4ee5\u4e0a\u64cd\u4f5c\u65f6\u5efa\u8bae\u8bbe\u7f6e</p> <pre><code>set maintenance_work_mem = '10GB';\n</code></pre>"},{"location":"postgres/pgstattuple/#_3","title":"\u76d1\u63a7\u8868\u7a7a\u95f4\u81a8\u80c0","text":"<p>pgstattuple\u63d0\u4f9b\u4e86pgstatetuple()\u548cpgstatindex()\u4e24\u4e2a\u7edf\u8ba1\u8868\u548c\u7d22\u5f15\u7684\u65b9\u6cd5\uff0c\u8f83PostgreSQL\u7cfb\u7edf\u8868pg_class\u7684\u8868\u7edf\u8ba1\u4fe1\u606f\uff0cpgstatetuple()\u8fd8\u7edf\u8ba1\u4e86\u8868\u4e2d\u7684dead tuples\u3002</p> <p>https://www.postgresql.org/docs/current/pgstattuple.html</p> <p>\u521b\u5efa\u62d3\u5c55</p> <pre><code>create extension pgstattuple ;\n</code></pre> <pre><code>\u8868\ntest=&gt; SELECT * FROM pgstattuple('tablename');\n-[ RECORD 1 ]------+-------\ntable_len          | 458752\ntuple_count        | 1470\ntuple_len          | 438896\ntuple_percent      | 95.67\ndead_tuple_count   | 11\ndead_tuple_len     | 3157\ndead_tuple_percent | 0.69\nfree_space         | 8932\nfree_percent       | 1.95\n\n\u5b57\u6bb5\u8bf4\u660e\n\ntable_len   bigint  Physical relation length in bytes \u7b49\u4ef7\u4e8e pg_relation_size()\ntuple_count bigint  Number of live tuples \ntuple_len   bigint  Total length of live tuples in bytes\ntuple_percent   float8  Percentage of live tuples\ndead_tuple_count    bigint  Number of dead tuples\ndead_tuple_len  bigint  Total length of dead tuples in bytes\ndead_tuple_percent  float8  Percentage of dead tuples\nfree_space  bigint  Total free space in bytes\nfree_percent    float8  Percentage of free space\n\u4e09\u90e8\u5206 live(\u5b58\u6d3btuple) dead(\u88ab\u6807\u8bb0\u5220\u9664tuple) free(\u5269\u4f59\u7a7a\u95f4 \u5e94\u8be5\u662fdead tuple ,vacuum \u540e\u88ab\u91ca\u653e\u7684, filltor \u8bbe\u7f6e)\n\n\u6240\u7528\u8868\nselect tablename, (x).* from pg_tables ,LATERAL (select * from pgstattuple(tablename)) as X where schemaname = 'public' order by tuple_percent asc;\n\n\u7d22\u5f15\n\ntest=&gt; SELECT * FROM pgstatindex('index_name');\n-[ RECORD 1 ]------+------\nversion            | 2\ntree_level         | 0\nindex_size         | 16384\nroot_block_no      | 1\ninternal_pages     | 0\nleaf_pages         | 1\nempty_pages        | 0\ndeleted_pages      | 0\navg_leaf_density   | 54.27 (fillfator \u9ed8\u8ba490 \uff0c\u8be5\u503c\u63a5\u8fd190\u6bd4\u8f83\u6b63\u5e38)\nleaf_fragmentation | 0\n\n\u5b57\u6bb5\u8bf4\u660e\nversion integer B-tree version number\ntree_level  integer Tree level of the root page\nindex_size  bigint  Total index size in bytes\nroot_block_no   bigint  Location of root page (zero if none)\ninternal_pages  bigint  Number of \u201cinternal\u201d (upper-level) pages\nleaf_pages  bigint  Number of leaf pages\nempty_pages bigint  Number of empty pages\ndeleted_pages   bigint  Number of deleted pages\navg_leaf_density    float8  Average density of leaf pages\nleaf_fragmentation  float8  Leaf page fragmentation\n\n</code></pre>"},{"location":"postgres/pgstattuple/#_4","title":"\u7b80\u5355\u4f7f\u7528","text":"<pre><code>--- \u751f\u6210\u6d4b\u8bd5\u6570\u636e\n\ntest=# create  table tb3(id integer,name character varying);\nCREATE TABLE\ntest=# \\d+ tb3 \n                                  \u6570\u636e\u8868 \"public.tb3\"\n \u680f\u4f4d |       \u7c7b\u578b        | Collation | Nullable | Default |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0 \n------+-------------------+-----------+----------+---------+----------+----------+------\n id   | integer           |           |          |         | plain    |          | \n name | character varying |           |          |         | extended |          | \n\ntest=#  alter table tb3 add primary key(id);\nALTER TABLE\ntest=# \\d+ tb3 \n                                  \u6570\u636e\u8868 \"public.tb3\"\n \u680f\u4f4d |       \u7c7b\u578b        | Collation | Nullable | Default |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0 \n------+-------------------+-----------+----------+---------+----------+----------+------\n id   | integer           |           | not null |         | plain    |          | \n name | character varying |           |          |         | extended |          | \n\u7d22\u5f15\uff1a\n    \"tb3_pkey\" PRIMARY KEY, btree (id)\n\ntest=# insert into tb3 select generate_series(1,1000000),md5(random()::text);\nINSERT 0 1000000\n\n--- \u521b\u5efa\u62d3\u5c55\n\ntest=# create extension pgstattuple ;\nCREATE EXTENSION\ntest=# select * from pgstattuple('tb3');\n-[ RECORD 1 ]------+---------\ntable_len          | 68272128\ntuple_count        | 1000000\ntuple_len          | 61000000\ntuple_percent      | 89.35\ndead_tuple_count   | 0\ndead_tuple_len     | 0\ndead_tuple_percent | 0\nfree_space         | 38776\nfree_percent       | 0.06\n\ntest=# select * from pgstatindex('tb3_pkey');\n-[ RECORD 1 ]------+---------\nversion            | 2\ntree_level         | 2\nindex_size         | 22487040\nroot_block_no      | 412\ninternal_pages     | 11\nleaf_pages         | 2733\nempty_pages        | 0\ndeleted_pages      | 0\navg_leaf_density   | 90.06\nleaf_fragmentation | 0\n\ntest=# delete from tb3 where id%5=0;\nDELETE 200000\ntest=# select * from pgstatindex('tb3_pkey');\n-[ RECORD 1 ]------+---------\nversion            | 2\ntree_level         | 2\nindex_size         | 22487040\nroot_block_no      | 412\ninternal_pages     | 11\nleaf_pages         | 2733\nempty_pages        | 0\ndeleted_pages      | 0\navg_leaf_density   | 90.06\nleaf_fragmentation | 0\n\ntest=# select * from pgstattuple('tb3');\n-[ RECORD 1 ]------+---------\ntable_len          | 68272128\ntuple_count        | 800000\ntuple_len          | 48800000\ntuple_percent      | 71.48\ndead_tuple_count   | 200000\ndead_tuple_len     | 12200000\ndead_tuple_percent | 17.87\nfree_space         | 38776\nfree_percent       | 0.06\n\ntest=#  vacuum tb3;\nVACUUM\ntest=# select * from pgstattuple('tb3');\n-[ RECORD 1 ]------+---------\ntable_len          | 68272128\ntuple_count        | 800000\ntuple_len          | 48800000\ntuple_percent      | 71.48\ndead_tuple_count   | 0\ndead_tuple_len     | 0\ndead_tuple_percent | 0\nfree_space         | 12838776\nfree_percent       | 18.81\n\ntest=# select * from pgstatindex('tb3_pkey');\n-[ RECORD 1 ]------+---------\nversion            | 2\ntree_level         | 2\nindex_size         | 22487040\nroot_block_no      | 412\ninternal_pages     | 11\nleaf_pages         | 2733\nempty_pages        | 0\ndeleted_pages      | 0\navg_leaf_density   | 72.11\nleaf_fragmentation | 0\n\ntest=# select * from pgstattuple('tb3');\n-[ RECORD 1 ]------+---------\ntable_len          | 68272128\ntuple_count        | 800000\ntuple_len          | 48800000\ntuple_percent      | 71.48\ndead_tuple_count   | 0\ndead_tuple_len     | 0\ndead_tuple_percent | 0\nfree_space         | 12838776\nfree_percent       | 18.81\n\ntest=# vacuum full tb3;\nVACUUM\ntest=# select * from pgstattuple('tb3');\n-[ RECORD 1 ]------+---------\ntable_len          | 54616064\ntuple_count        | 800000\ntuple_len          | 48800000\ntuple_percent      | 89.35\ndead_tuple_count   | 0\ndead_tuple_len     | 0\ndead_tuple_percent | 0\nfree_space         | 29388\nfree_percent       | 0.05\n\n\n</code></pre>"},{"location":"postgres/pgstattuple/#_5","title":"\u67e5\u770b\u6bcf\u4e00\u9875\u7684\u7a7a\u95f4\u5229\u7528","text":"<p>\u521b\u5efa\u62d3\u5c55</p> <pre><code>create extension pg_freespacemap;\n\n</code></pre> <p>\u67e5\u770b\u6ca1\u4e2a\u9875\u7684\u7a7a\u95f4\u5229\u7528 </p> <pre><code>select * from pg_freespace('tablename');\n</code></pre> <p>\u67e5\u770b\u8868\u7684\u7a7a\u95f4\u5229\u7528</p> <pre><code>select count(*) as \"number of pages\", pg_size_pretty(cast(avg(avail) as bigint)) as \"freespace size \", round(100* avg(avail)/8192,2) as \"freespace ratio\" \nfrom pg_freespace('tablename');\n</code></pre> <p>\u5b9e\u6218</p>"},{"location":"postgres/pgstattuple/#_6","title":"\u8868\u7a7a\u95f4\u6570\u636e\u81a8\u80c0\u7684\u76d1\u63a7\u4e0e\u5904\u7406","text":"<p>\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u4f20\u7edf\u65b9\u5f0f\u7edf\u8ba1\u8868\u7a7a\u95f4\u7684\u81a8\u80c0\u7387\u975e\u5e38\u8017\u65f6\u8017\u8d44\u6e90\u3002</p> <p>\u7ed3\u5408\u7edf\u8ba1\u60c5\u51b5\uff0c\u5229\u7528pg_repack\u53ef\u4e0d\u505c\u670d\u5904\u7406\u3002\u5904\u7406\u524d\u67e5\u770b\u662f\u5426\u6709vacuum\u8fdb\u7a0b\u6b63\u5728\u6267\u884c\uff0c\u907f\u514d\u51b2\u7a81\u3002</p> <pre><code>-- CREATE SCHEMA \n\nCREATE SCHEMA IF NOT EXISTS monitor;\nCREATE EXTENSION IF NOT EXISTS pg_repack WITH SCHEMA monitor;\n\n-- Table bloat estimate\nCREATE OR REPLACE VIEW monitor.pg_table_bloat AS\n    SELECT CURRENT_CATALOG AS datname, nspname, relname , bs * tblpages AS size,\n           CASE WHEN tblpages - est_tblpages_ff &gt; 0 THEN (tblpages - est_tblpages_ff)/tblpages::FLOAT ELSE 0 END AS ratio\n    FROM (\n             SELECT ceil( reltuples / ( (bs-page_hdr)*fillfactor/(tpl_size*100) ) ) + ceil( toasttuples / 4 ) AS est_tblpages_ff,\n                    tblpages, fillfactor, bs, tblid, nspname, relname, is_na\n             FROM (\n                      SELECT\n                          ( 4 + tpl_hdr_size + tpl_data_size + (2 * ma)\n                              - CASE WHEN tpl_hdr_size % ma = 0 THEN ma ELSE tpl_hdr_size % ma END\n                              - CASE WHEN ceil(tpl_data_size)::INT % ma = 0 THEN ma ELSE ceil(tpl_data_size)::INT % ma END\n                              ) AS tpl_size, (heappages + toastpages) AS tblpages, heappages,\n                          toastpages, reltuples, toasttuples, bs, page_hdr, tblid, nspname, relname, fillfactor, is_na\n                      FROM (\n                               SELECT\n                                   tbl.oid AS tblid, ns.nspname , tbl.relname, tbl.reltuples,\n                                   tbl.relpages AS heappages, coalesce(toast.relpages, 0) AS toastpages,\n                                   coalesce(toast.reltuples, 0) AS toasttuples,\n                                   coalesce(substring(array_to_string(tbl.reloptions, ' ') FROM 'fillfactor=([0-9]+)')::smallint, 100) AS fillfactor,\n                                   current_setting('block_size')::numeric AS bs,\n                                   CASE WHEN version()~'mingw32' OR version()~'64-bit|x86_64|ppc64|ia64|amd64' THEN 8 ELSE 4 END AS ma,\n                                   24 AS page_hdr,\n                                   23 + CASE WHEN MAX(coalesce(s.null_frac,0)) &gt; 0 THEN ( 7 + count(s.attname) ) / 8 ELSE 0::int END\n                                       + CASE WHEN bool_or(att.attname = 'oid' and att.attnum &lt; 0) THEN 4 ELSE 0 END AS tpl_hdr_size,\n                                   sum( (1-coalesce(s.null_frac, 0)) * coalesce(s.avg_width, 0) ) AS tpl_data_size,\n                                   bool_or(att.atttypid = 'pg_catalog.name'::regtype)\n                                       OR sum(CASE WHEN att.attnum &gt; 0 THEN 1 ELSE 0 END) &lt;&gt; count(s.attname) AS is_na\n                               FROM pg_attribute AS att\n                                        JOIN pg_class AS tbl ON att.attrelid = tbl.oid\n                                        JOIN pg_namespace AS ns ON ns.oid = tbl.relnamespace\n                                        LEFT JOIN pg_stats AS s ON s.schemaname=ns.nspname AND s.tablename = tbl.relname AND s.inherited=false AND s.attname=att.attname\n                                        LEFT JOIN pg_class AS toast ON tbl.reltoastrelid = toast.oid\n                               WHERE NOT att.attisdropped AND tbl.relkind = 'r' AND nspname NOT IN ('pg_catalog','information_schema')\n                               GROUP BY 1,2,3,4,5,6,7,8,9,10\n                           ) AS s\n                  ) AS s2\n         ) AS s3\n    WHERE NOT is_na;\n\n-- Index bloat estimate\nCREATE OR REPLACE VIEW monitor.pg_index_bloat AS\n    SELECT CURRENT_CATALOG AS datname, nspname, idxname AS relname, relpages::BIGINT * bs AS size,\n           COALESCE((relpages - ( reltuples * (6 + ma - (CASE WHEN index_tuple_hdr % ma = 0 THEN ma ELSE index_tuple_hdr % ma END)\n                                                   + nulldatawidth + ma - (CASE WHEN nulldatawidth % ma = 0 THEN ma ELSE nulldatawidth % ma END))\n                                      / (bs - pagehdr)::FLOAT  + 1 )), 0) / relpages::FLOAT AS ratio\n    FROM (\n             SELECT nspname,\n                    idxname,\n                    reltuples,\n                    relpages,\n                    current_setting('block_size')::INTEGER                                                               AS bs,\n                    (CASE WHEN version() ~ 'mingw32' OR version() ~ '64-bit|x86_64|ppc64|ia64|amd64' THEN 8 ELSE 4 END)  AS ma,\n                    24                                                                                                   AS pagehdr,\n                    (CASE WHEN max(COALESCE(pg_stats.null_frac, 0)) = 0 THEN 2 ELSE 6 END)                               AS index_tuple_hdr,\n                    sum((1.0 - COALESCE(pg_stats.null_frac, 0.0)) *\n                        COALESCE(pg_stats.avg_width, 1024))::INTEGER                                                     AS nulldatawidth\n             FROM pg_attribute\n                      JOIN (\n                 SELECT pg_namespace.nspname,\n                        ic.relname                                                   AS idxname,\n                        ic.reltuples,\n                        ic.relpages,\n                        pg_index.indrelid,\n                        pg_index.indexrelid,\n                        tc.relname                                                   AS tablename,\n                        regexp_split_to_table(pg_index.indkey::TEXT, ' ') :: INTEGER AS attnum,\n                        pg_index.indexrelid                                          AS index_oid\n                 FROM pg_index\n                          JOIN pg_class ic ON pg_index.indexrelid = ic.oid\n                          JOIN pg_class tc ON pg_index.indrelid = tc.oid\n                          JOIN pg_namespace ON pg_namespace.oid = ic.relnamespace\n                          JOIN pg_am ON ic.relam = pg_am.oid\n                 WHERE pg_am.amname = 'btree' AND ic.relpages &gt; 0 AND nspname NOT IN ('pg_catalog', 'information_schema')\n             ) ind_atts ON pg_attribute.attrelid = ind_atts.indexrelid AND pg_attribute.attnum = ind_atts.attnum\n                      JOIN pg_stats ON pg_stats.schemaname = ind_atts.nspname\n                 AND ((pg_stats.tablename = ind_atts.tablename AND pg_stats.attname = pg_get_indexdef(pg_attribute.attrelid, pg_attribute.attnum, TRUE))\n                     OR (pg_stats.tablename = ind_atts.idxname AND pg_stats.attname = pg_attribute.attname))\n             WHERE pg_attribute.attnum &gt; 0\n             GROUP BY 1, 2, 3, 4, 5, 6\n         ) est\n    LIMIT 512;\n\n-- index bloat overview\nCREATE OR REPLACE VIEW monitor.pg_table_bloat_human AS\n    SELECT nspname || '.' || relname AS name,\n           pg_size_pretty(size)      AS size,\n           pg_size_pretty((size * ratio)::BIGINT) AS wasted,\n           round(100 * ratio::NUMERIC, 2)  as ratio\n    FROM monitor.pg_table_bloat ORDER BY wasted DESC NULLS LAST;\n\nCREATE OR REPLACE VIEW monitor.pg_index_bloat_human AS\n    SELECT nspname || '.' || relname              AS name,\n           pg_size_pretty(size)                   AS size,\n           pg_size_pretty((size * ratio)::BIGINT) AS wasted,\n           round(100 * ratio::NUMERIC, 2)         as ratio\n    FROM monitor.pg_index_bloat;\n</code></pre>"},{"location":"postgres/pgstattuple/#_7","title":"\u4e3b\u8981\u539f\u56e0\u5206\u6790\u53ca\u76d1\u63a7\u63aa\u65bd","text":""},{"location":"postgres/pgstattuple/#_8","title":"\u957f\u4e8b\u52a1","text":"<pre><code>-- \u8de8\u4e8b\u52a1\nSELECT pid, datname, usename, state, backend_xmin\nFROM pg_stat_activity\nWHERE backend_xmin IS NOT NULL\nORDER BY age(backend_xmin) DESC;\n</code></pre> <pre><code>-- \u8de8\u65f6\u95f4\nselect * from pg_stat_activity \nwhere state&lt;&gt;'idle' and pg_backend_pid()!=pid and (backend_xid is not null or backend_xmin is not null) and \nextract(epoch from(now()-xact_start))&gt;6 \norder by xact_start;\n</code></pre>"},{"location":"postgres/pgstattuple/#_9","title":"\u5e9f\u5f03\u7684\u590d\u5236\u69fd","text":"<pre><code>SELECT slot_name, slot_type, database, xmin\nFROM pg_replication_slots\nORDER BY age(xmin) DESC;\n</code></pre>"},{"location":"postgres/pgstattuple/#_10","title":"\u4e24\u9636\u6bb5\u63d0\u4ea4","text":"<pre><code>SELECT gid, prepared, owner, database, transaction AS xmin\nFROM pg_prepared_xacts\nORDER BY age(transaction) DESC;\n</code></pre>"},{"location":"postgres/pgwatch2/","title":"pgwatch2 \u6570\u636e\u5e93\u6307\u6807\u76d1\u63a7\u67e5\u770b","text":""},{"location":"postgres/pgwatch2/#_1","title":"\u4ecb\u7ecd","text":"<p>pgwatch2\u5b98\u65b9</p> <p>\u5b98\u65b9\u6f14\u793a\u793a\u4f8b</p> <p>\u67b6\u6784 agent server</p> <ul> <li> <p>agent \u5728\u88ab\u76d1\u63a7\u7684pg\u4e0a\u81ea\u5b9a\u4e49\u65b9\u6cd5\uff0c\u7528\u4e8e\u6536\u96c6\u6570\u636e\u5e93\u4fe1\u606f\u3002\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5\u9700\u8981\u4f9d\u8d56\u9700\u8981\u6570\u636e\u5e93\u6269\u5c55\u5982pg_stat_statements,plpythonu.</p> </li> <li> <p>server \u8d1f\u8d23\u5b58\u50a8\u6536\u96c6\u8fc7\u6765\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5b58\u653e\u5728postgres\u6216influxdb\u4e2d. \u5e76\u5c06\u6536\u96c6\u7684\u4fe1\u606f\u8fdb\u884c\u5c55\u793agrafana.</p> </li> </ul>"},{"location":"postgres/pgwatch2/#_2","title":"\u5b89\u88c5","text":"<p>\u5ba2\u6237\u7aef</p> <p>\u4f9d\u8d56\u7684\u62d3\u5c55</p> <pre><code>yum install postgresql10-plpython.x86_64 -y\n\n</code></pre> <p>\u914d\u7f6e\u6570\u636e\u5e93,\u9700\u8981\u91cd\u542f\u6570\u636e\u5e93\u751f\u6548\uff0c\u591a\u4e2a\u62d3\u5c55\u4e4b\u95f4\u7528,\u53f7\u5206\u5272\u3002</p> <pre><code>shared_preload_libraries = 'pg_stat_statements'              \n</code></pre> <p>\u8fde\u63a5\u5230\u5bf9\u5e94\u7684\u6570\u636e\u5e93\uff0c\u521b\u5efa\u62d3\u5c55</p> <pre><code>CREATE EXTENSION pg_stat_statements;\nCREATE EXTENSION plpythonu;\n</code></pre> <p>\u521b\u5efa\u81ea\u5b9a\u4e49\u65b9\u6cd5, \u4f7f\u7528supper user \u7528\u6237\u6267\u884c\u5982\u4e0bsql. \u6ce8\u610f\u5c06\u4e0b\u9762\u7684pql \u4fe1\u606f\u4e2d\u7684\u7528\u6237\u4fe1\u606f\u66ff\u6362\u6210\u81ea\u5df1\u7684\u6570\u636e\u5e93\u8fde\u63a5\u7528\u6237\u3002</p> <pre><code>\u8be5\u76ee\u5f55\u4e0b\u4e3a\u6240\u6709\u7684\u81ea\u5b9a\u4e49\u65b9\u6cd5\nhttps://github.com/cybertec-postgresql/pgwatch2/tree/master/pgwatch2/sql/metric_fetching_helpers\n\nhttps://github.com/cybertec-postgresql/pgwatch2/blob/master/pgwatch2/sql/metric_fetching_helpers/stat_statements_wrapper.sql\n\nhttps://github.com/cybertec-postgresql/pgwatch2/blob/master/pgwatch2/sql/metric_fetching_helpers/cpu_load_plpythonu.sql\n</code></pre> <p>\u670d\u52a1\u7aef</p> <p>\u4f7f\u7528docker-compose \u6765\u7ba1\u7406\u670d\u52a1\uff0c\u5207\u90fd\u53d8\u5f97\u90a3\u4e48easy\uff01</p> <pre><code>cat docker-compose.yaml \nversion: '2'\nservices:\n  pgw2:\n    restart: unless-stopped\n    image: cybertec/pgwatch2\n    container_name: pw2\n    ports:\n      - 3000:3000 \n      - 8080:8080 \n    volumes:\n      - ./data/pg:/var/lib/postgresql\n      - ./data/influx:/var/lib/influxdb\n      - ./data/grafana:/var/lib/grafana\n      - ./data/pw2:/pgwatch2/persistent-config\n#    environment:\n#      - NOTESTDB=1 \n</code></pre> <p>\u8bf4\u660e\uff1a \u7aef\u53e3 3000 grafana\u754c\u9762\u5c55\u793a\u7aef\u53e3 , 8080 \u540e\u53f0\u7ba1\u7406\u7aef\u53e3 \u6570\u636e\u5377 data \u6302\u5728\u5230\u5b9e\u4f53\u4e3b\u673a\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"postgres/pgwatch2/#_3","title":"\u914d\u7f6e","text":"<p>\u8bbf\u95ee8080\u7aef\u53e3\u8fdb\u884c\u540e\u53f0\u914d\u7f6e\uff0c</p> <p>DBs \u6570\u636e\u5e93\u76d1\u63a7\u8fde\u63a5\u4fe1\u606f Metrics \u5ea6\u91cf Logs \u65e5\u5fd7\u4fe1\u606f\uff0c \u914d\u7f6e\u540e\u67e5\u770b\u65e5\u5fd7\u4fe1\u606f\uff0c\u591a\u6570\u4e3a\u7f3a\u5c11\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u5728\u88ab\u76d1\u63a7\u7684\u6570\u636e\u5e93\u4e2d\u5b9a\u4e49\u5c31\u597d\u3002</p> <p>\u8bbf\u95ee 3000 \u7aef\u53e3\uff0c\u67e5\u770b\u6570\u636e\u5e93\u6307\u6807\u3002</p>"},{"location":"postgres/physical-backup/","title":"\u7269\u7406\u5907\u4efd","text":"<pre><code>pg_basebackup -h 10.2.0.14 -U postgres -F p -P  -D /var/lib/pgsql/xx/data/ --checkpoint=fast -l postgresback2018\n</code></pre>"},{"location":"postgres/pipelinedb01/","title":"Pipelinedb\u6587\u6863\u6982\u89c8","text":"<p>\u5b98\u65b9\u6587\u6863</p>"},{"location":"postgres/pipelinedb01/#_1","title":"\u4ecb\u7ecd","text":"<p>What PipelineDB is   What PipelineDB is not    </p>"},{"location":"postgres/pipelinedb01/#quitstart","title":"QuitStart","text":"<p>\u4e00\u4e2a\u7edf\u8ba1wiki\u6d4f\u89c8\u7684\u4f8b\u5b50</p>"},{"location":"postgres/pipelinedb01/#_2","title":"\u5b89\u88c5","text":"<p>\u5404\u79cd\u73af\u5883\u5b89\u88c5</p>"},{"location":"postgres/pipelinedb01/#continuous-views","title":"Continuous Views","text":"<p>\u5b9a\u4e49\u6d41\u89c6\u56fe\uff0c\u5176\u5b9e\u5c31\u662f\u5b9a\u4e49 \u7edf\u8ba1\u5206\u6790\u7684QUERY\uff0c \u4f8b\u5982select id, count(*), avg(x), ... from table group by ...; \u5b9a\u4e49\u597d\u4e4b\u540e\uff0c\u6570\u636e\u63d2\u5165table\uff0c\u8fd9\u4e2a\u6d41\u89c6\u56fe\u5c31\u4f1a\u4e0d\u65ad\u589e\u91cf\u7684\u8fdb\u884c\u7edf\u8ba1\uff0c\u4f60\u53ea\u8981\u67e5\u8be2\u8fd9\u4e2a\u6d41\u89c6\u56fe\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u5b9e\u65f6\u7684\u7edf\u8ba1\u7ed3\u679c\u3002 \u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u662f\u5b9e\u65f6\u7edf\u8ba1\u7684\u7ed3\u679c\uff08\u5b9e\u9645\u4e0a\u662f\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u589e\u91cf\u5408\u5e76\u7684\uff0c\u589e\u91cf\u7684\u65b9\u5f0f\u6301\u4e45\u5316\uff09\u3002</p> <p>CREATE CONTINUOUS VIEW   DROP CONTINUOUS VIEW   TRUNCATE CONTINUOUS VIEW   Viewing Continuous Views   Data Retrieval   Time-to-Live (TTL) Expiration   Activation and Deactivation   Examples    </p>"},{"location":"postgres/pipelinedb01/#continuous-transforms","title":"Continuous Transforms","text":"<p>\u4e0e\u6d41\u89c6\u56fe\u4e0d\u540c\u7684\u662f\uff0ctransform\u662f\u7528\u6765\u8f6c\u6362\u6570\u636e\u6d41\u7684\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u4e0d\u4fdd\u7559\u6570\u636e\uff0c\u4f46\u662f\u53ef\u4ee5\u8bbe\u5b9a\u6761\u4ef6\uff0c\u5f53\u8bb0\u5f55\u6ee1\u8db3\u6761\u4ef6\u65f6\uff0c\u5c31\u89e6\u53d1\u4e8b\u4ef6\u3002</p> <p>\u7528\u9014\uff0c\u5c06\u8f93\u5165\u7684\u6570\u636e\u6d41\u8fdb\u884c\u8f6c\u6362\u5904\u7406\uff0c\u8fc7\u6ee4\uff0c\u52a0\u5de5\u7b49\uff0c\u7528\u4e8e\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u6bd4\u5982\u591a\u4e2a\u6765\u6e90\u7684\u6570\u636e\u6d41\u7684\u5408\u5e76\u52a0\u5de5\u3002\u4e0e\u73b0\u6709\u7684\u8868\u8fdb\u884cjoins\u64cd\u4f5c,\u53ef\u4ee5\u5c06\u7ed3\u679c\u4f20\u5165\u5176\u4ed6\u6d41\u4e2d\uff0c\u5b9e\u73b0\u6301\u7eed\u8f6c\u6362\u3002</p> <p>\u4f8b\u5982\u76d1\u89c6\u4f20\u611f\u5668\u7684\u503c\uff0c\u5f53\u503c\u7684\u8303\u56f4\u8d85\u51fa\u65f6\uff0c\u89e6\u53d1\u62a5\u8b66\uff08\u5982\u901a\u8fc7REST\u63a5\u53e3\u53d1\u7ed9\u6307\u5b9a\u7684server\uff09\uff0c\u6216\u8005\u5c06\u62a5\u8b66\u8bb0\u5f55\u4e0b\u6765\uff08\u901a\u8fc7\u89e6\u53d1\u5668\u51fd\u6570\uff09\u3002</p> <p>CREATE CONTINUOUS TRANSFORM   DROP CONTINUOUS TRANSFORM   Viewing Continuous Transforms   Built-in Transform Triggers   Creating Your Own Trigger    </p>"},{"location":"postgres/pipelinedb01/#streams","title":"Streams","text":"<p>\u6d41\u89c6\u56fe\u548ctransform\u90fd\u662f\u57fa\u4e8e\u6d41\u7684\uff0c\u6240\u4ee5\u6d41\u662f\u57fa\u7840\u3002</p> <p>\u6211\u4eec\u9996\u5148\u9700\u8981\u5b9a\u4e49\u6d41\uff0c\u5f80\u6d41\u91cc\u9762\u5199\u6570\u636e\uff0c\u7136\u540e\u5728\u6d41\u52a8\u7684\u6570\u636e\u4e2d\u4f7f\u7528\u6d41\u89c6\u56fe\u6216\u8005transform\u5bf9\u6570\u636e\u8fdb\u884c\u5b9e\u65f6\u5904\u7406\u3002</p> <p>Writing To Streams   Output Streams   stream_targets   Arrival Ordering   Event Expiration </p>"},{"location":"postgres/pipelinedb01/#built-in-functionality","title":"Built-in Functionality","text":"<p>\u5185\u7f6e\u7684\u51fd\u6570</p> <p>General   Aggregates   PipelineDB-specific Types   PipelineDB-specific Functions   Miscellaneous Functions </p>"},{"location":"postgres/pipelinedb01/#continuous-aggregates","title":"Continuous Aggregates","text":"<p>\u805a\u5408\u7684\u4ecb\u7ecd\uff0c\u901a\u5e38\u6d41\u5904\u7406\u5206\u4e24\u7c7b\uff0c\u5373\u524d\u9762\u8bb2\u7684</p> <p>\u6d41\u89c6\u56fe\uff08\u901a\u5e38\u662f\u5b9e\u65f6\u805a\u5408\u7684\u7ed3\u679c\uff09\uff0c\u6bd4\u5982\u6309\u5206\u949f\u5b9e\u65f6\u7684\u5bf9\u7ea2\u7eff\u706f\u7684\u8f66\u6d41\u7edf\u8ba1\u6570\u636e\u7ed8\u56fe\uff0c\u6216\u8005\u6309\u5206\u949f\u5bf9\u80a1\u7968\u7684\u5b9e\u65f6\u6570\u636e\u8fdb\u884c\u7ed8\u56fe\u3002</p> <p>transform\uff08\u4e8b\u4ef6\u5904\u7406\u673a\u5236\uff09\uff0c\u6bd4\u5982\u76d1\u63a7\u6c34\u8d28\uff0c\u4f20\u611f\u5668\u7684\u503c\u8d85\u51fa\u67d0\u4e2a\u8303\u56f4\u65f6\uff0c\u8bb0\u5f55\u65e5\u5fd7\uff0c\u5e76\u540c\u65f6\u89e6\u53d1\u544a\u8b66\uff08\u53d1\u9001\u7ed9server\uff09\u3002</p> <p>PipelineDB-specific Aggregates   Combine   CREATE AGGREGATE   General Aggregates   Statistical Aggregates   Ordered-set Aggregates   Hypothetical-set Aggregates   Unsupported Aggregates   </p>"},{"location":"postgres/pipelinedb01/#clients","title":"Clients","text":"<p>\u51e0\u79cd\u5e38\u89c1\u7684\u5ba2\u6237\u7aef\u7528\u6cd5\uff0c\u5b9e\u9645\u4e0a\u652f\u6301PostgreSQL\u7684\u90fd\u652f\u6301pipelinedb\uff0c\u4ed6\u4eec\u7684\u8fde\u63a5\u534f\u8bae\u662f\u4e00\u81f4\u7684\u3002</p> <p>Python   Ruby   Java   </p>"},{"location":"postgres/pipelinedb01/#probabilistic-data-structures-algorithms","title":"Probabilistic Data Structures &amp; Algorithms","text":"<p>\u6982\u7387\u7edf\u8ba1\u76f8\u5173\u7684\u529f\u80fd\uff0c\u4f8b\u5982HLL\u7b49\u3002\u7528\u8d77\u6765\u4e5f\u975e\u5e38\u7684\u723d\uff0c\u4f8b\u5982\u7edf\u8ba1\u7f51\u7ad9\u7684UV\uff0c\u6216\u8005\u7ea2\u7eff\u706f\u901a\u8fc7\u7684\u6c7d\u8f66\u7f16\u53f7\u552f\u4e00\u503c\u8f66\u6d41\uff0c\u901a\u8fc7\u624b\u673a\u4fe1\u53f7\u7edf\u8ba1\u57fa\u7ad9\u8f90\u5c04\u65b9\u5706\u591a\u5c11\u516c\u91cc\u7684\u6309\u65f6UV\u7b49\u3002</p> <p>Bloom Filter   Count-Min Sketch   Filtered-Space Saving Top-K   HyperLogLog   T-Digest    </p>"},{"location":"postgres/pipelinedb01/#sliding-windows","title":"Sliding Windows","text":"<p>\u56e0\u4e3a\u5f88\u591a\u573a\u666f\u7684\u6570\u636e\u6709\u65f6\u6548\uff0c\u6216\u8005\u6709\u65f6\u95f4\u7a97\u53e3\u7684\u6982\u5ff5\uff0c\u6240\u4ee5pipelinedb\u63d0\u4f9b\u4e86\u7a97\u53e3\u5206\u7247\u7684\u63a5\u53e3\uff0c\u5141\u8bb8\u7528\u6237\u5bf9\u6570\u636e\u7684\u65f6\u6548\u8fdb\u884c\u5b9a\u4e49\u3002</p> <p>\u4f8b\u5982\u4ec5\u4ec5\u7edf\u8ba1\u6700\u8fd1\u4e00\u5206\u949f\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u7edf\u8ba1\u6570\u636e\u3002</p> <p>\u6bd4\u5982\u70ed\u529b\u56fe\uff0c\u5c55\u793a\u6700\u8fd1\u4e00\u5206\u949f\u7684\u70ed\u5ea6\uff0c\u5bf9\u4e8e\u65e7\u7684\u6570\u636e\u4e0d\u5173\u5fc3\uff0c\u5c31\u53ef\u4ee5\u9002\u5e94SW\u8fdb\u884c\u5b9a\u4e49\uff0c\u4ece\u800c\u4fdd\u7559\u7684\u6570\u636e\u5c11\uff0c\u5bf9\u673a\u5668\u7684\u8981\u6c42\u4f4e\uff0c\u6548\u7387\u8fd8\u9ad8\u3002</p> <p>Examples   Sliding Aggregates   Temporal Invalidation   Multiple Windows   step_factor    </p>"},{"location":"postgres/pipelinedb01/#continuous-joins","title":"Continuous JOINs","text":"<p>\u6d41\u89c6\u56fe \u652f\u6301JOIN\uff0c\u652f\u6301JOIN\uff0c\u652f\u6301JOIN\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\u3002</p> <p>\u6d41 JOIN \u6d41(\u672a\u6765\u7248\u672c\u652f\u6301,\u76ee\u524d\u53ef\u4ee5\u901a\u8fc7transform\u95f4\u63a5\u5b9e\u73b0)</p> <p>\u6d41 JOIN TABLE(\u5df2\u652f\u6301)</p> <p>Stream-table JOINs   Supported Join Types   Examples   Stream-stream JOINs </p>"},{"location":"postgres/pipelinedb01/#backup","title":"Backup","text":"<p>\u4e0epg\u6570\u636e\u76f8\u540c\uff0c\u5982\u679c\u5355\u72ec\u5907\u4efd\u51fa\u4e00\u4e2a\u89c6\u56fe\u9700\u8981\u4e0e\u5bf9\u5e94\u7684\u7269\u5316\u8868\u4e00\u540c\u5907\u4efd\u3002</p>"},{"location":"postgres/pipelinedb01/#replication","title":"Replication","text":"<p>\u4f9d\u8d56\u4e8epg\u6570\u636e\u5e93\u6d41\u590d\u5236\uff0c HA \u53ef\u4ee5\u4f7f\u7528Patroni</p>"},{"location":"postgres/pipelinedb01/#integrations","title":"Integrations","text":"<ul> <li> <p>Apache Kafka  </p> </li> <li> <p>Amazon Kinesis</p> </li> </ul>"},{"location":"postgres/pipelinedb01/#statistics","title":"Statistics","text":"<p>\u7edf\u8ba1\u4fe1\u606f\uff0c\u5bf9\u4e8eDBA\u6709\u5f88\u5927\u7684\u5e2e\u52a9</p> <p>pipelinedb.proc_stats   pipelinedb.query_stats   pipelinedb.stream_stats   pipelinedb.db_stats </p>"},{"location":"postgres/pipelinedb01/#configuration","title":"Configuration","text":""},{"location":"postgres/pipelinedb01/#pipelinedbstream_insert_level","title":"pipelinedb.stream_insert_level","text":"<p>\u6027\u80fd\u6700\u4f73\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aasync\uff0c\u6570\u636e\u5199\u5165\u5185\u5b58\u5373\u54cd\u5e94\u5199\u5165\u5ba2\u6237\u7aef\u3002 \u6027\u80fd\u9002\u4e2d\uff0c\u8bbe\u7f6e\u4e3async_receive\uff0c\u6570\u636e\u88abworker process\u63a5\u6536\u540e\u54cd\u5e94\u5199\u5165\u5ba2\u6237\u7aef\u3002 (\u9ed8\u8ba4\u503c) \u6d4b\u8bd5\u73af\u5883, sync_commit</p>"},{"location":"postgres/pipelinedb01/#pipelinedbnum_combiners","title":"pipelinedb.num_combiners","text":"<p>\u6709\u591a\u5c11\u4e2acombiner\u8fdb\u7a0b\u3002\u7531\u4e8ecombiner\u8fdb\u7a0b\u8d1f\u8d23\u5c06\u8ba1\u7b97\u597d\u7684\u7ed3\u679c\u6570\u636e\u5408\u5e76\u843d\u76d8\uff0c\u6240\u4ee5\u5f53\u8bbe\u7f6e\u7684COMBINER\u8fdb\u7a0b\u4e2a\u6570\u8db3\u591f\u8fbe\u5230IO\u74f6\u9888\u65f6\u4e3a\u5b9c\u3002\u8bbe\u7f6e\u53d6\u51b3\u4e8eIO\u80fd\u529b\u3002    </p>"},{"location":"postgres/pipelinedb01/#pipelinedbcommit_interval","title":"pipelinedb.commit_interval","text":"<p>\u6bcf\u4e2acombiner\u8fdb\u7a0b\uff0c\u4f1a\u5148\u5c06\u5408\u5e76\u7684\u7ed3\u679c\u6570\u636eHOLD\u5728combiner_work_mem\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002commit_interval\u8868\u793a\u95f4\u9694\u591a\u957f\u65f6\u95f4\u5237\u63d0\u4ea4\u7ed3\u679c\u3002    </p>"},{"location":"postgres/pipelinedb01/#pipelinedbnum_workers","title":"pipelinedb.num_workers","text":"<p>worker\u8fdb\u7a0b\u8d1f\u8d23\u8ba1\u7b97STREAM\u4e0a\u5b9a\u4e49\u7684continue view, continue transform\u3002  \u8bbe\u7f6e\u53d6\u51b3\u4e8e\u6709\u591a\u5c11STREAM\uff0c\u6709\u591a\u5c11continue view, continue transform\uff0c\u6709\u591a\u5c11CPU\u80fd\u529b\u3002   </p>"},{"location":"postgres/pipelinedb01/#pipelinedbnum_queues","title":"pipelinedb.num_queues","text":"<p>\u5f53\u6570\u636e\u4eceSTREAM\u53d6\u51fa\uff08worker\u548ccombiner\u6279\u91cf\u6d88\u8d39\u3001\u8ba1\u7b97stream\u5185\u7684\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u6301\u4e45\u5316\u5230\u78c1\u76d8\uff0c\u7136\u540e\u4ecestream\u4e2d\u6e05\u6389\u5bf9\u5e94\u7684\u6d41\u6570\u636e\u3002\u6574\u4e2a\u8fc7\u7a0b\u9700\u8981queue process\uff0c\u786e\u4fdd\u505a\u8fd9\u4e00\u7cfb\u5217\u52a8\u4f5c\u7684\u65f6\u5019\uff0c\u4e0d\u5f71\u54cd\u7528\u6237\u6301\u7eed\u5c06\u6570\u636e\u5199\u5165stream\u3002\uff09   \u8bbe\u7f6e\u53d6\u51b3\u4e8enum_workers\uff0cnum_combiners\u3002   </p>"},{"location":"postgres/pipelinedb01/#pipelinedbnum_reapers","title":"pipelinedb.num_reapers","text":"<p>reaper\u8fdb\u7a0b\uff0c\u7528\u4e8e\u6e05\u9664\u8bbe\u7f6e\u4e86TTL\u7684continue view\u7684\u8fc7\u671f\u6570\u636e\u3002  \u7c7b\u4f3c\u4e8e\u540e\u53f0\u5b9a\u65f6\u4efb\u52a1\u8fdb\u7a0b\u3002\u4e0d\u9700\u8981\u592a\u591a\uff0c\u8bbe\u7f6e\u53d6\u51b3\u4e8e\u6709\u591a\u5c11\u8bbe\u7f6e\u4e86TTL\u7684continue view\u3002</p>"},{"location":"postgres/pipelinedb01/#pipelinedbttl_expiration_batch_size","title":"pipelinedb.ttl_expiration_batch_size","text":"<p>\u6e05\u9664\u8bbe\u7f6e\u4e86TTL\u7684continue view\u7684\u8fc7\u671f\u6570\u636e\u3002 \u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u6700\u591a\u6e05\u7406\u591a\u5c11\u6761\u6570\u636e\uff0c\u4e3b\u8981\u9632\u6b62\u957f\u4e8b\u52a1\u3002</p>"},{"location":"postgres/pipelinedb01/#pipelinedbttl_expiration_threshold","title":"pipelinedb.ttl_expiration_threshold","text":"<p>\u5f53\u8d85\u51fa\u8bbe\u7f6e\u9608\u503c\u591a\u5c11\u540e\uff0c\u5f00\u59cb\u6e05\u7406\u8fc7\u671f\u6570\u636e\u3002 \u4f8b\u5982\u8bbe\u7f6eTTL\u4e3a2\u5929\uff0c\u8bbe\u7f6ettl_expiration_threshold\u4e3a5%\u3002 \u90a3\u4e48\u5f53\u6570\u636e\u8fc7\u671f\u8fbe\u5230 (2 + 5%*2) \u5929\u540e\uff0c\u624d\u5f00\u59cb\u89e6\u53d1\u6e05\u7406\u3002  \u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3aTTL continue view\u7684\u81a8\u80c0\u7387\u3002  </p>"},{"location":"postgres/pipelinedb01/#pipelinedbbatch_size","title":"pipelinedb.batch_size","text":"<p>\u5f53\u67e5\u8be2continuous view\u65f6\uff0c\u4f1a\u89e6\u53d1PIPELINEDB\u5bf9continuous view\u7684\u7ed3\u679c\u8fdb\u884c\u6301\u4e45\u5316\u3002   batch_size\u8bbe\u7f6e\uff0c\u8868\u793a\u6267\u884ccontinuous view\u67e5\u8be2\u524d\uff0c\u6700\u591a\u5141\u8bb8\u591a\u5c11\u4e2aevents\u5806\u79ef(\u4f8b\u5982insert stream\u7684\u6761\u6570)\u3002   \u8bbe\u7f6e\u8d8a\u5927\uff0c\u53ef\u80fd\u589e\u52a0\u67e5\u8be2continuous view\u7684\u54cd\u5e94\u5ef6\u8fdf\uff0c\u6216\u8005\u5f53\u6570\u636e\u5e93CRASH\u65f6\u4e22\u6389\u66f4\u591a\u6570\u636e\u3002   </p>"},{"location":"postgres/pipelinedb01/#pipelinedbcombiner_work_mem","title":"pipelinedb.combiner_work_mem","text":"<p>\u6bcf\u4e2acombiner\u7684\u5de5\u4f5c\u5185\u5b58\u5927\u5c0f\u3002combiner process\u5728\u5408\u5e76WORKER\u8ba1\u7b97\u7ed3\u679c\u65f6\u7528\u4e8e\u6392\u5e8f\uff0cHASH TABLE\u7b49\u3002  \u5982\u679ccombiner\u4f7f\u7528\u5185\u5b58\u8d85\u51fa\u8fd9\u4e2a\u8bbe\u7f6e\uff0c\u5219\u4f7f\u7528\u78c1\u76d8\u3002  </p>"},{"location":"postgres/pipelinedb01/#pipelinedbanonymous_update_checks","title":"pipelinedb.anonymous_update_checks","text":"<p>Toggles whether PipelineDB should anonymous check if a new version is available. Default: true.</p>"},{"location":"postgres/pipelinedb01/#pipelinedbmatrels_writable","title":"pipelinedb.matrels_writable","text":"<p>\u662f\u5426\u5141\u8bb8continue view\u88ab\u76f4\u63a5\u4fee\u6539\u3002\uff08\u76f4\u63a5\u901a\u8fc7SQL\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u4ec5\u88abcombiner\u8fdb\u7a0b\u4fee\u6539\uff09 Toggles whether changes can be directly made to materialization tables. Default: false.</p>"},{"location":"postgres/pipelinedb01/#pipelinedbipc_hwm","title":"pipelinedb.ipc_hwm","text":"<p>Sets the high watermark for IPC messages between worker and combiner processes. Default: 10.</p>"},{"location":"postgres/pipelinedb01/#pipelinedbmax_wait","title":"pipelinedb.max_wait","text":"<p>\u4e0epipelinedb.batch_size\u542b\u4e49\u7c7b\u4f3c\uff0c\u53ea\u662f\u65f6\u95f4\u5ea6\u91cf\u3002  \u6267\u884ccontinuous view\u67e5\u8be2\u524d\uff0c\u6700\u591a\u5141\u8bb8\u7b49\u591a\u957f\u65f6\u95f4\u3002  </p>"},{"location":"postgres/pipelinedb01/#pipelinedbfillfactor","title":"pipelinedb.fillfactor","text":"<p>continue view\u7684fillfactor\uff0c\u7531\u4e8e\u6d41\u8ba1\u7b97\u7684\u7ed3\u679ccontinue view\u9700\u8981\u7ecf\u5e38\u88abcombiner\u66f4\u65b0\uff0c\u6240\u4ee5\u591a\u6570\u4e3a\u66f4\u65b0\u64cd\u4f5c\uff0c\u90a3\u4e48\u8bbe\u7f6e\u5408\u7406\u7684fillfactor\u53ef\u4ee5\u4f7f\u5f97\u66f4\u5bb9\u6613HOT\uff08\u907f\u514d\u7d22\u5f15\u81a8\u80c0\uff09\u3002  Default: 50.</p>"},{"location":"postgres/pipelinedb01/#pipelinedbsliding_window_step_factor","title":"pipelinedb.sliding_window_step_factor","text":"<p>\u6ed1\u7a97continue view\u7684\u5c0f\u7a97\u9897\u7c92\u5ea6\u3002 \u4f8b\u5982\u5b9a\u4e49\u6ed1\u7a97\u4e3a1\u5c0f\u65f6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u89c6\u56fe\u5c31\u662f\u6700\u8fd1\u4e00\u5c0f\u65f6\u7684\u7edf\u8ba1\uff0c\u4e3a\u4e86\u5f97\u5230\u8fd9\u4e2a\u7edf\u8ba1\u503c\uff0c\u5fc5\u987b\u5b9e\u65f6\u8001\u5316\u4e00\u5c0f\u65f6\u524d\u7684\u6570\u636e\uff0c\u4fdd\u6301\u7edf\u8ba1\u662f\u6700\u8fd1\u4e00\u5c0f\u65f6\u7684\u3002\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f  \u5b9e\u9645\u4e0apipelinedb\u5185\u90e8\u901a\u8fc7\u5b9a\u4e49\u6bd4\u6ed1\u7a97\u66f4\u5c0f\u7c92\u5ea6\u7a97\u53e3\u7684\u5b9e\u65f6\u7edf\u8ba1\uff0c\u628a\u7a97\u53e3\u5207\u6210\u66f4\u5c0f\u7684\u7a97\u53e3\uff0c\u67e5\u8be2\u65f6\u5bf9\u5c0f\u7c92\u5ea6\u7a97\u53e3\u8fdb\u884c\u6c47\u805a\u4ea7\u751f\u5927\u7a97\u53e3\u7684\u6570\u636e\u3002  \u4f8b\u5982\u5b9a\u4e49\u7684\u7a97\u53e3\u4e3a1\u5c0f\u65f6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u5206\u949f\u7684\u7c92\u5ea6\u8fdb\u884c\u7edf\u8ba1\uff0c\u67e5\u8be2\u65f6\uff0c\u6c47\u805a\u6700\u8fd1\u768460\u4e2a\u7a97\u53e3\u7684\u6570\u636e\uff0c\u5f97\u5230\u5c0f\u65f6\u7684\u7a97\u53e3\u6570\u636e\u3002  \u9897\u7c92\u5ea6\u4e3a5\uff0c\u8868\u793a5%\u7684\u9897\u7c92\u3002\u4f8b\u5982\u5b9a\u4e49\u7a97\u53e3\u4e3a1\u5c0f\u65f6\uff0c\u90a3\u4e48\u9897\u7c92\u5c31\u662f5%*60min = 3min\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a3\u5206\u949f\u7edf\u8ba1\u4e00\u4e2a\u503c\uff0c\u6700\u540e\u67e5\u8be2\u65f6\u6c47\u805a\u4e3a1\u5c0f\u65f6\u7684\u7a97\u53e3\u503c   </p>"},{"location":"postgres/pipelinedb02/","title":"Pipelinedb \u7b80\u4ecb","text":""},{"location":"postgres/pipelinedb02/#_1","title":"\u9879\u76ee\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4","text":"<p>\u9002\u914d\u652f\u6301\u7248\u672c</p> <pre><code>PostgreSQL 10: 10.1, 10.2, 10.3, 10.4, 10.5\nPostgreSQL 11: 11.0\n</code></pre>"},{"location":"postgres/pipelinedb02/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"postgres/pipelinedb02/#stream","title":"\u6d41(Stream)","text":"<p>\u6d41\u662f\u57fa\u7840\uff0cContinuous Views\u548ctransform\u5219\u662f\u57fa\u4e8e\u6d41\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u7684\u624b\u6bb5\u3002 \u5bf9\u4e8e\u540c\u4e00\u4efd\u6570\u636e\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u6d41\uff0c\u5199\u5165\u4e00\u4efd\u5373\u53ef\u3002 \u5982\u679c\u5bf9\u540c\u4e00\u4efd\u6570\u636e\u6709\u591a\u4e2a\u7ef4\u5ea6\u7684\u7edf\u8ba1\uff0c\u53ef\u4ee5\u5199\u5728\u4e00\u6761SQL\u5b8c\u6210\u7684\uff08\u5982\u540c\u4e00\u7ef4\u5ea6\u7684\u8fd0\u7b97\u6216\u8005\u53ef\u4ee5\u652f\u6301\u7a97\u53e3\u7684\u591a\u7ef4\u5ea6\u8fd0\u7b97\uff09\uff0c\u53ea\u9700\u5b9a\u4e49\u4e00\u4e2aContinuous Views\u6216transform\u3002\u5982\u679c\u4e0d\u80fd\u5728\u540c\u4e00\u6761SQL\u4e2d\u5b8c\u6210\u8ba1\u7b97\uff0c\u5219\u5b9a\u4e49\u591a\u4e2aContinuous Views\u6216transform\u5373\u53ef\u3002 \u5982\u679c\u6709\u591a\u4efd\u6570\u636e\u6765\u6e90\uff08\u4f8b\u5982\u8bbe\u8ba1\u65f6\u5c31\u5df2\u7ecf\u533a\u5206\u4e86\u4e0d\u540c\u7684\u8868\uff09\u65f6\uff0c\u5b9a\u4e49\u4e0d\u540c\u7684\u6d41\u5373\u53ef\uff1b</p>"},{"location":"postgres/pipelinedb02/#_3","title":"\u6d41\u89c6\u56fe","text":"<p>\u6d41\u89c6\u56fe\uff0c\u5176\u5b9e\u5c31\u662f\u5b9a\u4e49\u7edf\u8ba1\u5206\u6790\u7684QUERY\uff0c \u4f8b\u5982select id, count(*), avg(x), ... from stream_1 group by ...; \u5c31\u5c5e\u4e8e\u4e00\u4e2a\u6d41\u89c6\u56fe\u3002 \u5b9a\u4e49\u597d\u4e4b\u540e\uff0c\u6570\u636e\u63d2\u5165\u6d41(stream_1)\uff0c\u8fd9\u4e2a\u6d41\u89c6\u56fe\u5c31\u4f1a\u4e0d\u65ad\u589e\u91cf\u7684\u8fdb\u884c\u7edf\u8ba1\uff0c\u4f60\u53ea\u8981\u67e5\u8be2\u8fd9\u4e2a\u6d41\u89c6\u56fe\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u5b9e\u65f6\u7684\u7edf\u8ba1\u7ed3\u679c\u3002 \u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u662f\u5b9e\u65f6\u7edf\u8ba1\u7684\u7ed3\u679c\uff08\u5b9e\u9645\u4e0a\u662f\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u589e\u91cf\u5408\u5e76\u7684\uff0c\u589e\u91cf\u7684\u65b9\u5f0f\u6301\u4e45\u5316\uff09\u3002</p>"},{"location":"postgres/pipelinedb02/#transforms","title":"Transforms","text":"<p>\u4e0e\u6d41\u89c6\u56fe\u4e0d\u540c\u7684\u662f\uff0ctransform\u662f\u7528\u6765\u89e6\u53d1\u4e8b\u4ef6\u7684\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u4e0d\u4fdd\u7559\u6570\u636e\uff0c\u4f46\u662f\u53ef\u4ee5\u8bbe\u5b9a\u6761\u4ef6\uff0c\u5f53\u8bb0\u5f55\u6ee1\u8db3\u6761\u4ef6\u65f6\uff0c\u5c31\u89e6\u53d1\u4e8b\u4ef6\u3002 \u4f8b\u5982\u76d1\u89c6\u4f20\u611f\u5668\u7684\u503c\uff0c\u5f53\u503c\u7684\u8303\u56f4\u8d85\u51fa\u65f6\uff0c\u89e6\u53d1\u62a5\u8b66\uff08\u5982\u901a\u8fc7REST\u63a5\u53e3\u53d1\u7ed9\u6307\u5b9a\u7684server\uff09\uff0c\u6216\u8005\u5c06\u62a5\u8b66\u8bb0\u5f55\u4e0b\u6765\uff08\u901a\u8fc7\u89e6\u53d1\u5668\u51fd\u6570\uff09\u3002</p>"},{"location":"postgres/pipelinedb02/#_4","title":"\u652f\u6301\u7279\u6027","text":"<p>pipelinedb\u7ee7\u627f\u4e86PostgreSQL\u5f88\u597d\u7684\u6269\u5c55\u6027\uff0c\u4f8b\u5982\u652f\u6301\u4e86\u6982\u7387\u7edf\u8ba1\u76f8\u5173\u7684\u529f\u80fd\uff0c\u4f8b\u5982HLL\u7b49\u3002\u7528\u8d77\u6765\u4e5f\u975e\u5e38\u7684\u723d\uff0c\u4f8b\u5982\u7edf\u8ba1\u7f51\u7ad9\u7684UV\uff0c\u6216\u8005\u7ea2\u7eff\u706f\u901a\u8fc7\u7684\u6c7d\u8f66\u7f16\u53f7\u552f\u4e00\u503c\u8f66\u6d41\uff0c\u901a\u8fc7\u624b\u673a\u4fe1\u53f7\u7edf\u8ba1\u57fa\u7ad9\u8f90\u5c04\u65b9\u5706\u591a\u5c11\u516c\u91cc\u7684\u6309\u65f6UV\u7b49\u3002 Bloom Filter   Count-Min Sketch   Filtered-Space Saving Top-K   HyperLogLog   T-Digest    </p>"},{"location":"postgres/pipelinedb02/#sliding-windows","title":"\u6ed1\u7a97(Sliding Windows)","text":"<p>\u56e0\u4e3a\u5f88\u591a\u573a\u666f\u7684\u6570\u636e\u6709\u65f6\u6548\uff0c\u6216\u8005\u6709\u65f6\u95f4\u7a97\u53e3\u7684\u6982\u5ff5\uff0c\u6240\u4ee5pipelinedb\u63d0\u4f9b\u4e86\u7a97\u53e3\u5206\u7247\u7684\u63a5\u53e3\uff0c\u5141\u8bb8\u7528\u6237\u5bf9\u6570\u636e\u7684\u65f6\u6548\u8fdb\u884c\u5b9a\u4e49\u3002 \u4f8b\u5982\u4ec5\u4ec5\u7edf\u8ba1\u6700\u8fd1\u4e00\u5206\u949f\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u7edf\u8ba1\u6570\u636e\u3002 \u6bd4\u5982\u70ed\u529b\u56fe\uff0c\u5c55\u793a\u6700\u8fd1\u4e00\u5206\u949f\u7684\u70ed\u5ea6\uff0c\u5bf9\u4e8e\u65e7\u7684\u6570\u636e\u4e0d\u5173\u5fc3\uff0c\u5c31\u53ef\u4ee5\u9002\u5e94SW\u8fdb\u884c\u5b9a\u4e49\uff0c\u4ece\u800c\u4fdd\u7559\u7684\u6570\u636e\u5c11\uff0c\u5bf9\u673a\u5668\u7684\u8981\u6c42\u4f4e\uff0c\u6548\u7387\u8fd8\u9ad8\u3002</p>"},{"location":"postgres/pipelinedb02/#base-on-centos7postgres10","title":"\u5b89\u88c5 base on centos7&amp;postgres10","text":"<pre><code>add repository\ncurl -s http://download.pipelinedb.com/yum.sh | sudo bash\n\npipeline package\nsudo yum install pipelinedb-postgresql-10\n\n\u4fee\u6539\u6570\u636e\u5e93\u914d\u7f6e\n# At the bottom of &lt;data directory&gt;/postgresql.conf\nshared_preload_libraries = 'pipelinedb'\nmax_worker_processes = 128\n\n\u91cd\u542f\u6570\u636e\u5e93\nsystemctl restart postgresql-10\n\n\u521b\u5efa\u6269\u5c55 pipelinedb\nCREATE EXTENSION pipelinedb\n\n\u67e5\u770b\n\\dx\n                                               \u5df2\u5b89\u88c5\u6269\u5c55\u5217\u8868\n        \u540d\u79f0        | \u7248\u672c  |  \u67b6\u6784\u6a21\u5f0f  |                               \u63cf\u8ff0                                \n--------------------+-------+------------+-------------------------------------------------------------------\n pipelinedb         | 1.0.0 | public     | PipelineDB\n</code></pre>"},{"location":"postgres/pipelinedb02/#_5","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50","text":"<pre><code>\u521b\u5efa\u4e00\u4e2a\u6d41\n\nCREATE  FOREIGN TABLE  s1 (id int, val int) SERVER pipelinedb;  // \u7406\u89e3\u4e3a\u5b66\u751fId\uff0c\u6210\u7ee9\n\n\u6d41\u89c6\u56fe\u7edf\u8ba1count, avg, min, max, sum\u51e0\u4e2a\u5e38\u89c1\u7ef4\u5ea6\nCREATE VIEW v1 WITH (action=materialize) AS  SELECT id,count(*),avg(val),min(val),max(val),sum(val)\nFROM s1 GROUP BY id;\n\n\u63d2\u5165\u6570\u636e\ninsert into s1 values (0,100);\ninsert into s1 values (1,90);\ninsert into s1 values (2,93);\ninsert into s1 values (0,99);\ninsert into s1 values (1,96);\ninsert into s1 values (2,83);\n\n\u67e5\u770b\u7ed3\u679c\n\npipelinedb=# select * from v1;\n id | count |         avg         | min | max | sum\n----+-------+---------------------+-----+-----+-----\n  1 |     2 | 93.0000000000000000 |  90 |  96 | 186\n  0 |     2 | 99.5000000000000000 |  99 | 100 | 199\n  2 |     2 | 88.0000000000000000 |  83 |  93 | 176\n(3 \u884c\u8bb0\u5f55)\n\npipelinedb=# select * from v1_mrel;\n id | count |   avg   | min | max | sum | $pk\n----+-------+---------+-----+-----+-----+-----\n  1 |     2 | {2,186} |  90 |  96 | 186 |   4\n  0 |     2 | {2,199} |  99 | 100 | 199 |   6\n  2 |     2 | {2,176} |  83 |  93 | 176 |   5\n(3 \u884c\u8bb0\u5f55)\n\n\u8868\u7ed3\u6784\u6982\u89c8\n\npipelinedb=# \\d\n public   | s1                 | \u6240\u5f15\u7528\u7684\u5916\u8868 | postgres\n public   | v1                 | \u89c6\u56fe         | postgres\n public   | v1_def             | \u89c6\u56fe         | postgres\n public   | v1_mrel            | \u6570\u636e\u8868       | postgres\n public   | v1_osrel           | \u6240\u5f15\u7528\u7684\u5916\u8868 | postgres\n public   | v1_seq             | \u5e8f\u5217\u6570       | postgres\n\npipelinedb=# \\d+ s1\n                                               \u5f15\u7528\u7684\u5916\u90e8\u8868 \"public.s1\"\n       \u680f\u4f4d        |           \u7c7b\u578b           | Collation | Nullable | Default | FDW options | \u5b58\u50a8  | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0\n-------------------+--------------------------+-----------+----------+---------+-------------+-------+----------+------\n id                | integer                  |           |          |         |             | plain |          |\n val               | integer                  |           |          |         |             | plain |          |\n arrival_timestamp | timestamp with time zone |           |          |         |             | plain |          |\nServer: pipelinedb\n\npipelinedb=# \\d+ v1\n                        \u89c6\u56fe \"public.v1\"\n \u680f\u4f4d  |  \u7c7b\u578b   | Collation | Nullable | Default | \u5b58\u50a8  | \u63cf\u8ff0\n-------+---------+-----------+----------+---------+-------+------\n id    | integer |           |          |         | plain |\n count | bigint  |           |          |         | plain |\n avg   | numeric |           |          |         | main  |\n min   | integer |           |          |         | plain |\n max   | integer |           |          |         | plain |\n sum   | bigint  |           |          |         | plain |\n\u89c6\u56fe\u5b9a\u4e49:\n SELECT v1_mrel.id,\n    v1_mrel.count,\n    int8_avg(v1_mrel.avg) AS avg,\n    v1_mrel.min,\n    v1_mrel.max,\n    v1_mrel.sum\n   FROM ONLY v1_mrel;\n\npipelinedb=# \\d+ v1_def\n                      \u89c6\u56fe \"public.v1_def\"\n \u680f\u4f4d  |  \u7c7b\u578b   | Collation | Nullable | Default | \u5b58\u50a8  | \u63cf\u8ff0\n-------+---------+-----------+----------+---------+-------+------\n id    | integer |           |          |         | plain |\n count | bigint  |           |          |         | plain |\n avg   | numeric |           |          |         | main  |\n min   | integer |           |          |         | plain |\n max   | integer |           |          |         | plain |\n sum   | bigint  |           |          |         | plain |\n\u89c6\u56fe\u5b9a\u4e49:\n SELECT s1.id,\n    count(*) AS count,\n    avg(s1.val) AS avg,\n    min(s1.val) AS min,\n    max(s1.val) AS max,\n    sum(s1.val) AS sum\n   FROM s1\n  GROUP BY s1.id;\n\u9009\u9879: action=materialize, cv=v1, stream=public.s1, matrel=v1_mrel, overlay=v1, osrel=v1_osrel, seqrel=v1_seq, pkindex=v1_mrel_pkey, lookupindex=v1_mrel_expr_idx\n\npipelinedb=# \\d+ v1_mrel\n                            \u6570\u636e\u8868 \"public.v1_mrel\"\n \u680f\u4f4d  |   \u7c7b\u578b   | Collation | Nullable | Default |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0\n-------+----------+-----------+----------+---------+----------+----------+------\n id    | integer  |           |          |         | plain    |          |\n count | bigint   |           |          |         | plain    |          |\n avg   | bigint[] |           |          |         | extended |          |\n min   | integer  |           |          |         | plain    |          |\n max   | integer  |           |          |         | plain    |          |\n sum   | bigint   |           |          |         | plain    |          |\n $pk   | bigint   |           | not null |         | plain    |          |\n\u7d22\u5f15\uff1a\n    \"v1_mrel_pkey\" PRIMARY KEY, btree (\"$pk\")\n    \"v1_mrel_expr_idx\" btree (pipelinedb.hash_group(id))\n\u9009\u9879: fillfactor=50\n\npipelinedb=# \\d+ v1_osrel\n                                              \u5f15\u7528\u7684\u5916\u90e8\u8868 \"public.v1_osrel\"\n       \u680f\u4f4d        |           \u7c7b\u578b           | Collation | Nullable | Default | FDW options |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0\n-------------------+--------------------------+-----------+----------+---------+-------------+----------+----------+------\n old               | v1                       |           |          |         |             | extended |          |\n new               | v1                       |           |          |         |             | extended |          |\n delta             | v1_mrel                  |           |          |         |             | extended |          |\n arrival_timestamp | timestamp with time zone |           |          |         |             | plain    |          |\nServer: pipelinedb\n\npipelinedb=# \\d+ v1_seq\n                            \u5e8f\u5217\u6570 \"public.v1_seq\"\n  \u7c7b\u578b  | Start | Minimum |       Maximum       | Increment | Cycles? | Cache\n--------+-------+---------+---------------------+-----------+---------+-------\n bigint |     1 |       1 | 9223372036854775807 |         1 | no      |     1\n\u5c5e\u4e8e: public.v1_mrel.\"$pk\"\n\n</code></pre>"},{"location":"postgres/pitr/","title":"\u65f6\u95f4\u70b9\u6062\u590d","text":""},{"location":"postgres/pitr/#pitr","title":"PITR","text":"<p>Point-in-time recovery</p> <p>https://blog.csdn.net/a964921988/article/details/84957241</p> <p>https://github.com/digoal/blog/blob/master/201608/20160823_03.md</p> <p>https://github.com/digoal/blog/blob/master/201608/20160823_04.md</p>"},{"location":"postgres/pitr/#_1","title":"\u4f9d\u8d56\u6761\u4ef6","text":"<ul> <li>\u5386\u53f2\u5b8c\u6574\u5907\u4efd</li> <li>\u4e0d\u95f4\u65adwal\u65e5\u5fd7</li> </ul> <p>\u4ee5\u4e0a\u90fd\u53ef\u6709wal-g \u5907\u4efd\u7cfb\u7edf\u63d0\u4f9b\u652f\u6301</p>"},{"location":"postgres/pitr/#_2","title":"\u6062\u590d\u5230\u6307\u5b9a\u70b9","text":"<ul> <li>\u6307\u5b9a\u6807\u7b7e</li> <li>\u5177\u4f53\u65f6\u95f4\u70b9</li> <li>\u5177\u4f53\u4e8b\u52a1 </li> </ul>"},{"location":"postgres/pitr/#_3","title":"\u6307\u5b9a\u6807\u7b7e","text":"<pre><code>recovery.conf\nrecovery_target_action= 'pause'  # promote ,shutdown\n</code></pre> <pre><code>--- \u6253lable \nselect pg_create_restore_point('my_daily_process_ended');\n\n--- \u6062\u590d\u5230\u6307\u5b9a\u7684lable\nrecovery.conf\nrecovery_target_name = 'my_daily_process_ended'\n</code></pre>"},{"location":"postgres/pitr/#_4","title":"\u5177\u4f53\u65f6\u95f4","text":"<pre><code>restore_command = 'cp /data/arch/%f %p'            # e.g. 'cp /mnt/server/archivedir/%f %p'\nrecovery_target_time = '2020-12-23 09:37:17.010268'\nrecovery_target_inclusive = false\nrecovery_target_timeline = 'latest'\n</code></pre>"},{"location":"postgres/pitr/#_5","title":"\u5177\u4f53\u4e8b\u52a1","text":"<pre><code>restore_command = 'cp /data/arch/%f %p'            # e.g. 'cp /mnt/server/archivedir/%f %p'\nrecovery_target_xid = '26897309' \nrecovery_target_inclusive = false    \nrecovery_target_timeline = 'latest\n</code></pre>"},{"location":"postgres/pitr/#wal","title":"wal\u5185\u5bb9\u89e3\u6790\u5177\u4f53\u4f4d\u7f6e\uff0c\u65f6\u95f4\u3001\u4e8b\u52a1","text":"<pre><code>select pg_current_wal_lsn();\n pg_current_wal_lsn \n--------------------\n 59/15000090\n(1 \u884c\u8bb0\u5f55)\n\n</code></pre> <pre><code>-- \u5f53\u524dwal\u4f4d\u7f6e\nselect pg_walfile_name(pg_current_wal_lsn());\n     pg_walfile_name      \n--------------------------\n 000000020000005900000015\n(1 \u884c\u8bb0\u5f55)\n\n-- 00000002 TimeLine\n-- 00000059 \u903b\u8f91\u4f4d\u7f6e\n-- 00000015 \u504f\u79fb\n</code></pre> <pre><code>-- \u89e3\u6790wal\u5185\u5bb9\n/usr/pgsql-10/bin/pg_waldump ./000000020000005900000013\nrmgr: Heap        len (rec/tot):     54/    54, tx:   26897309, lsn: 59/13000028, prev 59/120007D8, desc: DELETE off 1 KEYS_UPDATED , blkref #0: rel 1663/389916/1276307 blk 0\nrmgr: Heap        len (rec/tot):     54/    54, tx:   26897309, lsn: 59/13000060, prev 59/13000028, desc: DELETE off 2 KEYS_UPDATED , blkref #0: rel 1663/389916/1276307 blk 0\nrmgr: Heap        len (rec/tot):     54/    54, tx:   26897309, lsn: 59/13000098, prev 59/13000060, desc: DELETE off 3 KEYS_UPDATED , blkref #0: rel 1663/389916/1276307 blk 0\nrmgr: Heap        len (rec/tot):     54/    54, tx:   26897309, lsn: 59/130000D0, prev 59/13000098, desc: DELETE off 5 KEYS_UPDATED , blkref #0: rel 1663/389916/1276307 blk 0\nrmgr: Transaction len (rec/tot):     46/    46, tx:   26897309, lsn: 59/13000108, prev 59/130000D0, desc: COMMIT 2020-12-23 09:37:17.010268 CST\n\n-- \u4e8b\u52a1 tx\uff1a 26897309\n-- \u65f6\u95f4 2020-12-23 09:37:17.010268 CST\n</code></pre> <pre><code>-- \u6839\u636e rel 1663/389916/1276307  \u67e5\u770b\u5177\u4f53\u662f\u54ea\u4e2a\u8868\nselect datname from pg_database where oid = 389916;\n datname \n---------\n test1\n(1 \u884c\u8bb0\u5f55)\n\nselect relname from pg_class where oid=1276307;\n relname \n---------\n t_1\n(1 \u884c\u8bb0\u5f55)\n</code></pre>"},{"location":"postgres/postgres12/","title":"postgres 12","text":""},{"location":"postgres/postgres12/#_1","title":"\u5b89\u88c5&amp;\u542f\u52a8","text":"<pre><code>#\u4e0b\u8f7d\u6e90\nyum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm\n#\u5b89\u88c5\u670d\u52a1\nyum install postgresql12 postgresql12-server postgresql12-contrib\n#\u521d\u59cb\u5316\n/usr/pgsql-12/bin/postgresql-12-setup initdb\n#\u542f\u52a8\u670d\u52a1\nsystemctl enable postgresql-12\nsystemctl start postgresql-12\n</code></pre>"},{"location":"postgres/postgres12/#_2","title":"\u6d41\u590d\u5236","text":"<pre><code>#\u4ece\u673a \u5efa\u7acb\u4ece\u5e93\npg_basebackup -h 10.1.30.13 -U postgres -F p -P -R -D /var/lib/pgsql/12/data/ --checkpoint=fast -l postgresback\n#\u4ece\u5e93\u5347\u7ea7\u4e3a\u4e3b\u5e93\nsudo su postgres -c  \"/usr/pgsql-12/bin/pg_ctl promote -D /var/lib/pgsql/12/data/\"\n</code></pre> <ul> <li>recovery.conf \u914d\u7f6e\u6587\u4ef6\u4e0d\u518d\u652f\u6301\uff0c\u6b64\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u5408\u5e76\u5230 postgresql.conf(postgresql.auto.conf) Recovery Target, \u82e5 recovery.conf \u5b58\u5728\uff0c\u6570\u636e\u5e93\u65e0\u6cd5\u542f\u52a8</li> <li>\u65b0\u589e recovery.signal \u6807\u8bc6\u6587\u4ef6\uff0c\u8868\u793a\u6570\u636e\u5e93\u5904\u4e8e recovery \u6a21\u5f0f</li> <li>\u65b0\u589e\u52a0 standby.signal \u6807\u8bc6\u6587\u4ef6\uff0c\u8868\u793a\u6570\u636e\u5e93\u5904\u4e8e standby \u6a21\u5f0f</li> <li>trigger_file \u53c2\u6570\u66f4\u540d\u4e3a promote_trigger_file</li> <li>standby_mode \u53c2\u6570\u4e0d\u518d\u652f\u6301</li> </ul> <p>\u5728postgres 12 \u7248\u672c\u4e2d\u65b0\u589e\u4e00\u4e2a\u6fc0\u6d3b\u4ece\u5e93\u4e3a\u4e3b\u5e93\u7684\u65b9\u5f0f\u3002pg_promote \u51fd\u6570\uff0c\u76f8\u6bd4\u539f\u6709\u7684\u4e24\u79cd\u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u5728\u4e8e\u4e0d\u9700\u8981\u767b\u9646\u5230\u5b9e\u4f53\u673a\u4e0a\uff0c\u53ef\u8fdc\u7a0b\u901a\u8fc7sql\u8fdb\u884c\u64cd\u4f5c\u3002 pg_promote() \u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570:</p> <ul> <li>wait: \u8868\u793a\u662f\u5426\u7b49\u5f85\u5907\u5e93\u7684 promotion \u5b8c\u6210\u6216\u8005 wait_seconds \u79d2\u4e4b\u540e\u8fd4\u56de\u6210\u529f\uff0c\u9ed8\u8ba4\u503c\u4e3a true\u3002</li> <li>wait_seconds: \u7b49\u5f85\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\uff0c\u9ed8\u8ba4 60</li> </ul> <p>\u6d41\u590d\u5236\u4e3b\u5907\u5207\u6362\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b:</p> <p>\u6b65\u9aa41 \u5173\u95ed\u4e3b\u5e93  </p> <p>\u6b65\u9aa42 \u6fc0\u6d3b\u5907\u5e93: \u4e09\u79cd\u65b9\u5f0f\u4efb\u9009\u4e00\u79cd: 1) pg_ctl promote \u547d\u4ee4\u65b9\u5f0f; 2) \u521b\u5efa\u89e6\u53d1\u5668\u6587\u4ef6\u65b9\u5f0f; 3) pg_promote()\u51fd\u6570\u65b9\u5f0f\u3002</p> <p>\u6b65\u9aa43 \u8001\u4e3b\u5e93\u89d2\u8272\u8f6c\u6362\u6210\u5907\u5e93: \u5728\u8001\u4e3b\u5e93\u4e3b\u673a pghost1 \u7684 $PGDATA \u76ee\u5f55\u4e0b\u521b\u5efa standby.signal \u6807\u8bc6\u6587\u4ef6,postgresql.auto.conf \u7c7b\u4f3c\u4e8e\u4ee5\u524d\u7248\u672c\u7684recovery.conf\u3002</p> <p>\u6b65\u9aa44 \u542f\u52a8\u8001\u4e3b\u5e93\u5e76\u9a8c\u8bc1</p> <p>\u5177\u4f53\u64cd\u4f5c</p>"},{"location":"postgres/postgres12/#_3","title":"\u5206\u533a\u8868","text":"<p>\u652f\u6301\u7c7b\u578b </p> <ul> <li>Range  </li> <li>List  </li> <li>Hash  </li> </ul> <p>\u521b\u5efa\u8868</p> <pre><code>CREATE TABLE measurement (\n    city_id         int not null,\n    logdate         date not null,\n    peaktemp        int,\n    unitsales       int\n) PARTITION BY RANGE (logdate);\n</code></pre> <p>\u521b\u5efa\u5206\u533a</p> <pre><code>CREATE TABLE measurement_y2006m02 PARTITION OF measurement\n    FOR VALUES FROM ('2006-02-01') TO ('2006-03-01');\n\nCREATE TABLE measurement_y2006m03 PARTITION OF measurement\n    FOR VALUES FROM ('2006-03-01') TO ('2006-04-01');\n\n--- \u9ed8\u8ba4\u5206\u533a\nCREATE TABLE measurement_y2006m02 PARTITION OF measurement\n    default;\n</code></pre> <p>\u63d2\u5165\u6570\u636e</p> <pre><code>select  cast(random()*10 as integer), date'2006-02-01'  + (id||' hour')::interval,cast(random()*30 as integer),cast(random()*10000 as integer) \n    from generate_series(1,2000) t(id);\n</code></pre> <p>\u521b\u5efa\u7d22\u5f15,\u4e0e\u4ee5\u524d\u7248\u672c\u7684\u533a\u522b\u53ef\u4ee5\u5728\u7236\u8868\u4e0a\u7edf\u4e00\u521b\u5efa\u7d22\u5f15\u3002\u4e5f\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5b50\u8868\u4e0a\u6839\u636e\u9700\u6c42\u5206\u522b\u521b\u5efa\u7d22\u5f15\u3002\u66f4\u7075\u6d3b\u3002 \u5efa\u8bae\u5728\u5206\u533a\u5217\u4e0a\u521b\u5efa\u7d22\u5f15\uff0c\u5229\u7528\u5206\u533a\u88c1\u526a\uff08enable_partition_pruning\uff09\u63d0\u9ad8\u6548\u7387\u3002</p> <pre><code>CREATE INDEX ON measurement (logdate);\n</code></pre> <p>\u7ef4\u62a4\u5206\u533a\u8868</p> <pre><code>--- \u5220\u9664\u5206\u533a\u8868,\u4f1a\u9501\u4e3b\u8868\nDROP TABLE measurement_y2006m02;\n--- \u901a\u5e38\u65b9\u5f0f\uff0c\u5c06\u5206\u533a\u8868\u8131\u79bb\u51fa\u4e3b\u8868\uff0c\u7136\u540e\u5728\u5bf9\u5206\u533a\u8868\u8fdb\u884c\u64cd\u4f5c\nALTER TABLE measurement DETACH PARTITION measurement_y2006m02;\n\n--- \u5c06\u5df2\u6709\u8868\u4f5c\u4e3a\u5206\u533a\u8868\u52a0\u5165\u5230\u4e3b\u8868\u4e2d, \u76f4\u63a5\u52a0\u5165\u4f1a\u9501\u4e3b\u8868\nALTER TABLE measurement ATTACH PARTITION measurement_y2008m02\n    FOR VALUES FROM ('2008-02-01') TO ('2008-03-01' );\n\n--- \u901a\u5e38\u505a\u6cd5\uff0c\u5bf9\u9700\u8981\u5bf9\u52a0\u5165\u7684\u5206\u533a\u8868\u52a0\u68c0\u67e5\u7ea6\u675f\uff0c\u7136\u540e\u5728\u5c06\u5206\u533a\u8868\u52a0\u5165\u5230\u4e3b\u8868\u4e2d\n\nALTER TABLE measurement_y2008m02 ADD CONSTRAINT y2008m02\n   CHECK ( logdate &gt;= DATE '2008-02-01' AND logdate &lt; DATE '2008-03-01' );\n\nALTER TABLE measurement ATTACH PARTITION measurement_y2008m02\n    FOR VALUES FROM ('2008-02-01') TO ('2008-03-01' );\n</code></pre> <p>\u5206\u533a\u8868\u53ef\u4ee5\u5b58\u5728\u4e8e\u4e0d\u540c\u7684\u8868\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u6837\u7684\u7279\u6027\u65b9\u4fbf\u6570\u636e\u7684\u51b7\u70ed\u533a\u5206\u5904\u7406\u3002</p> <p>\u5bf9\u7d22\u5f15\u7684\u7ba1\u7406</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\u5982\u679c\u5bf9\u4e00\u5f20\u8868\u52a0\u5165\u7d22\u5f15\u4f1a\u5835\u585e\u8be5\u8868\u7684dml\u64cd\u4f5c\uff0c\u7279\u522b\u662f\u5bf9\u4e00\u5f20\u5927\u8868\u7684\u64cd\u4f5c\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5728\u4e3b\u8868\u4e2d\u52a0\u5165\u4e00\u4e2a\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u4e5f\u4f1a\u52a0\u5165\u5230\u7d22\u5f15\u7684\u5b50\u8868\u4e2d\uff0c\u65e0\u8bba\u662f\u73b0\u6709\u7684\u5b50\u8868\u8fd8\u662f\u5c06\u6765\u65b0\u52a0\u5165\u7684\u5b57\u8868\u3002\u8fd9\u6837\u6781\u5927\u7684\u65b9\u4fbf\u4e86\u5bf9\u5206\u533a\u8868\u7684\u7ef4\u62a4\u3002\u76ee\u524d\u5728\u5206\u533a\u8868\u4e0a\u5efa\u7acb\u7d22\u5f15\u65f6\u4e0d\u652f\u6301CONCURRENTLY</p> <p>\u4f46\u662f\u8003\u8651\u7684\u5bf9\u5728\u7ebf\u4e1a\u52a1\u7684\u5f71\u54cd\uff0c\u5728\u5206\u533a\u8868\u4e2d\u5efa\u8bae\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 </p> <p>\u9996\u5148\u5728\u4e3b\u8868\u4e0a\u4f7f\u7528 create index on only \u8bed\u53e5\u521b\u5efa\u7d22\u5f15\uff0c\u7136\u540e\u5206\u522b\u5728\u5b50\u8868\u4e0a\u521b\u5efa\u7d22\u5f15\u3002\u5f53\u6240\u6709\u5b50\u8868\u4e0a\u7684\u7d22\u5f15\u90fd\u5efa\u7acb\u5b8c\u6bd5\u540e\u4e3b\u8868\u4e0a\u7684\u7d22\u5f15\u88ab\u6fc0\u6d3b\u3002</p> <p>\u8be5\u65b9\u5f0f\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\uff08\u7ea6\u675f\uff09\u7b49</p> <pre><code>CREATE INDEX measurement_usls_idx ON ONLY measurement (unitsales);\n\nCREATE INDEX measurement_usls_200602_idx\n    ON measurement_y2006m02 (unitsales);\nALTER INDEX measurement_usls_idx\n    ATTACH PARTITION measurement_usls_200602_idx;\n\n</code></pre>"},{"location":"postgres/postgres12/#_4","title":"\u5176\u4ed6","text":"<p>https://yq.aliyun.com/articles/720247?spm=a2c4e.11153940.0.0.48cf2f79tPuOrL</p> <p>https://github.com/digoal/blog/blob/0ef02248fe7419c55a98a425feefd2421ad25537/201906/20190624_02.md</p>"},{"location":"postgres/prepare/","title":"\u4f7f\u7528prepare\u9884\u7f16\u8bd1SQL","text":"","tags":[]},{"location":"postgres/prepare/#_1","title":"\u4f7f\u7528\u9884\u7f16\u8bd1\u4f18\u52bf\u4ecb\u7ecd","text":"<p>\u5728\u6267\u884c\u4e00\u4e2aSQL\u65f6\uff0c\u9996\u5148\u751f\u6210\u6267\u884c\u8ba1\u5212\uff08\u8fdb\u884c\u8bed\u4e49\u5206\u6790\u3001\u8bcd\u6cd5\u89e3\u6790\u3001\u903b\u8f91\u4f18\u5316\u3001\u7269\u7406\u4f18\u5316\uff09\u3001\u6267\u884c\u3001\u7ed3\u679c\u4f20\u8f93\u7b49\u64cd\u4f5c\u3002 \u5982\u679c\u4e00\u4e2aSQL\u5728\u5e94\u7528\u4e2d\u53cd\u590d\u4f7f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6b64SQL\u53c2\u6570\u5316\uff0c\u53ea\u505a\u4e00\u6b21prepare\uff0c\u540e\u9762\u6267\u884c\u65f6\u5c31\u4e0d\u9700\u8981\u8fdb\u884c\u524d\u9762\u6267\u884c\u8ba1\u5212\u7684\u751f\u6210\u64cd\u4f5c\uff0c\u76f4\u63a5\u4f7f\u7528prepare\u597d\u7684\u6267\u884c\u8ba1\u5212\u3002</p> <p>\u5bf9\u4e8e\u6bd4\u8f83\u957f\u7684SQL\u3001\u53c2\u6570\u8f83\u56fa\u5b9a\u7684SQL\uff0c\u53ef\u4ee5\u4f7f\u7528prepare\uff0c</p> <p>\u7279\u70b9\uff1a 1) Prepared\u8bed\u53e5\u53ea\u5728session\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u5b58\u5728\uff0c\u4e00\u65e6session\u7ed3\u675f\uff0cPrepared\u8bed\u53e5\u4e5f\u4e0d\u5b58\u5728\u4e86\u3002\u5982\u679c\u4e0b\u6b21\u518d\u4f7f\u7528\u9700\u91cd\u65b0\u521b\u5efa\u3002 2) Prepared\u8bed\u53e5\u4e0d\u80fd\u5728\u591a\u4e2a\u5e76\u53d1\u7684client\u4e2d\u5171\u6709\u3002 3) prepared\u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7DEALLOCATE\u547d\u4ee4\u6e05\u9664\u3002 4) \u5f53\u524dsession\u7684prepared\u8bed\u53e5\uff1apg_prepared_statements</p> <pre><code>-- \u521b\u5efa\nPREPARE test_pre(id, name) AS select id,name t where id = $1;\n\n-- \u4f7f\u7528\nexplain analyze EXECUTE test_pre(1);\n Index Scan using t_pkey on t  (cost=0.29..2.51 rows=1 width=16) (actual time=0.019..0.021 rows=1 loops=1)\n   Index Cond: (id = $1)\n Planning Time: 0.015 ms\n Execution Time: 0.049 ms\n</code></pre> <p>\u770b\u89c1 $1  \u8bf4\u660e\u7b26\u5408\u9884\u671f</p>","tags":[]},{"location":"postgres/readonly/","title":"\u521b\u5efa\u53ea\u8bfb\u7528\u6237","text":""},{"location":"postgres/readonly/#readonly","title":"\u521b\u5efa\u53ea\u8bfb\u7528\u6237readonly","text":"<pre><code>1.\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u540d\u4e3areadonly\u5bc6\u7801\u4e3aropass\u7684\u7528\u6237\nCREATE USER readonly WITH ENCRYPTED PASSWORD 'ropass';\n\n2.\u7528\u6237\u53ea\u8bfb\u4e8b\u52a1\nalter user readonly set default_transaction_read_only=on;\n\n3.\u628a\u6240\u6709\u5e93\u7684\u8bed\u8a00\u7684USAGE\u6743\u9650\u7ed9\u5230readonly\nGRANT USAGE ON SCHEMA public to readonly;      \n\n4.\u6388\u4e88select\u6743\u9650(\u8fd9\u53e5\u8981\u8fdb\u5165\u5177\u4f53\u6570\u636e\u5e93\u64cd\u4f5c\u5728\u54ea\u4e2adb\u73af\u5883\u6267\u884c\u5c31\u6388\u4e88\u90a3\u4e2adb\u7684\u6743)\n grant select on all tables in schema public to readonly;\n\n</code></pre>"},{"location":"postgres/readonly/#_1","title":"\u67e5\u770b\u8868\u5bf9\u8c61\u5bf9\u5e94\u7684\u7528\u6237\u6743\u9650","text":"<pre><code>SELECT n.nspname as \"Schema\",\n  c.relname as \"Name\",\n  CASE c.relkind WHEN 'r' THEN 'table' WHEN 'v' THEN 'view' WHEN 'm' THEN 'materialized view' WHEN 'S' THEN 'sequence' WHEN 'f' THEN 'foreign table' END as \"Type\",\n  pg_catalog.array_to_string(c.relacl, E'\\n') AS \"Access privileges\",\n  pg_catalog.array_to_string(ARRAY(\n    SELECT attname || E':\\n  ' || pg_catalog.array_to_string(attacl, E'\\n  ')\n    FROM pg_catalog.pg_attribute a\n    WHERE attrelid = c.oid AND NOT attisdropped AND attacl IS NOT NULL\n  ), E'\\n') AS \"Column privileges\",\n  pg_catalog.array_to_string(ARRAY(\n    SELECT polname\n    || CASE WHEN polcmd != '*' THEN\n           E' (' || polcmd || E'):'\n       ELSE E':' \n       END\n    || CASE WHEN polqual IS NOT NULL THEN\n           E'\\n  (u): ' || pg_catalog.pg_get_expr(polqual, polrelid)\n       ELSE E''\n       END\n    || CASE WHEN polwithcheck IS NOT NULL THEN\n           E'\\n  (c): ' || pg_catalog.pg_get_expr(polwithcheck, polrelid)\n       ELSE E''\n       END    || CASE WHEN polroles &lt;&gt; '{0}' THEN\n           E'\\n  to: ' || pg_catalog.array_to_string(\n               ARRAY(\n                   SELECT rolname\n                   FROM pg_catalog.pg_roles\n                   WHERE oid = ANY (polroles)\n                   ORDER BY 1\n               ), E', ')\n       ELSE E''\n       END\n    FROM pg_catalog.pg_policy pol\n    WHERE polrelid = c.oid), E'\\n')\n    AS \"Policies\"\nFROM pg_catalog.pg_class c\n     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\nWHERE c.relkind IN ('r', 'v', 'm', 'S', 'f')\n  AND n.nspname !~ '^pg_' AND pg_catalog.pg_table_is_visible(c.oid)\nORDER BY 1, 2;\n</code></pre>"},{"location":"postgres/reback/","title":"\u8bef\u64cd\u4f5c\u95ea\u56de","text":""},{"location":"postgres/reback/#_1","title":"\u539f\u7406","text":"<p>\u5229\u7528mvcc\u539f\u7406\uff0c\u6570\u636e\u5728\u5220\u9664\u6216\u66f4\u65b0\u65f6\u53ea\u662f\u6807\u8bb0\u4e3a\u5220\u9664\u3002\u5f53\u6ca1\u6709\u53d1\u751f\u8fc7gc\u65f6\u5386\u53f2\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002\u53ea\u662f\u5bf9\u5f53\u524d\u4e8b\u52a1\u4e0d\u53ef\u89c1\u3002</p> <p>\u901a\u8fc7\u4fee\u6539\u5f53\u524d\u4e8b\u52a1\u53f7\u4e3a\u8bef\u64cd\u4f5c\u524d\u7684\u4e8b\u52a1\u53f7\u5c31\u53ef\u4ee5\u770b\u5230\u5386\u53f2\u6570\u636e\u3002</p> <p>\u4f8b\u5982 T1 \uff08\u6dfb\u52a0\u6570\u636e\uff09 T2 - T8\uff08\u5176\u4ed6\u64cd\u4f5c\uff09 T9\uff08\u5220\u9664\u4e86T1\u52a0\u5165\u7684\u6570\u636e\uff09T10... (\u5176\u4ed6\u64cd\u4f5c)\u3002 \u81ea\u9700\u8981\u5c06\u5f53\u524d\u4e8b\u52a1\u53f7\u4fee\u6539\u4e3aT1\u4e4b\u540eT9\u4e4b\u524d\u7684\u4efb\u4f55\u65f6\u523b\u90fd\u53ef\u4ee5\u770b\u5230T1 \u52a0\u5165\u7684\u6570\u636e\u3002</p> <p>\u524d\u63d0\uff1a\u8bef\u64cd\u4f5c\u8868\u5728\u8bef\u64cd\u4f5c\u540e\u6ca1\u6709\u53d1\u751f\u8fc7gc</p> <pre><code>select  last_vacuum , last_autovacuum  from pg_stat_all_tables where = ?;\n</code></pre> <p>\u4fee\u6539\u65b9\u6cd5\uff1a\u5229\u7528pg_resetwal\u5de5\u5177\u91cd\u7f6e\u5f53\u524d\u4e8b\u52a1\u53f7</p> <p>\u6ce8\u610f\uff1a \u5c3d\u5feb\u5c06\u627e\u5230\u7684\u6570\u636e\u5bfc\u51fa\uff0c\u968f\u7740\u5f53\u524d\u6570\u636e\u5e93\u4e8b\u52a1\u53f7\u589e\u52a0\uff0c\u6570\u636e\u5c06\u518d\u6b21\u4e0d\u53ef\u89c1\uff0cT10 \u4e5f\u4f1a\u540c\u6837\u4e0d\u53ef\u89c1\u3002</p>"},{"location":"postgres/reback/#_2","title":"\u793a\u4f8b","text":"<p>\u901a\u8fc7pg_xlogdump\u627e\u5230\u8bef\u5220\u7684\u4e8b\u52a1\u53f7\uff08xid\uff09\uff0c\u505c\u6b62\u6570\u636e\u5e93\uff0c\u7136\u540e\u91cd\u7f6exlog\uff0c\u542f\u52a8\u6570\u636e\u5e93\uff0c\u6570\u636e\u5c31\u662f\u91cd\u7f6e\u7684xid\u4f4d\u7f6e\u53ef\u89c1</p> <p>\u6a21\u62df\u4e8b\u6545\u73b0\u573a</p> <pre><code>-- \u521b\u5efa\u6d4b\u8bd5\u8868\npostgres=# create table reback_t (i int);\npostgres=# select txid_current();\n txid_current \n--------------\n     26913040\n(1 \u884c\u8bb0\u5f55)\n\n-- \u6a21\u62df\u4e1a\u52a1\u63d2\u5165\u6570\u636e \npostgres=# insert into reback_t values (1);\nINSERT 0 1\npostgres=# insert into reback_t values (2);\nINSERT 0 1\npostgres=# insert into reback_t values (3);\nINSERT 0 1\npostgres=# insert into reback_t values (4);\nINSERT 0 1\npostgres=# select txid_current();\n txid_current \n--------------\n     26913045\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# insert into reback_t values (5);\nINSERT 0 1\npostgres=# insert into reback_t values (6);\nINSERT 0 1\npostgres=# insert into reback_t values (7);\nINSERT 0 1\npostgres=# insert into reback_t values (8);\nINSERT 0 1\npostgres=# insert into reback_t values (9);\nINSERT 0 1\npostgres=# insert into reback_t values (10);\nINSERT 0 1\npostgres=# select txid_current();\n txid_current \n--------------\n     26913052\n(1 \u884c\u8bb0\u5f55)\n\n-- \u8bef\u5220\u9664\u6570\u636e,\u4e8b\u6545\u70b9 \npostgres=# delete from reback_t where i &lt; 4;\nDELETE 3\n-- \u5728\u7ebf\u4e1a\u52a1\u7ee7\u7eed\npostgres=# insert into reback_t values (11);\nINSERT 0 1\npostgres=# insert into reback_t values (12);\nINSERT 0 1\npostgres=# insert into reback_t values (13);\nINSERT 0 1\npostgres=# select * from reback_t ;\n i  \n----\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n(10 \u884c\u8bb0\u5f55)\n\npostgres=# \\q\n\n</code></pre> <pre><code>\u505c\u670d\u95ea\u9000\n[root@pg-d data]# systemctl stop  postgresql-10\n\n\u56de\u9000\u5230\u6307\u5b9a\u4e8b\u52a1\u53f7\n[root@pg-d data]# su postgres -c \"/usr/pgsql-10/bin/pg_resetwal -x 26913047 -D /var/lib/pgsql/10/data/\"\nWrite-ahead log reset\n\n\u5efa\u8bae\u4f7f\u7528 --single \u7ef4\u62a4\u6a21\u5f0f\u542f\u52a8\u6570\u636e\u5e93\n</code></pre> <pre><code>\u67e5\u770b\u56de\u9000\u6548\u679c, 1,2 \u53c8\u53ef\u89c1\npostgres=# select * from reback_t ;\n i \n---\n 1\n 2\n 3\n 4\n 5\n(5 \u884c\u8bb0\u5f55)\n\n\u4e8b\u52a1\u53f7 +1\npostgres=# select txid_current();\n txid_current \n--------------\n     26913047\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# select * from reback_t ;\n i \n---\n 1\n 2\n 3\n 4\n 5\n 6\n(6 \u884c\u8bb0\u5f55)\n-- \u5176\u4ed6\u64cd\u4f5c , \u4e8b\u52a1\u7ee7\u7eed\u5411\u524d\u3002\u3002\u3002\npostgres=# insert into reback_t values (21);\nINSERT 0 1\npostgres=# select * from reback_t ;\n i  \n----\n  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n 21\n(9 \u884c\u8bb0\u5f55)\n-- \u5f53\u4e8b\u52a1\u53f7\u589e\u957f\u5230\u4e8b\u6545\u70b926913053\u65f6\uff0c\u4e8b\u6545\u518d\u6b21\u91cd\u73b0\npostgres=# select * from reback_t ;\n i\n----\n  3\n  4\n  5\n  6\n  7\n  8\n 21\n(7 \u884c\u8bb0\u5f55)\n</code></pre> <pre><code>-- \u4e8b\u52a1\u771f\u76f8\npostgres=# select xmin,xmax,* from reback_t ;\n   xmin   | xmax | i  \n----------+------+----\n 26913044 |    0 |  4\n 26913046 |    0 |  5\n 26913047 |    0 |  6\n 26913048 |    0 |  7\n 26913049 |    0 |  8\n 26913050 |    0 |  9\n 26913051 |    0 | 10\n 26913054 |    0 | 11\n 26913055 |    0 | 12\n 26913049 |    0 | 21\n\n</code></pre> <p>\u601d\u8003 trunce \u540e\u662f\u5426\u80fd\u591f\u95ea\u56de</p> <pre><code>postgres=# select txid_current();\n txid_current \n--------------\n     26913056\n(1 \u884c\u8bb0\u5f55)\n\npostgres=# truncate reback_t ;\nTRUNCATE TABLE\npostgres=# \\q\n\n#systemctl stop  postgresql-10\n\n#su postgres -c \"/usr/pgsql-10/bin/pg_resetwal -x 26913050 -D /var/lib/pgsql/10/data/\"\nWrite-ahead log reset\n\n# systemctl start  postgresql-10\n# psql \npsql (12.5, \u670d\u52a1\u5668 10.13)\n\u8f93\u5165 \"help\" \u6765\u83b7\u53d6\u5e2e\u52a9\u4fe1\u606f.\n\npostgres=# select xmin,xmax,* from reback_t ;\n   xmin   |   xmax   | i  \n----------+----------+----\n 26913041 | 26913053 |  1\n 26913042 | 26913053 |  2\n 26913043 | 26913053 |  3\n 26913044 |        0 |  4\n 26913046 |        0 |  5\n 26913047 |        0 |  6\n 26913048 |        0 |  7\n 26913049 |        0 |  8\n 26913049 | 26913056 | 21\n(9 \u884c\u8bb0\u5f55)\n</code></pre>"},{"location":"postgres/reback/#_3","title":"\u8bef\u64cd\u4f5c\u95ea\u56de","text":"<p>\u63d2\u4ef6 pg_dirtyread</p> <p>\u5c01\u4faf\u975e\u6211\u610f\uff0c\u6211\u613f\u6d77\u6ce2\u5e73\u3002</p>"},{"location":"postgres/reback_supper_user/","title":"\u627e\u56desupper user \u6743\u9650","text":""},{"location":"postgres/reback_supper_user/#_1","title":"\u80cc\u666f","text":"<p>\u610f\u5916\u5220\u9664postgres supper user \u6743\u9650 </p>"},{"location":"postgres/reback_supper_user/#_2","title":"\u627e\u56de\u65b9\u6cd5","text":"<p>\u5173\u95ed\u6570\u636e\u5e93 \u7528\u5355\u7528\u6237\u6a21\u5f0f\u91cd\u65b0\u542f\u52a8</p> <pre><code>/usr/lib/postgresql/xxxx/bin/postgres --single -D $PGDATA\n\n</code></pre> <p>\u91cd\u65b0\u8bbe\u7f6esupper user \u6743\u9650</p> <pre><code>alter user postgres with superuser;\n</code></pre>"},{"location":"postgres/replication01/","title":"\u4e3b\u4ece\u6d41\u590d\u5236","text":"<p>\u5386\u53f2\u6f14\u53d8</p> <p>replication</p>"},{"location":"postgres/replication01/#_1","title":"\u4e3b\u5e93\u914d\u7f6e","text":"<pre><code>\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5206\u914d\u6d41\u590d\u5236\u6743\u9650\nvi pg_hba.conf\n\nhost replication all 10.2.0.0/0 trust\n</code></pre> <pre><code>vi postgresql.conf\n\nmax_wal_senders = 10\nwal_level = logical # minimal, replica, or logical\n\nhot_standby = on # \u6b63\u5e38\u5728\u4ece\u5e93\u914d\u7f6e\uff0c\u5982\u679c\u5728\u4e3b\u5e93\u914d\u7f6e\u5b8c\u6bd5\uff0c\u56e0\u4e3a\u4ece\u5e93\u590d\u5236\u4e3b\u5e93\u914d\u7f6e\u4e0d\u9700\u8981\u518d\u4fee\u6539\u4ece\u5e93\u914d\u7f6e\u3002\n\nwal_log_hints = on\n</code></pre>"},{"location":"postgres/replication01/#_2","title":"\u4ece\u5e93\u914d\u7f6e","text":""},{"location":"postgres/replication01/#_3","title":"\u6570\u636e\u5e93\u5b89\u88c5","text":""},{"location":"postgres/replication01/#_4","title":"\u4ece\u4e3b\u5e93\u590d\u5236\u6570\u636e","text":"<pre><code>pg_basebackup -h 10.2.0.14 -U postgres -F p -P -R -D /var/lib/pgsql/10/data/ --checkpoint=fast -l postgresback20181219\n</code></pre> <p>pg_basebackup\u652f\u6301\u4e24\u79cd\u5168\u91cf\u5907\u4efd\u7684\u65b9\u5f0f\uff0c</p> <ul> <li> <p>\u4ee5fetch\u7684\u65b9\u5f0f\uff0c\u5148\u5907\u4efd\u6570\u636e\u5728\u5907\u4efd\u65e5\u5fd7 </p> </li> <li> <p>\u4ee5stream\u7684\u65b9\u5f0f\uff0c\u5e76\u884c\u7684\u5907\u4efd\u6570\u636e\u548c\u65e5\u5fd7 </p> </li> </ul> <p>pg_basebackup\u5bf9\u4e8e\u5168\u91cf\u5907\u4efd\u7684\u6570\u636e\u548c\u65e5\u5fd7\uff0c\u63d0\u4f9b\u4e86\u4e32\u884c\u5907\u4efd\u548c\u5e76\u884c\u5907\u4efd\u7684\u65b9\u5f0f\u3002fetch\u6a21\u5f0f\u4e5f\u5c31\u662f\u4e32\u884c\u5907\u4efd\u9700\u8981\u4fdd\u8bc1\u5728\u5907\u4efd\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5907\u4efd\u5f00\u59cb\u65f6\u523b\u7684\u65e5\u5fd7\u9700\u8981\u4e00\u76f4\u4fdd\u5b58\u4e0b\u6765\uff0c \u4e5f\u5c31\u8bf4pg\u7684wal_keep_segments\u9700\u8981\u8db3\u591f\u5927\u53bb\u4fdd\u5b58\u65e5\u5fd7\u6587\u4ef6\uff0c\u5982\u679c\u5907\u4efd\u6570\u636e\u671f\u95f4\uff0c\u65e5\u5fd7\u5f00\u59cb\u65f6\u523b\u7684\u65e5\u5fd7\u5df2\u7ecf\u88ab\u79fb\u9664\uff0c\u90a3\u4e48\u5907\u4efd\u5c31\u4f1a\u5931\u8d25\u3002\u800cstream\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u5e76\u884c\u5907\u4efd\u8fc7\u7a0b\u4e2dwal_max_sender\u5fc5\u987b\u4fdd\u8bc1\u4e0d\u5c0f\u4e8e2\u3002 \u800cstream\u6a21\u5f0f\u4e0d\u652f\u6301\uff0c\u5c06\u6570\u636e\u548c\u65e5\u5fd7\u4ee5\u6d41\u7684\u65b9\u5f0f\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa</p> <p>\u9650\u901f\uff0c\u5728\u751f\u4ea7\u7cfb\u7edf\u4e2d\u9632\u6b62\u5bf9\u6b63\u5e38\u4e1a\u52a1\u7684\u5f71\u54cd</p> <pre><code>-r, --max-rate=RATE    maximum transfer rate to transfer data directory\n                         (in kB/s, or use suffix \"k\" or \"M\")\n</code></pre> <p>\u6ce8\u610f\u65b0\u62f7\u8d1d\u6570\u636e\u7684\u6743\u9650</p> <pre><code>chown postgres:postgres data/ -R\nchmod 0700 data \n</code></pre> <p>\u67e5\u770b\u6570\u636e</p> <pre><code>ll data\n\u603b\u7528\u91cf 88\n-rw-------. 1 postgres postgres   203 12\u6708 19 13:45 backup_label.old\ndrwx------. 7 postgres postgres    67 12\u6708 19 14:12 base\n-rw-------. 1 postgres postgres    44 12\u6708 19 14:28 current_logfiles\ndrwx------. 2 postgres postgres  4096 12\u6708 19 14:28 global\ndrwx------. 2 postgres postgres  4096 12\u6708 19 14:28 log\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_commit_ts\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_dynshmem\n-rw-------. 1 postgres postgres  4340 12\u6708 19 13:45 pg_hba.conf\n-rw-------. 1 postgres postgres  1636 12\u6708 19 13:45 pg_ident.conf\ndrwx------. 4 postgres postgres    68 12\u6708 19 15:08 pg_logical\ndrwx------. 4 postgres postgres    36 12\u6708 19 13:45 pg_multixact\ndrwx------. 2 postgres postgres    18 12\u6708 19 14:28 pg_notify\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_replslot\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_serial\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_snapshots\ndrwx------. 2 postgres postgres     6 12\u6708 19 14:28 pg_stat\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_stat_tmp\ndrwx------. 2 postgres postgres    18 12\u6708 19 13:45 pg_subtrans\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_tblspc\ndrwx------. 2 postgres postgres     6 12\u6708 19 13:45 pg_twophase\n-rw-------. 1 postgres postgres     3 12\u6708 19 13:45 PG_VERSION\ndrwx------. 3 postgres postgres 12288 12\u6708 19 15:09 pg_wal\ndrwx------. 2 postgres postgres    18 12\u6708 19 13:45 pg_xact\ndrwx------. 3 postgres postgres    17 12\u6708 19 13:45 pipeline\n-rw-------. 1 postgres postgres    88 12\u6708 19 13:45 postgresql.auto.conf\n-rw-------. 1 postgres postgres 22748 12\u6708 19 14:28 postgresql.conf\n-rw-------. 1 postgres postgres    58 12\u6708 19 14:28 postmaster.opts\n-rw-------. 1 postgres postgres    95 12\u6708 19 14:28 postmaster.pid\n-rw-r--r--. 1 postgres postgres   262 12\u6708 19 13:45 recovery.conf\n</code></pre> <p>\u67e5\u770b recovery.conf</p> <pre><code>cat recovery.conf\nstandby_mode = 'on'\nprimary_conninfo = 'user=postgres host=10.2.0.14 port=5432 sslmode=disable sslcompression=1'\n\n\n</code></pre>"},{"location":"postgres/replication01/#_5","title":"\u4ece\u5e93\u914d\u7f6e","text":"<p>\u542f\u52a8\u4ece\u5e93</p> <pre><code>systemctl start postgresql-10.service\nsystemctl enable postgresql-10.service\n</code></pre> <pre><code>#recovery.conf\n\nrecovery_target_timeline='latest'\nrecovery_min_apply_delay = 5min   #\u5ef6\u8fdf\u591a\u5c11\u5206\u949f\u5e94\u7528\ntrigger_file = '/home/postgres.trigger' #\u4ece\u5e93\u53d8\u4e3b\u5e93\u65f6\u5e94\u7528\n</code></pre>"},{"location":"postgres/replication01/#_6","title":"\u9a8c\u8bc1","text":"<pre><code>\u4e3b\u5e93\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\npsql -U postgres \npostgres=# create database testreplication;\n\n\u4ece\u5e93\u67e5\u770b\u7ed3\u679c\npsql -U postgres\npostgres=#\\l\n                                                  \u6570\u636e\u5e93\u5217\u8868\n       \u540d\u79f0        |     \u62e5\u6709\u8005     | \u5b57\u5143\u7f16\u7801 |  \u6821\u5bf9\u89c4\u5219   |    Ctype    |             \u5b58\u53d6\u6743\u9650              \n-------------------+----------------+----------+-------------+-------------+-----------------------------------\n postgres          | postgres       | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \n template0         | postgres       | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres                      +\n                   |                |          |             |             | postgres=CTc/postgres\n template1         | postgres       | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres                      +\n                   |                |          |             |             | postgres=CTc/postgres\n testreplication   | postgres       | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \n(5 \u884c\u8bb0\u5f55)\n</code></pre> <p>\u72b6\u6001\u67e5\u770b</p> <p>WAL Sender \u4fe1\u606f\u8bf4\u660e</p> <pre><code>\u4e3b\u5e93 \u67e5\u770b\u540c\u6b65\u72b6\u6001\npostgres=# select * from pg_stat_replication ;\n-[ RECORD 1 ]----+------------------------------\npid              | 21092\nusesysid         | 10\nusename          | postgres\napplication_name | walreceiver\nclient_addr      | 10.1.0.15\nclient_hostname  | \nclient_port      | 14703\nbackend_start    | 2018-12-19 14:28:15.220479+08\nbackend_xmin     | \nstate            | streaming\nsent_lsn         | 2/B1BDC000\nwrite_lsn        | 2/B1B3C000\nflush_lsn        | 2/B1B3C000\nreplay_lsn       | 2/B1B3A3B0\nwrite_lag        | 00:44:13.27416\nflush_lag        | 00:44:13.27416\nreplay_lag       | 00:44:13.274217\nsync_priority    | 0\nsync_state       | async\n\n\u4ece\u5e93 \u67e5\u770bwal receiver\u7684\u7edf\u8ba1\u4fe1\u606f\nselect * from pg_stat_wal_receiver ;\n-[ RECORD 1 ]---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\npid                   | 9329\nstatus                | streaming\nreceive_start_lsn     | 0/3000000\nreceive_start_tli     | 1\nreceived_lsn          | 2/DA5FC000\nreceived_tli          | 1\nlast_msg_send_time    | 2018-12-19 15:25:43.662966+08\nlast_msg_receipt_time | 2018-12-19 15:25:43.846309+08\nlatest_end_lsn        | A/D09F1758\nlatest_end_time       | 2018-12-19 15:25:40.694523+08\nslot_name             | node_a_slot\nconninfo              | user=postgres passfile=/root/.pgpass dbname=replication host=10.1.0.14 port=5432 fallback_application_name=walreceiver sslmode=prefer sslcompression=1 krbsrvname=postgres target_session_attrs=any\n\n-- \u6682\u505cWAL\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u8981\u505a\u4e00\u4e9b\u6392\u9519\u65f6  \nselect pg_wal_replay_pause();  \n-[ RECORD 1 ]-------+-  \npg_wal_replay_pause |   \n\n-- \u67e5\u770b\u72b6\u6001  \nselect pg_is_wal_replay_paused();  \n-[ RECORD 1 ]-----------+--  \npg_is_wal_replay_paused | t  \n\n-- \u6062\u590dwal \nselect pg_wal_replay_resume();  \n-[ RECORD 1 ]--------+-  \npg_wal_replay_resume |   \n\n-- \u67e5\u770b\u72b6\u6001\nselect pg_is_wal_replay_paused();  \n-[ RECORD 1 ]-----------+--  \npg_is_wal_replay_paused | f  \n\n</code></pre>"},{"location":"postgres/replication01/#wal","title":"wal \u65e5\u5fd7\u4fdd\u6301\u65f6\u6548","text":"<p>PostgreSQL 9.4 \u65b0\u589e\u7684\u4e00\u4e2a\u7279\u6027, replication slot,  -  \u53ef\u4ee5\u88ab\u6d41\u590d\u5236\u7684sender\u8282\u70b9\u7528\u4e8e\u81ea\u52a8\u8bc6\u522b\u5b83xlog\u4e2d\u7684\u6570\u636e\u5728\u4e0b\u9762\u7684standby\u4e2d\u662f\u5426\u8fd8\u9700\u8981(\u4f8b\u5982, standby\u65ad\u5f00\u8fde\u63a5\u540e, \u8fd8\u672a\u63a5\u6536\u5230\u7684XLOG), \u5982\u679c\u8fd8\u9700\u8981\u7684\u8bdd, \u90a3\u4e48\u8fd9\u4e9bXLOG\u5c06\u4e0d\u4f1a\u88ab\u5220\u9664. -  \u5bf9\u4e8etuples, \u5982\u679cstandby \u914d\u7f6e\u4e86hot_standby_feedback=on, \u90a3\u4e48\u53d1\u751f\u51b2\u7a81\u7684tuples\u5c06\u4e0d\u4f1a\u5728sender\u7aef\u88abvacuum\u56de\u6536. \u7528\u4e8e\u89c4\u907f\u51b2\u7a81.</p> <p>\u914d\u7f6e\u6bd4\u8f83\u7b80\u5355, \u9700\u8981\u5728sender\u7aef\u4f7f\u7528\u51fd\u6570\u521b\u5efaslot, \u5728receiver\u7aef\u914d\u7f6e\u5bf9\u5e94\u7684slot name\u5373\u53ef.</p> <p>\u4e3b\u5e93\uff1a</p> <pre><code>postgres=# SELECT * FROM pg_create_physical_replication_slot('node_a_slot');\n  slotname   | xlog_position\n-------------+---------------\n node_a_slot |\n\npostgres=# SELECT * FROM pg_replication_slots;\n  slot_name  | slot_type | datoid | database | active | xmin | restart_lsn\n-------------+-----------+--------+----------+--------+------+-------------\n node_a_slot | physical  |      0 |          | f      |    \n</code></pre> <pre><code>\u4ece\u5e93 \ncat recovery.conf \n\nprimary_slot_name = 'node_a_slot'\n</code></pre> <p>\u6d41\u590d\u5236\u534f\u8bae\u4e5f\u505a\u4e86\u76f8\u5e94\u7684\u6539\u8fdb : </p> <p>\u4f7f\u7528slot\u7684\u597d\u5904 :    </p> <ul> <li>\u5728\u6ca1\u6709replication slot\u8fd9\u4e2a\u7279\u6027\u4ee5\u524d, \u6709\u4e24\u79cd\u65b9\u6cd5\u6765\u4fdd\u6301standby\u9700\u8981\u7684xlog, wal keep\u6216\u8005\u5f52\u6863, \u56e0\u4e3a\u4e3b\u8282\u70b9\u4e0d\u77e5\u9053standby\u5230\u5e95\u9700\u8981\u54ea\u4e9bXLOG\u4fe1\u606f, \u914d\u7f6e\u4e00\u822c\u9700\u8981\u8f83\u5927\u7684\u4f59\u91cf. slot\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u6d6a\u8d39sender\u7aef\u5b58\u50a8wal\u7a7a\u95f4\u7684\u95ee\u9898, \u56e0\u4e3asender\u53ef\u4ee5\u505a\u5230\u4fdd\u7559\u66f4\u7cbe\u51c6\u7684wal\u4fe1\u606f.</li> <li>\u914d\u5408standby\u8282\u70b9\u7684feedback\u4f7f\u7528, \u53ef\u4ee5\u907f\u514dvacuum\u5e26\u6765\u7684\u51b2\u7a81.</li> </ul>"},{"location":"postgres/replication01/#vs","title":"\u540c\u6b65\u590d\u5236VS\u5f02\u6b65\u590d\u5236","text":"<p>PostgreSql\u7684\u6d41\u590d\u5236\u662f\u5f02\u6b65\u7684\uff0c\u7f3a\u70b9\u662fStandby\u4e0a\u7684\u6570\u636e\u843d\u540e\u4e8e\u4e3b\u5e93\u4e0a\u7684\u6570\u636e\uff0c\u5982\u679c\u4f7f\u7528Hot Standby\u505a\u8bfb\u5199\u5206\u79bb\uff0c\u5c31\u4f1a\u5b58\u5728\u6570\u636e\u4e00\u81f4\u6027\u7684\u95ee\u9898\u3002PostgreSql9.1\u7248\u672c\u540e\u63d0\u4f9b\u4e86\u540c\u6b65\u6d41\u590d\u5236\u7684\u67b6\u6784\u3002\u540c\u6b65\u590d\u5236\u7684\u8981\u6c42\u5728\u6570\u636e\u5199\u5165Standby\u6570\u636e\u5e93\u540e\uff0c\u4e8b\u52a1commit\u624d\u8fd4\u56de\u3002 \u5b58\u5728\u95ee\u9898\uff1a\u5f53Standby\u6570\u636e\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u4f1a\u5bfc\u81f4\u4e3b\u5e93\u88abhang\u4f4f\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u542f\u52a8\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684Standby\u6570\u636e\u5e93\u3002</p> <p>\u914d\u7f6e\u65b9\u6cd5\uff0c\u5728\u4e3b\u4ece\u914d\u7f6e\u57fa\u7840\u4e0a</p> <p>\u4e3b\u5e93synchronous_standby_names \u53c2\u6570\u6307\u5b9a\u591a\u4e2aStandby\u7684\u540d\u79f0\uff0c\u5404\u4e2a\u540d\u79f0\u901a\u8fc7\u9017\u53f7\u5206\u5272\uff0c\u800cStandby\u8fde\u63a5\u5230\u4e3b\u5e93\u7531application_name \u53c2\u6570\u6307\u5b9a</p> <p>\u4e3b\u5e93</p> <pre><code>vi postgresql.conf\nsynchronous_standby_names = 'standby01,standby02'\n</code></pre> <p>\u4ece\u5e93</p> <pre><code>cat recovery.conf \nstandby_mode = 'on'\nprimary_conninfo = 'application_name=standby02 user=postgres host=10.2.0.14 port=5432 sslmode=disable sslcompression=1'\n</code></pre> <p>\u4e3b\u5e93\u67e5\u770b\u7ed3\u679c</p> <pre><code>psql -U postgres\npostgres=# select sync_priority,sync_state from pg_stat_replication ;\n</code></pre> <p>sync_priority,sync_priority \u72b6\u6001\u8bf4\u660e</p>"},{"location":"postgres/replication01/#_7","title":"\u4ece\u53d8\u4e3b","text":""},{"location":"postgres/replication01/#_8","title":"\u7b80\u5355\u6709\u6548\u7684\u65b9\u5f0f","text":"<p>\u5728\u4ece\u5e93\u4e2d\u914d\u7f6e cat recovery.conf</p> <pre><code>trigger_file = '/home/postgres.trigger'\n</code></pre> <p>\u91cd\u542f\u4ece\u5e93</p> <p>\u5c06\u4ece\u5e93\u53d8\u6210\u4e3b\u5e93</p> <pre><code>touch /home/postgres.trigger\n</code></pre>"},{"location":"postgres/replication01/#pg_ctl-promote","title":"pg_ctl promote","text":"<p>pg_ctl promte -D $PGDATA server promoting</p>"},{"location":"postgres/replication01/#pg_rewind","title":"pg_rewind","text":""},{"location":"postgres/replication01/#_9","title":"\u4ece\u5e93\u6709\u67e5\u8be2\u4e1a\u52a1\u65f6\u6ce8\u610f\u4e8b\u9879","text":"<pre><code> 1. \u5982\u679c\u5907\u5e93\u6709LONG query\uff0c\u540c\u65f6\u9700\u8981\u5b9e\u65f6\u6027\uff0c\u53ef\u4ee5\u8bbe\u7f6ehot_standby_feedback=on\uff0c\u540c\u65f6\u5efa\u8bae\u5c06\u4e3b\u5e93\u7684autovacuum_naptime\uff0cautovacuum_vacuum_scale_factor\u8bbe\u7f6e\u4e3a\u8f83\u5927\u503c\uff08\u4f8b\u598260\u79d2\uff0c0.1\uff09\uff0c\n    \u4e3b\u5e93\u7684\u5783\u573e\u56de\u6536\u5524\u9192\u95f4\u9694\u4f1a\u957f\u4e00\u70b9\uff0c\u5982\u679c\u7a81\u7136\u4ea7\u751f\u5f88\u591a\u5783\u573e\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u4e00\u5b9a\u7684\u81a8\u80c0\u3002\n 2. \u5982\u679c\u5907\u5e93\u6709LONG QUERY\uff0c\u5e76\u4e14\u6ca1\u6709\u5f88\u9ad8\u7684\u5b9e\u65f6\u6027\u8981\u6c42\uff0c\u5efa\u8bae\u8bbe\u7f6e\u8bbe\u7f6ehot_standby_feedback=off, \u540c\u65f6\u8bbe\u7f6e\u8f83\u5927\u7684max_standby_archive_delay\uff0c max_standby_streaming_delay\u3002\n</code></pre>"},{"location":"postgres/replication01/#_10","title":"\u6269\u5c55\u9605\u8bfb","text":"<ul> <li> <p>PostgreSQL 10\u52a0\u5165\u4e86quorum based\u7684\u540c\u6b65\u590d\u5236\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u914d\u7f6e\u82e5\u5e72standby\u8282\u70b9\uff0c\u5e76\u914d\u7f6e\u9700\u8981\u5c06WAL\u53d1\u9001\u591a\u5c11\u4efd\u624d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u4e8b\u52a1\u7ed3\u675f\u7684\u6d88\u606f\u3002</p> </li> <li> <p>\u6027\u80fd </p> </li> </ul>"},{"location":"postgres/replication01/#_11","title":"\u51b2\u7a81\u53ca\u89e3\u51b3","text":""},{"location":"postgres/replication01/#_12","title":"\u51b2\u7a81","text":"<pre><code>FATAL:  terminating connection due to conflict with recovery  \nDETAIL:  User query might have needed to see row versions that must be removed.  \nHINT:  In a moment you should be able to reconnect to the database and repeat your command. \n</code></pre>"},{"location":"postgres/replication01/#_13","title":"\u539f\u56e0","text":"<p>\u62a5\u9519\u662f\u5907\u5e93\u4e8b\u52a1\u6216\u8005\u5355SQL\u67e5\u8be2\u65f6\u95f4\u957f\uff0c\u548c\u5907\u5e93\u7684\u65e5\u5fd7apply\u53d1\u751f\u51b2\u7a81\uff0c\u5982\u679c\u4e1a\u52a1\u4e0a\u6709\u957f\u4e8b\u52a1\u3001\u957f\u67e5\u8be2\uff0c\u4e3b\u5e93\u4e0a\u53c8\u518d\u4fee\u6539\u540c\u4e00\u884c\u6570\u636e\uff0c\u5f88\u5bb9\u6613\u9020\u6210\u5907\u5e93\u7684wal\u65e5\u5fd7\u65e0\u6cd5apply\u3002</p> <p>wal\u65e0\u6cd5apply\u6570\u636e\u5e93\u6709\u4e24\u4e2a\u7b56\u7565\uff1a</p> <ul> <li> <p>\u5907\u5e93\u544a\u8bc9\u4e3b\u5e93\u9700\u8981\u54ea\u4e9b\u7248\u672c\uff0c\u8ba9\u4e3b\u5e93\u4fdd\u7559\uff0c\u5907\u5e93\u67e5\u8be2\u59cb\u7ec8\u80fd\u62ff\u5230\u9700\u8981\u7684\u7248\u672c\uff0c\u4e0d\u963b\u585eapply\uff0c\u56e0\u4e3a\u5907\u5e93\u603b\u80fd\u62ff\u5230\u9700\u8981\u7684\u7248\u672c</p> </li> <li> <p>\u5907\u5e93apply\u8fdb\u5165\u7b49\u5f85\uff0c\u76f4\u5230\u5907\u5e93\u51b2\u7a81\u67e5\u8be2\u7ed3\u675f\uff0c\u7ee7\u7eedapply\u3002\u53ef\u4ee5\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u3002max_standby_streaming_delay</p> </li> </ul>"},{"location":"postgres/replication01/#_14","title":"\u5bf9\u5e94\u89e3\u51b3\u65b9\u6cd5","text":"<p>\u65b9\u6cd5\u4e00</p> <pre><code>vacuum_defer_cleanup_age &gt; 0\n\u6216\nhot_standby_feedback=on\n\n</code></pre> <p>\u4ee3\u4ef71\uff0c\u4e3b\u5e93\u81a8\u80c0\uff0c\u56e0\u4e3a\u5783\u573e\u7248\u672c\u8981\u5ef6\u8fdf\u82e5\u5e72\u4e2a\u4e8b\u52a1\u540e\u624d\u80fd\u88ab\u56de\u6536\u3002</p> <p>\u4ee3\u4ef72\uff0c\u91cd\u590d\u626b\u63cf\u5783\u573e\u7248\u672c\uff0c\u91cd\u590d\u8017\u8d39\u5783\u573e\u56de\u6536\u8fdb\u7a0b\u7684CPU\u8d44\u6e90\u3002\uff08n_dead_tup\u4f1a\u4e00\u76f4\u5904\u4e8e\u8d85\u8fc7\u5783\u573e\u56de\u6536\u9608\u503c\u7684\u72b6\u6001\uff0c\u4ece\u800cautovacuum \u4e0d\u65ad\u5524\u9192worker\u8fdb\u884c\u56de\u6536\u52a8\u4f5c\uff09\u3002</p> <p>\u4ee3\u4ef73\uff0c\u5982\u679c\u671f\u95f4\u53d1\u751f\u5927\u91cf\u5783\u573e\uff0c\u5783\u573e\u7248\u672c\u53ef\u80fd\u4f1a\u5728\u4e8b\u52a1\u5230\u8fbe\u5e76\u89e3\u7981\u540e\uff0c\u7206\u70b8\u6027\u7684\u88ab\u56de\u6536\uff0c\u4ea7\u751f\u5927\u91cf\u7684WAL\u65e5\u5fd7\uff0c\u4ece\u800c\u9020\u6210WAL\u7684\u5199IO\u5c16\u523a\u3002</p> <p>\u65b9\u6cd5\u4e8c</p> <pre><code>max_standby_streaming_delay\n\nmax_standby_archive_delay\u548cmax_standby_streaming_delay\n</code></pre> <p>\u4ee3\u4ef7\uff0c\u5982\u679c\u5907\u5e93\u7684QUERY\u4e0eAPPLY\uff08\u6062\u590d\u8fdb\u7a0b\uff09\u51b2\u7a81\uff0c\u90a3\u4e48\u5907\u5e93\u7684apply\u4f1a\u51fa\u73b0\u5ef6\u8fdf\uff0c\u4e5f\u8bb8\u4ece\u5907\u5e93\u8bfb\u5230\u7684\u662fN\u79d2\u4ee5\u524d\u7684\u6570\u636e\u3002</p> <p>12 pg 12 \u53d8\u66f4</p> <ul> <li> <p>recovery.conf \u4e2d\u7684\u914d\u7f6e\u5185\u5bb9\u4f4d\u7f6e\u53d8\u66f4\u5230postgresql.auto.conf</p> </li> <li> <p>trigger_file -&gt; promte_trigger_file</p> </li> <li> <p>\u589e\u52a0 standby.signal recovery.signal</p> </li> </ul> <p>13 \u865a\u62df\u5907\u5e93</p> <pre><code>pg_receivewal\n</code></pre> <p>\u5907\u4efd\u589e\u91cfwal\u65e5\u5fd7\uff0c\u5e76\u53ef\u538b\u7f29\u5907\u4efd\u3002\u7ed3\u5408wal-g \u505a\u6570\u636e\u5907\u4efd</p>"},{"location":"postgres/replication01/#_15","title":"\u4e3b\u4ece\u5ef6\u8fdf\u67e5\u770b","text":"<p>\u4e3b\u5e93\u67e5\u770b/\u5b57\u8282\u5927\u5c0f</p> <pre><code>#\u6570\u636e\u5ef6\u8fdf\nselect pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(),replay_lsn)) as latency from pg_stat_replication ;\n\n#wal \u4e0d\u540c\u9636\u6bb5\u5ef6\u8fdf\nselect pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(),sent_lsn)) as sent_latency, pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(),write_lsn)) as write_latency ,pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(),flush_lsn)) as flush_latency,pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(),replay_lsn)) as replay_latency from pg_stat_replication ;\n\n</code></pre> <p>\u4ece\u5e93\u67e5\u770b/\u65f6\u95f4</p> <pre><code>select now() - pg_last_xact_replay_timestamp();\n</code></pre>"},{"location":"postgres/replication02/","title":"\u6d41\u590d\u5236\u540c\u6b65\u7ea7\u522b","text":""},{"location":"postgres/replication02/#_1","title":"\u6d41\u590d\u5236\u8fc7\u7a0b","text":"<pre><code>synchronous_commit = on  \uff09              # synchronization level;  on default \n                                        # off, local, remote_write, or on  \n</code></pre>"},{"location":"postgres/replication02/#_2","title":"\u540c\u6b65\u7ea7\u522b","text":"<ul> <li> <p>remote_apply\uff1a\u4e8b\u52a1commit\u6216rollback\u65f6\uff0c\u7b49\u5f85\u5176redo\u5728primary\u3001\u4ee5\u53ca\u540c\u6b65standby(s)\u5df2\u6301\u4e45\u5316\uff0c\u5e76\u4e14\u5176redo\u5728\u540c\u6b65 standby(s)\u5df2apply\u3002</p> </li> <li> <p>on\uff1a\u4e8b\u52a1commit\u6216rollback\u65f6\uff0c\u7b49\u5f85\u5176redo\u5728primary\u3001\u4ee5\u53ca\u540c\u6b65standby(s)\u5df2\u6301\u4e45\u5316\u3002</p> </li> <li> <p>remote_write\uff1a\u4e8b\u52a1commit\u6216rollback\u65f6\uff0c\u7b49\u5f85\u5176redo\u5728primary\u5df2\u6301\u4e45\u5316; \u5176redo\u5728\u540c\u6b65standby(s)\u5df2\u8c03\u7528write\u63a5\u53e3(\u5199\u5230 OS, \u4f46\u662f\u8fd8\u6ca1\u6709\u8c03\u7528\u6301\u4e45\u5316\u63a5\u53e3\u5982fsync)\u3002</p> </li> <li> <p>local\uff1a\u4e8b\u52a1commit\u6216rollback\u65f6\uff0c\u7b49\u5f85\u5176redo\u5728primary\u5df2\u6301\u4e45\u5316;</p> </li> <li> <p>off\uff1a\u4e8b\u52a1commit\u6216rollback\u65f6\uff0c\u7b49\u5f85\u5176redo\u5728primary\u5df2\u5199\u5165wal buffer\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u5176\u6301\u4e45\u5316;</p> </li> </ul> <p>\u5b89\u5168\u7b49\u7ea7\u4e0e\u6027\u80fd\u5f71\u54cd\u7efc\u5408\u8003\u91cf</p> <p>\u4ece\u4e0a\u5230\u4e0b\uff1a \u5b89\u5168\u7b49\u7ea7\u964d\u4f4e\u3002</p> <p>\u4ece\u4e0b\u5230\u4e0a\uff1a \u6027\u80fd\u5f71\u54cd\u589e\u52a0\u3002</p>"},{"location":"postgres/repmgr/","title":"\u57fa\u4e8eRepmgr\u5b9e\u73b0\u6570\u636e\u5e93\u9ad8\u53ef\u7528","text":"","tags":[]},{"location":"postgres/repmgr/#_1","title":"\u5b89\u88c5\u73af\u5883","text":"","tags":[]},{"location":"postgres/repmgr/#_2","title":"\u8f6f\u4ef6\u73af\u5883","text":"<ul> <li>postgres 10</li> <li>repmgr 5.3.2</li> <li>centos7</li> </ul>","tags":[]},{"location":"postgres/repmgr/#_3","title":"\u7f51\u7edc\u73af\u5883","text":"IP\u5730\u5740 \u8fd0\u884c\u8f6f\u4ef6 10.10.2.12/node1 repmgr,repmgrd,pg 10.10.2.13/node2 repmgr,repmgrd,pg 10.10.2.14/node3 repmgr,repmgrd,pg","tags":[]},{"location":"postgres/repmgr/#_4","title":"\u524d\u671f\u51c6\u5907","text":"<ul> <li>hosts \u6587\u4ef6\u914d\u7f6e</li> </ul> <p><code>vi /etc/hosts #    10.10.2.12 node1   10.10.2.13 node2   10.10.2.14 node3</code></p> <ul> <li>\u5b89\u88c5PG10</li> </ul> <pre><code> $ yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm\n  $ yum update -y \n  $ yum install -y postgresql10-server postgresql10  postgresql10-contrib\n  # \u53ea\u6709\u4e3b\u5e93\u9700\u8981\u521d\u59cb\u5316\n  $ sudo su postgres -c  \"/usr/pgsql-10/bin/initdb  --data-checksums -D /var/lib/pgsql/10/data\" \n</code></pre> <ul> <li>\u5b89\u88c5repmgr</li> </ul> <p><code>$ yum install -y repmgr10.x86_64</code></p> <ul> <li>\u63d0\u5347postgres \u7528\u6237\u5177\u6709\u90e8\u5206sudo \u6267\u884c\u6743\u9650</li> </ul> <p>repmgr \u9700\u8981\u975eroot\u7528\u6237\u7ba1\u7406</p> <p><code>vi /etc/sudoers.d/postgres # chmod 400 /etc/sudoers.d/postgres   Defaults:postgres !requiretty   postgres ALL = NOPASSWD: /usr/bin/systemctl stop postgresql-10, \\   /usr/bin/systemctl start postgresql-10, \\   /usr/bin/systemctl restart postgresql-10, \\   /usr/bin/systemctl reload postgresql-10</code></p> <ul> <li>ssh \u514d\u5bc6\u4e92\u901a</li> </ul> <p>\u914d\u7f6essh\u514d\u5bc6\u4e92\u901a\u975e\u5fc5\u987b\uff0c\u5728\u6267\u884cswitchover\u64cd\u4f5c\u65f6\u9700\u8981 </p> <p><code>$ su - postgres   $ ssh-keygen   $ cat .ssh/id_rsa.pub &gt;  .ssh/authorized_keys # \u672c\u673a\u514d\u5bc6\u767b\u5f55    # \u5c06 .ssh \u76ee\u5f55\u4e0bauthorized_keys\uff0cid_rsa\uff0cid_rsa.pub \u62f7\u8d1d\u5230\u5176\u4ed6\u8282\u70b9\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u5e76\u8d4b\u503c\u5bf9\u5e94\u6743\u9650   $ chmod 600 .ssh/authorized_keys   $ chmod 600 .ssh/id_rsa   $ chmod 644 .ssh/id_rsa.pub    # \u7528\u547d\u4ee4\u62f7\u8d1d\u5230\u5176\u4ed6\u8282\u70b9 # \u9996\u6b21\u8fde\u63a5\u9700\u8981\u8bbe\u7f6e\u5bc6\u7801   $ ssh-copy-id ${\u8fdc\u7aef\u670d\u52a1\u5668}    $ ssh $\u8fdc\u7aef\u670d\u52a1\u5668}</code></p>","tags":[]},{"location":"postgres/repmgr/#_5","title":"\u914d\u7f6e","text":"<ul> <li>PG \u914d\u7f6e</li> </ul> <p><code>vi postgres.conf   # \u5fc5\u987b\u9879   max_wal_senders = 10   max_replication_slots = 10 # \u590d\u5236\u69fd   wal_level = 'logical' # replica \u6216 logical \uff0c\u4fbf\u4e8e\u540e\u671f\u5e94\u7528\u903b\u8f91\u590d\u5236\u5efa\u8bae\u4f7f\u7528logical   hot_standby = on # \u4ece\u5e93\u5728recovery\u72b6\u6001\u4e0b\u53ef\u8bfb   wal_log_hints = on # pg_rewind \u4f9d\u8d56\u914d\u7f6e   # \u53ef\u9009\uff0c\u5efa\u8bae\u5f00\u542f\u9879\u76ee\u3002\u540e\u671f\u4fee\u6539\u53ef\u80fd\u9700\u8981\u91cd\u542f\u6570\u636e\u5e93   archive_mode = always # \u4ece\u5e93\u4e5f\u53ef\u505a\u5f52\u6863   archive_command = '/bin/true'   archive_timeout = 300 # \u5355\u4f4d\u79d2 \uff0c\u4e94\u5206\u949f   wal_keep_segments = 1024 # \u4fdd\u7559wal\u6587\u4ef6\u4e2a\u6570\uff0c \u5982\u679c\u8bbe\u7f6eslot \u53ef\u5ffd\u7565   # \u8bbf\u95ee\u76f8\u5173   listen_addresses = '*'                  # \u76d1\u542c\u7f51\u5361   port = 5432                             # \u7aef\u53e3   max_connections = 1000                  # \u6700\u5927\u8fde\u63a5\u6570   superuser_reserved_connections = 3     #  \u8d85\u7ea7\u7528\u6237\u9884\u7559</code></p> <p>```   vi pg_hba.conf #  \u786e\u4fdd\u672c\u673arepmgr \u7528\u6237\u53ef\u8bbf\u95ee   host    replication   repmgr      127.0.0.1/32            trust   host    replication   repmgr      0.0.0.0/0               trust</p> <p>local   repmgr        repmgr                              trust   host    repmgr        repmgr      127.0.0.1/32            trust   host    repmgr        repmgr      0.0.0.0/0               md5   ```</p> <p><code># \u5143\u6570\u636e\u4fe1\u606f\u5b58\u50a8\u8bbe\u7f6e   postgres=# create user repmgr;   CREATE ROLE   postgres=# alter user repmgr with password 'xxxxx';   ALTER ROLE   postgres=# alter user repmgr replication ;   ALTER ROLE   postgres=# create database repmgr owner repmgr;   CREATE DATABASE   postgres=#\\c repmgr   repmgr=# create extension repmgr;   CREATE EXTENSION   repmgr=# GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA repmgr TO repmgr ;</code></p> <ul> <li>repmgr</li> </ul> <p><code>vi repmgr.conf # /etc/repmgr/10/repmgr.conf   ## \u5fc5\u987b\u9879   node_id=1   node_name= node1   conninfo ='host=node1 dbname=repmgr user=repmgr connect_timeout=2'   data_directory = '/var/lib/pgsql/10/data'   ## \u53ef\u9009\u9879   config_directory = # pg\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e   replication_user = repmgr # \u9ed8\u8ba4\u4e3aconninfo \u4e2d\u4f7f\u7528\u7684user   location = # \u670d\u52a1\u5668\u6240\u5728\u7269\u7406\u4f4d\u7f6e\uff0c\u6709\u52a9\u4e8e\u5224\u65ad\u5f53\u53d1\u751f\u8111\u88c2\u65f6\u7f51\u7edc\u4e92\u901a\u903b\u8f91   use_replication_slots = true # \u662f\u5426\u4f7f\u7528\u7269\u7406\u590d\u5236\u69fd   log_level = INFO # \u65e5\u5fd7\u7b49\u7ea7   log_file =  '/var/log/repmgr/repmgr.log' # \u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\u4f4d\u7f6e \uff0c\u7ed3\u5408lograte\u7ba1\u7406   # \u6570\u636e\u5e93yum \u65b9\u5f0f\u5b89\u88c5\uff0c\u4f7f\u7528systemd \u7ba1\u7406\u65f6   service_start_command   = 'sudo systemctl start postgresql-10'   service_stop_command    = 'sudo systemctl stop postgresql-10'   service_restart_command = 'sudo systemctl restart postgresql-10'   service_reload_command  = 'sudo systemctl reload postgresql-10'</code></p>","tags":[]},{"location":"postgres/repmgr/#_6","title":"\u6ce8\u518c\u4e3b\u5e93","text":"<ul> <li>\u542f\u52a8\u6570\u636e\u5e93</li> </ul> <p><code># \u542f\u52a8\u6570\u636e\u5e93\u670d\u52a1   systemctl start postgresql-10   # \u8bbe\u7f6e\u5f00\u673a\u81ea\u542f   systemctl enable postgresql-10</code></p> <p><code># \u8fde\u63a5\u6d4b\u8bd5 repmgr.conf \u4e2d\u7684conninfo \u8fde\u63a5\u4e32\u4fe1\u606f\u6d4b\u8bd5\u672c\u5730\u767b\u5f55   psql  'host=node1 dbname=repmgr user=repmgr connect_timeout=2'</code></p> <ul> <li>\u6ce8\u518c</li> </ul> <p>```   $ su - postgres</p> <p># \u6d4b\u8bd5\u6ce8\u518c\u4e3b\u8282\u70b9   $ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf primary register --dry-run -L debug   INFO: connecting to primary database...   DEBUG: connecting to: \"user=repmgr dbname=repmgr host=node1 port=5432 connect_timeout=2 fallback_application_name=repmgr options=-csearch_path=\"   INFO: \"repmgr\" extension is already installed</p> <p># \u6b63\u5f0f\u6ce8\u518c\u4e3b\u8282\u70b9   $ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf primary register    INFO: connecting to primary database...   INFO: \"repmgr\" extension is already installed   NOTICE: primary node record (ID: 2) registered</p> <p># \u67e5\u770b\u8282\u70b9\u4fe1\u606f   $ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show    ID | Name  | Role    | Status    | Upstream | Location | Priority | Timeline | Connection string                              ----+-------+---------+-----------+----------+----------+----------+----------+------------------------------------------------    2  | node1 | primary | * running |          | default  | 100      | 2        | host=node1 port=5432 user=repmgr dbname=repmgr</p> <p>```</p> <ul> <li>\u5728\u6570\u636e\u5e93\u4e2d\u67e5\u770b\u6ce8\u518c\u4fe1\u606f</li> </ul> <p>```   $ repmgr=# set search_path = \"$user\", public,repmgr;   SET</p> <p>$ repmgr=# \\d+                                List of relations    Schema |        Name        | Type  | Owner  |    Size    | Description    --------+--------------------+-------+--------+------------+-------------    repmgr | events             | table | repmgr | 16 kB      |     repmgr | monitoring_history | table | repmgr | 0 bytes    |     repmgr | nodes              | table | repmgr | 16 kB      |     repmgr | replication_status | view  | repmgr | 0 bytes    |     repmgr | show_nodes         | view  | repmgr | 0 bytes    |     repmgr | voting_term        | table | repmgr | 8192 bytes |    (6 rows)</p> <p>$ SELECT * FROM repmgr.nodes;   -[ RECORD 1 ]----+-----------------------------------------------   node_id          | 2   upstream_node_id |    active           | t   node_name        | node1   type             | primary   location         | default   priority         | 100   conninfo         | host=node1 port=5432 user=repmgr dbname=repmgr   repluser         | repmgr   slot_name        | repmgr_slot_2   config_file      | /etc/repmgr/10/repmgr.conf</p> <p>$ SELECT * FROM repmgr.show_nodes ;   -[ RECORD 1 ]------+-----------------------------------------------   node_id            | 2   node_name          | node1   active             | t   upstream_node_id   |    upstream_node_name |    type               | primary   priority           | 100   conninfo           | host=node1 port=5432 user=repmgr dbname=repmgr   ```</p>","tags":[]},{"location":"postgres/repmgr/#_7","title":"\u52a0\u5165\u4ece\u5e93","text":"<p>\u52a0\u5165node2 \uff0cnode3 \u4e24\u4e2a\u8282\u70b9</p> <ul> <li> <p>\u5b89\u88c5PG &amp; repmgr</p> </li> <li> <p>\u914d\u7f6erepmgr</p> </li> <li> <p>\u4ece\u4e3b\u8282\u70b9clone</p> </li> </ul> <p>```   # \u8bd5\u8fd0\u884c \u8fde\u63a5\u4fe1\u606f -U -h -d \u4e3a\u4e3b\u5e93\u5730\u5740 , \u662f\u5426\u4f7f\u7528\u590d\u5236\u69fd \u5728 repmgr.conf \u4e2d\u6307\u5b9a   $ /usr/pgsql-10/bin/repmgr -h node1 -U repmgr -d repmgr -f /etc/repmgr/10/repmgr.conf standby clone --dry-run</p> <p># \u6b63\u5f0f\u8fd0\u884c   $ /usr/pgsql-10/bin/repmgr -h node1 -U repmgr -d repmgr -f /etc/repmgr/10/repmgr.conf standby clone    # \u53ef\u9009\u53c2\u6570   -c, --fast-checkpoint \u4e3b\u5e93\u6267\u884ccheckpoint   --upstream-node-id  \u53ef\u7528\u4e8e\u7ea7\u8054\u590d\u5236   ```</p> <pre><code>```\n</code></pre> <p># \u542f\u52a8\u6570\u636e\u5e93   $ sudo systemctl start postgresql-10   # \u6ce8\u518c\u4ece\u8282\u70b9   $ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby register      ```</p> <p><code># \u767b\u5f55\u4e3b\u5e93\u67e5\u770b \u4e3b\u4ece\u590d\u5236\u4fe1\u606f   select * from pg_stat_replication ;   -[ RECORD 1 ]----+------------------------------   pid              | 12204   usesysid         | 16384   usename          | repmgr   application_name | node3   client_addr      | 10.10.2.13   client_hostname  |    client_port      | 37412   backend_start    | 2022-08-11 06:15:08.568251+00   backend_xmin     |    state            | streaming   sent_lsn         | 0/5000648   write_lsn        | 0/5000648   flush_lsn        | 0/5000648   replay_lsn       | 0/5000648   write_lag        |    flush_lag        |    replay_lag       |    sync_priority    | 0   sync_state       | async</code></p> <p><code>select * from pg_replication_slots ;   -[ RECORD 1 ]-------+--------------   slot_name           | repmgr_slot_3   plugin              |    slot_type           | physical   datoid              |    database            |    temporary           | f   active              | t   active_pid          | 12386   xmin                |    catalog_xmin        |    restart_lsn         | 0/7001158   confirmed_flush_lsn |</code></p> <p><code>/usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show    ID | Name  | Role    | Status    | Upstream | Location | Priority | Timeline | Connection string                                ----+-------+---------+-----------+----------+----------+----------+----------+------------------------------------------------    2  | node1 | primary | * running |          | default  | 100      | 2        | host=node1 port=5432 user=repmgr dbname=repmgr    3  | node3 | standby |   running | node1    | default  | 100      | 2        | host=node2 user=repmgr dbname=repmgr</code></p>","tags":[]},{"location":"postgres/repmgr/#switchover","title":"\u4e3b\u52a8switchover","text":"<pre><code># \u5728\u8ba1\u5212\u63d0\u5347\u4e3a\u4e3b\u5e93\u7684\u8282\u70b9\u4e0a\u6267\u884c\n/usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby switchover --siblings-follow \n\n# \u67e5\u770b\u5207\u6362\u7ed3\u679c \n/usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show\n ID | Name  | Role    | Status    | Upstream | Location | Priority | Timeline | Connection string                                     \n----+-------+---------+-----------+----------+----------+----------+----------+--------------------------------------------------------\n 1  | node1 | primary | * running |          | default  | 100      | 4        | host=node1 port=5432 user=repmgr dbname=repmgr        \n 2  | node2 | standby |   running | node1    | default  | 100      | 3        | host=node2 user=repmgr dbname=repmgr                  \n 3  | node3 | standby |   running | node1    | default  | 100      | 4        | host=node3 dbname=repmgr user=repmgr connect_timeout=2\n\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879\uff0c1 \u539f\u4e3b\u5e93\u4e0a\u7684slot \u4ecd\u7136\u5b58\u5728\uff08\u540e\u671f\u6d4b\u8bd5\u51e0\u6b21\u53d1\u73b0\u4f1a\u81ea\u52a8\u5220\u9664\uff09 2 \u7ea7\u8054\u590d\u5236\u7684\u60c5\u51b5\u4e0b\u907f\u514d\u6700\u4e0b\u6e38\u8282\u70b9\u63d0\u5347\u4e3b</p>","tags":[]},{"location":"postgres/repmgr/#_8","title":"\u4fee\u6539\u7ea7\u8054\u5173\u7cfb","text":"<pre><code>/usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby follow --upstream-node-id 1\n</code></pre>","tags":[]},{"location":"postgres/repmgr/#switchover_1","title":"\u88ab\u52a8switchover","text":"<p>\u6a21\u62df\u4e3b\u8282\u70b9\u6545\u969c</p> <pre><code># node1 \u5173\u95ed\nsudo systemctl stop postgresql-10\n\n# node2 \u4e0a\u67e5\u770b\u96c6\u7fa4\u72b6\u6001\n/usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show\n ID | Name  | Role    | Status        | Upstream | Location | Priority | Timeline | Connection string                                     \n----+-------+---------+---------------+----------+----------+----------+----------+--------------------------------------------------------\n 1  | node1 | primary | ? unreachable | ?        | default  | 100      |          | host=node1 port=5432 user=repmgr dbname=repmgr        \n 2  | node2 | standby |   running     | ? node1  | default  | 100      | 4        | host=node2 user=repmgr dbname=repmgr                  \n 3  | node3 | standby |   running     | ? node1  | default  | 100      | 4        | host=node3 dbname=repmgr user=repmgr connect_timeout=2\n\nWARNING: following issues were detected\n  - unable to connect to node \"node1\" (ID: 1)\n  - node \"node1\" (ID: 1) is registered as an active primary but is unreachable\n  - unable to connect to node \"node2\" (ID: 2)'s upstream node \"node1\" (ID: 1)\n  - unable to determine if node \"node2\" (ID: 2) is attached to its upstream node \"node1\" (ID: 1)\n  - unable to connect to node \"node3\" (ID: 3)'s upstream node \"node1\" (ID: 1)\n  - unable to determine if node \"node3\" (ID: 3) is attached to its upstream node \"node1\" (ID: 1)\n\nHINT: execute with --verbose option to see connection error messages\n</code></pre> <p>\u63d0\u5347node2 \u8282\u70b9\u4e3a\u4e3b\u8282\u70b9</p> <pre><code># \u5728node2 \u4e0a\u6267\u884c\n$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby promote\nWARNING: 1 sibling nodes found, but option \"--siblings-follow\" not specified\nDETAIL: these nodes will remain attached to the current primary:\n  node3 (node ID: 3)\nNOTICE: promoting standby to primary\nDETAIL: promoting server \"node2\" (ID: 2) using \"/usr/pgsql-10/bin/pg_ctl  -w -D '/var/lib/pgsql/10/data' promote\"\nwaiting for server to promote.... done\nserver promoted\nNOTICE: waiting up to 60 seconds (parameter \"promote_check_timeout\") for promotion to complete\nNOTICE: STANDBY PROMOTE successful\nDETAIL: server \"node2\" (ID: 2) was successfully promoted to primary\n\n# \u67e5\u770b\u96c6\u7fa4\u72b6\u6001\n$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show\n ID | Name  | Role    | Status    | Upstream | Location | Priority | Timeline | Connection string                                     \n----+-------+---------+-----------+----------+----------+----------+----------+--------------------------------------------------------\n 1  | node1 | primary | - failed  | ?        | default  | 100      |          | host=node1 port=5432 user=repmgr dbname=repmgr        \n 2  | node2 | primary | * running |          | default  | 100      | 5        | host=node2 user=repmgr dbname=repmgr                  \n 3  | node3 | standby |   running | ? node1  | default  | 100      | 4        | host=node3 dbname=repmgr user=repmgr connect_timeout=2\n\nWARNING: following issues were detected\n  - unable to connect to node &amp;quot;node1&amp;quot; (ID: 1)\n  - unable to connect to node &amp;quot;node3&amp;quot; (ID: 3)&amp;apos;s upstream node &amp;quot;node1&amp;quot; (ID: 1)\n  - unable to determine if node &amp;quot;node3&amp;quot; (ID: 3) is attached to its upstream node &amp;quot;node1&amp;quot; (ID: 1)\n\nHINT: execute with --verbose option to see connection error messages\n\n# \u5982\u679c\u539f\u6765\u96c6\u7fa4\u4e2d\u6709\u5176\u4ed6\u4ece\u8282\u70b9\uff0c\u4e3b\u8282\u70b9\u4e5f\u6307\u5411\u6545\u969c\u8282\u70b9node1 \uff0c \u5728\u63d0\u5347node2\u8282\u70b9\u65f6\u540c\u65f6\u5c06\u5176\u4ed6\u8282\u70b9\u6307\u5411\u81ea\u5df1\n$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby promote --siblings-follow \n</code></pre> <p>node3 \u91cd\u65b0\u6307\u5b9a\u4e3b\u5e93\u4e3anode2</p> <pre><code># \u5728node3 \u4e0a\u6267\u884c\n$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby follow\n# \u67e5\u770b\u72b6\u6001\n$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show\n ID | Name  | Role    | Status    | Upstream | Location | Priority | Timeline | Connection string                                     \n----+-------+---------+-----------+----------+----------+----------+----------+--------------------------------------------------------\n 1  | node1 | primary | - failed  | ?        | default  | 100      |          | host=node1 port=5432 user=repmgr dbname=repmgr        \n 2  | node2 | primary | * running |          | default  | 100      | 5        | host=node2 user=repmgr dbname=repmgr                  \n 3  | node3 | standby |   running | node2    | default  | 100      | 4        | host=node3 dbname=repmgr user=repmgr connect_timeout=2\n\nWARNING: following issues were detected\n  - unable to connect to node \"node1\" (ID: 1)\n\nHINT: execute with --verbose option to see connection error messages\n</code></pre> <p>node1 \u91cd\u65b0\u52a0\u5165\u96c6\u7fa4</p> <pre><code># \u767b\u5f55\u5230\u539f\u4e3bnode1 \u8282\u70b9 \uff0c \u786e\u4fdd\u6570\u636e\u662f\u5173\u95ed\u72b6\u6001 \n$ /usr/pgsql-10/bin/repmgr node rejoin -f /etc/repmgr/10/repmgr.conf -d 'host=node3 dbname=repmgr user=repmgr'  --force-rewind --config-files=postgresql.conf --verbose --dry-run\nNOTICE: using provided configuration file \"/etc/repmgr/10/repmgr.conf\"\nNOTICE: rejoin target is node \"node3\" (ID: 3)\nINFO: replication slots in use, 3 free slots on node 9\nINFO: replication connection to the rejoin target node was successful\nINFO: local and rejoin target system identifiers match\nDETAIL: system identifier is 7129425727714895616\nINFO: prerequisites for using pg_rewind are met\nINFO: temporary archive directory \"/tmp/repmgr-config-archive-node1\" created\nINFO: file \"postgresql.conf\" would be copied to \"/tmp/repmgr-config-archive-node1/postgresql.conf\"\nINFO: 1 files would have been copied to \"/tmp/repmgr-config-archive-node1\"\nINFO: temporary archive directory \"/tmp/repmgr-config-archive-node1\" deleted\nINFO: pg_rewind would now be executed\nDETAIL: pg_rewind command is:\n  /usr/pgsql-10/bin/pg_rewind -D '/var/lib/pgsql/10/data' --source-server='host=node3 dbname=repmgr user=repmgr connect_timeout=2'\nINFO: prerequisites for executing NODE REJOIN are met\n\n# \u6b63\u5f0f\u6267\u884c\n$ /usr/pgsql-10/bin/repmgr node rejoin -f /etc/repmgr/10/repmgr.conf -d 'host=node3 dbname=repmgr user=repmgr'  --force-rewind --config-files=postgresql.conf --verbose\n# \u542f\u52a8\u6570\u636e\u5e93\n$ sudo systemctl start postgresql-10\n# \u67e5\u770b\u7ed3\u679c\n$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf cluster show\n</code></pre> <p>node1 \u8282\u70b9\u6545\u969c\u4e0d\u53ef\u6062\u590d\u60c5\u51b5</p> <p>```</p>","tags":[]},{"location":"postgres/repmgr/#node1","title":"\u5c06node1 \u8282\u70b9\u4ece\u96c6\u7fa4\u4e2d\u6ce8\u9500, \u767b\u5f55\u5230\u5176\u4ed6\u4efb\u610f\u8282\u70b9","text":"<p>$ /usr/pgsql-10/bin/repmgr -f /etc/repmgr/10/repmgr.conf standby unregister --node-id  ```</p> <pre><code> $ repmgr -f /etc/repmgr/10/repmgr.conf cluster event\n</code></pre>","tags":[]},{"location":"postgres/repmgr/#failover","title":"\u81ea\u52a8failover","text":"<p>\u4fee\u6539\u914d\u7f6e</p> <p>vi postgresql.conf</p> <pre><code>shared_preload_libraries = 'repmgr'\n</code></pre> <p>vi /etc/repmgr/10/repmgr.conf</p> <pre><code>failover=automatic\npromote_command='/usr/pgsql-10/bin/repmgr standby promote -f /etc/repmgr/10/repmgr.conf --log-to-file'\nfollow_command='/usr/pgsql-10/bin/repmgr standby follow -f /etc/repmgr/10/repmgr.conf --log-to-file --upstream-node-id=%n'\nlog_file='/var/lib/pgsql/repmgrd.log'\nmonitoring_history=true #\uff08\u542f\u7528\u76d1\u63a7\u53c2\u6570\uff09\nmonitor_interval_secs=5 #\uff08\u5b9a\u4e49\u76d1\u89c6\u6570\u636e\u95f4\u9694\u5199\u5165\u65f6\u95f4\u53c2\u6570\uff09\nreconnect_attempts=10 #\uff08\u6545\u969c\u8f6c\u79fb\u4e4b\u524d\uff0c\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\u4e3b\u5e93\u6b21\u6570\uff08\u9ed8\u8ba4\u4e3a6\uff09\u53c2\u6570\uff09\nreconnect_interval=5 #\uff08\u6bcf\u95f4\u96945s\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\u4e00\u6b21\u53c2\u6570\n</code></pre> <p>\u91cd\u542f postgres</p> <pre><code>repmgr node service --action=restart\n</code></pre> <p>\u542f\u52a8 repmgrd</p> <pre><code>systemctl start repmgr-10\nsystemctl enable repmgr-10\n</code></pre> <p>\u6d4b\u8bd5</p> <p>\u7565</p> <p>\u4e3b\u8282\u70b9\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4</p> <pre><code># \u5168\u90e8\u539f\u4e3b\u8282\u70b9\u4fdd\u6301\u5173\u95ed\u72b6\u6001\u3002 \u9996\u5148\u5c06\u6267\u884cpg_rewind -&gt;   \u81ea\u52a8\u542f\u52a8\u670d\u52a1 - &gt; \u6ce8\u518c\u670d\u52a1\n repmgr node rejoin -d 'host=node1 dbname=repmgr user=repmgr' --force-rewind --config-files=postgresql.conf,postgresql.auto.conf --verbose --dry-run\n repmgr node rejoin -d 'host=node1 dbname=repmgr user=repmgr' --force-rewind --config-files=postgresql.conf,postgresql.auto.conf --verbose\n</code></pre>","tags":[]},{"location":"postgres/repmgr/#failover_1","title":"\u81ea\u52a8failover \u51e0\u70b9\u8bf4\u660e","text":"<p>\u4e3a\u9884\u9632\u7f51\u7edc\u8111\u88c2\u53d1\u751f\uff1a repmgr \u505a\u4e86\u5982\u4e0b\u52aa\u529b\uff1a 1 \uff0c\u4f7f\u7528\u89c1\u8bc1\u8282\u70b9\u3002\u4e3b\u8981\u5e94\u7528\u4e8e\u53ea\u6709\u4e3b\u4ece\u4e24\u4e2a\u8282\u70b9\u7684\u573a\u666f\uff0c \u5c06\u89c1\u8bc1\u8282\u70b9\u4e0e\u4e3b\u8282\u70b9\u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u7f51\u7edc\u533a\u95f4\u3002 \u5f53\u4e3b\u8282\u70b9\u4e0e\u89c1\u8bc1\u8282\u70b9\u540c\u65f6\u4e0d\u53ef\u89c1\u65f6\uff0c\u8ba4\u4e3a\u662f\u7f51\u7edc\u9519\u8bef\uff0c\u4e0d\u53d1\u751f\u5207\u6362\u3002\u5f53\u89c1\u8bc1\u8282\u70b9\u53ef\u89c1\uff0c\u4e3b\u8282\u70b9\u4e0d\u53ef\u89c1\u65f6\uff0c\u8ba4\u4e3a\u4e3b\u8282\u70b9\u5931\u6548\uff0c\u89e6\u53d1\u5207\u6362\u3002</p> <p>\u5f15\u5165\u89c1\u8bc1\u8282\u70b9\u63d0\u9ad8\u4e86\u7ef4\u62a4\u6210\u672c\u3002 </p> <p>\u591aIDC\u7f51\u7edc\u573a\u666f\uff0c\u65b9\u68482 \uff1a \u4f7f\u7528location \u6807\u8bb0\u670d\u52a1\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u5f53\u4e0e\u4e3b\u8282\u70b9location\u76f8\u540c\u7684\u8282\u70b9\u90fd\u4e0d\u53ef\u89c1\u65f6\uff0c\u8ba4\u4e3a\u662f\u7f51\u7edc\u9519\u8bef\uff0c\u4e0d\u53d1\u751f\u5207\u6362\u3002\u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u5176\u4ed6\u8282\u70b9\u4e0e\u4e3b\u8282\u70b9\u7684location\u914d\u7f6e\u76f8\u540c\uff0c\u5219\u6c38\u8fdc\u4e0d\u53d1\u751f\u5207\u6362\u3002</p> <p>\u4e3e\u4f8b\uff1a \u4e09\u4e2aIDC\uff0c\u4e09\u4e2apg\u670d\u52a1\u3002location\u5206\u522b\u8bbe\u7f6e\u4e3adc1\uff08\u4e3b\u8282\u70b9\uff09\uff0cdc2\uff08\u4ece\u8282\u70b9\uff09\uff0cdc3\uff08\u4ece\u8282\u70b9\uff09\u3002 \u5f53dc1 \u8282\u70b9\u53d1\u751f\u6545\u969c\u65f6\u4e0d\u4f1a\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u3002 \u56e0\u4e3a\u96c6\u7fa4\u4e2dlocation \u4e3adc1\u7684\u8282\u70b9\uff08\u53ea\u6709\u4e00\u4e2a\uff09\u90fd\u4e0d\u53ef\u89c1\u3002</p> <p>\u5408\u7406\u7684\u8bbe\u7f6e\u5e94\u8be5\u4e3acd1(\u4e3b\u8282\u70b9) ,dc1(\u4e00\u4e2a\u4ece)\uff0cdc2\uff08\u53e6\u4e00\u4e2a\u4ece\uff09\u3002 \u6b64\u65f6\u5f53dc1 \u53d1\u751f\u4ee5\u5916\u65f6\uff0c\u53ef\u6545\u969c\u8f6c\u79fb\u3002</p>","tags":[]},{"location":"postgres/repmgr/#repmgrpg","title":"\u6ce8\u610f\u4e8b\u9879\uff1a \u5f53\u4e3b\u8282\u70b9\u7f51\u7edc\u95ee\u9898\u3002\u5982\u7f51\u5361\uff0c\u7f51\u7ebf\u6545\u969c\u3002\u670d\u52a1\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\u3002\u96c6\u7fa4\u4e5f\u4f1a\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u3002\u5f53\u7f51\u7edc\u6062\u590d\u7684\u65f6\u5019\u53d1\u751f\u8111\u88c2\u3002 \u4e3b\u8981\u95ee\u9898\u3002\u5f53\u4e3b\u8282\u70b9\u8131\u79bb\u96c6\u7fa4\u65f6\u6ca1\u6709\u5f7b\u5e95\u5173\u95ed\u670d\u52a1\u3002repmgr\u4e0d\u80fd\u7ba1\u7406pg\u670d\u52a1,\u5c06\u5176\u5173\u95ed\u3002","text":"<p>\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e\uff0c\u901a\u8fc7\u786e\u5b9a\u4e0e\u4ece\u8282\u70b9\u8fde\u63a5\u4e2a\u6570\u51b3\u5b9a\u662f\u5426\u5173\u95ed\u5f53\u524d\u670d\u52a1\u3002\u5728command\u4e2d\u5173\u95ed\u5f53\u524dpg</p> <pre><code>#child_nodes_check_interval=5           # Interval (in seconds) to check for attached child nodes (standbys)\n#child_nodes_connected_min_count=-1     # Minimum number of child nodes which must remain connected, otherwise\n                                        # disconnection command will be triggered\n#child_nodes_disconnect_min_count=-1    # Minimum number of disconnected child nodes required to execute disconnection command\n                                        # (ignored if \"child_nodes_connected_min_count\" set)\n#child_nodes_disconnect_timeout=30      # Interval between child node disconnection and disconnection command execution\nchild_nodes_disconnect_command='' \n</code></pre>","tags":[]},{"location":"postgres/repmgr/#location","title":"location \u4fee\u6539","text":"<p>localtion \u53c2\u6570\u5728\u9ad8\u53ef\u7528\u67b6\u6784\u4e2d\u4e3a\u9632\u6b62\u7f51\u7edc\u5206\u533a\u95ee\u9898\u53d1\u6325\u91cd\u8981\u4f5c\u7528\u3002 \u53d1\u751f\u6545\u969c\u8f6c\u79fb\u540elocation \u901a\u5e38\u4e5f\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u3002</p> <p>\u4fee\u6539 /etc/repmgr/10/repmgr.conf</p> <p>\u751f\u6548</p> <pre><code>repmgr standby register --force\nsystemctl restart repmgr-10\n</code></pre> <p>\u67e5\u770b</p> <pre><code>repmgr cluster show\n\u6216\nselect * from repmgr.nodes;\n</code></pre> <p>\u4fee\u6539location</p>","tags":[]},{"location":"postgres/repmgrd/","title":"repmgrd\u4ecb\u7ecd","text":""},{"location":"postgres/repmgrd/#repmgrd","title":"repmgrd\u4ecb\u7ecd","text":"<p>repmgrd \u4f5c\u4e3a\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4e00\u4e2a\u7ba1\u7406\u548c\u76d1\u63a7\u7684\u5b88\u62a4\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u81ea\u52a8\u8fdb\u884c\u6545\u969c\u8f6c\u79fb\u548c\u7ef4\u62a4\u590d\u5236\u5173\u7cfb\uff0c\u5e76\u63d0\u4f9b\u6709\u5173\u6bcf\u4e2a\u8282\u70b9\u72b6\u6001\u7684\u76d1\u63a7\u4fe1\u606f\u3002</p> <p>repmgrd \u4e0d\u4f9d\u8d56\u5176\u4ed6\u670d\u52a1</p> <p>\u63d0\u4f9b\u7684\u529f\u80fd\u5305\u62ec:</p> <ul> <li>\u4f17\u591a\u7684\u914d\u7f6e\u9879\u63d0\u4f9b\u9009\u62e9</li> <li>\u6839\u636e\u573a\u666f\u53ef\u81ea\u5b9a\u4e49\u5bf9\u5e94\u6267\u884c\u811a\u672c</li> <li>\u4e00\u4e2a\u547d\u4ee4\u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f</li> <li>\u591a\u6570\u636e\u4e2d\u5fc3\u573a\u666f\uff0c\u901a\u8fc7location\u9650\u5236\u5019\u9009\u4e3b\u8282\u70b9</li> <li>\u591a\u79cd\u9a8c\u8bc1Postgresql\u5b58\u6d3b\u72b6\u6001\u65b9\u6cd5\uff08PostgreSQL ping, query execution or new connection\uff09</li> <li>\u4fdd\u7559\u76d1\u63a7\u6570\u636e\uff08\u53ef\u9009\uff09</li> </ul>"},{"location":"postgres/repmgrd/#repmgrd_1","title":"repmgrd \u6545\u969c\u8f6c\u79fb","text":""},{"location":"postgres/repmgrd/#_1","title":"\u89c1\u8bc1\u8282\u70b9\u4ecb\u7ecd","text":"<p>\u662f\u4e00\u4e2a\u72ec\u7acb\u4e8e\u5f53\u524d\u4e3b\u4ece\u590d\u5236\u6570\u636e\u5e93\u7684Postgresql\u6570\u636e\u5e93\u3002</p> <p>\u76ee\u7684\u662f\u5f53\u53d1\u751ffailover\u573a\u666f\u65f6\uff0c\u7528\u6765\u8bc1\u660e\u4e3b\u670d\u52a1\u81ea\u8eab\u4e0d\u53ef\u7528\u8fd8\u662f\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\u95ee\u9898</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f</p> <p>\u4f4d\u4e8e\u4e24\u4e2a\u6570\u636e\u4e2d\u5fc3\u7684\u4e3b\u4ece\u590d\u5236\u7ed3\u6784\u3002\u548c\u4e3b\u670d\u52a1\u540c\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u4e0a\u521b\u5efa\u4e00\u4e2a\u89c1\u8bc1\u670d\u52a1\u3002\u5f53\u4e3b\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\uff0c\u4ece\u8282\u70b9\u5224\u65ad\u903b\u8f91\uff0c\u5982\u679c\u4e3b\u670d\u52a1\u548c\u89c1\u8bc1\u8282\u70b9\u90fd\u4e0d\u53ef\u89c1\u5219\u8ba4\u4e3a\u662f\u7f51\u7edc\u95ee\u9898\u3002\u5982\u679c\u4e3b\u670d\u52a1\u4e0d\u53ef\u89c1\uff0c\u89c1\u8bc1\u8282\u70b9\u53ef\u89c1\u5219\u8ba4\u4e3a\u662f\u4e3b\u670d\u52a1\u53d1\u751f\u95ee\u9898\u3002</p> <p>\u6ce8\u610f\u4e8b\u9879:</p> <p>\u4e0d\u8981\u5c06\u89c1\u8bc1\u8282\u70b9\u4e0e\u4e3b\u4ece\u670d\u52a1\u5b89\u88c5\u5728\u540c\u4e00\u4e2a\u7269\u7406\u673a\u4e0a\u3002</p> <p>\u591a\u6570\u636e\u4e2d\u5fc3\u573a\u666f\u5efa\u8bae\u4f7f\u7528localiton\u6765\u9884\u9632\u8111\u88c2\u95ee\u9898</p> <p>\u89c1\u8bc1\u8282\u70b9\u53ea\u5728repmgrd\u542f\u7528\u65f6\u6709\u6548\u3002</p>"},{"location":"postgres/repmgrd/#_2","title":"\u6dfb\u52a0\u89c1\u8bc1\u8282\u70b9","text":"<p>\u5b89\u88c5\u4e00\u4e2a\u72ec\u7acb\u7684Postgresql\u5b9e\u4f8b\uff0c\u914d\u7f6e\u53c2\u8003\u666e\u901a\u7684repmgr\u3002</p> <p>\u6ce8\u518c\u89c1\u8bc1\u8282\u70b9 </p> <pre><code>repmgr -f /etc/repmgr.conf witness register -h node1\n</code></pre> <p>\u601d\u8003: \u89c1\u8bc1\u8282\u70b9\u662f\u5426\u9700\u8981\u8fd0\u884crepmgrd\u3002 \u89c1\u8bc1\u8282\u70b9\u4e0d\u540c\u4e8e\u5176\u4ed6\u4ece\u8282\u70b9\uff0c\u5143\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u6d41\u590d\u5236\u76f4\u63a5\u83b7\u53d6\u5230\u3002\u9700\u8981repmgrd\u6765\u7ef4\u62a4\u3002</p>"},{"location":"postgres/repmgrd/#_3","title":"\u89e3\u51b3\u8111\u88c2\u95ee\u9898","text":"<p>\u591a\u6570\u636e\u4e2d\u5fc3\u5e26\u6765\u7684\u8111\u88c2\u95ee\u9898\uff0c\u5f53\u4e0d\u540c\u6570\u636e\u4e2d\u5fc3\u7684\u8282\u70b9\u5f7c\u6b64\u4e0d\u53ef\u89c1\u65f6\uff0c\u4ece\u5e93\u7684\u670d\u52a1\u53d1\u751ffailover \u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u4e3b\u8282\u70b9\u3002\u6b64\u65f6\u6574\u4e2a\u96c6\u7fa4\u540c\u65f6\u62e5\u6709\u4e24\u4e2a\u4e3b\u670d\u52a1\u3002</p> <p>\u867d\u7136\u89c1\u8bc1\u670d\u52a1\u53ef\u4ee5\u5728\u4ef2\u88c1\u3002\u4f46\u662f\u89c1\u8bc1\u670d\u52a1\u5b58\u5728\u5982\u4e0b\u5f0a\u7aef\u3002</p> <ul> <li>\u9700\u8981\u4fdd\u8bc1\u89c1\u8bc1\u8282\u70b9\u4e0e\u4e3b\u670d\u52a1\u8282\u70b9\u4f4d\u4e8e\u540c\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u3002</li> <li>\u5f53\u96c6\u7fa4\u4e2d\u591a\u6570\u8282\u70b9\u4e0e\u4e3b\u670d\u52a1\u8282\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u65f6\uff0c\u589e\u52a0\u989d\u5916\u7684\u7ef4\u62a4\u6210\u672c\uff0c\u4e14\u4e0d\u4fbf\u6269\u5c55\uff0c\u5c24\u5176\u662f\u5927\u89c4\u6a21\u5e94\u7528\u65f6\u3002</li> </ul> <p>repmgr4 \u63d0\u51falocation\u7684\u6982\u5ff5\uff0c\u901a\u8fc7\u914d\u7f6elocation\u6765\u6307\u5b9a\u8282\u70b9\u7684\u7269\u7406\u4f4d\u7f6e\u3002</p> <p>\u5f53\u53d1\u751ffailover\u65f6\u3002repmgr\u9996\u5148\u68c0\u6d4b\u662f\u5426\u5b58\u5728\u4e0e\u4e3b\u670d\u52a1\u4f4d\u4e8e\u540c\u4e00\u4e2alocaltion\u7684\u670d\u52a1\u662f\u53ef\u89c1\u7684\u3002\u5982\u679c\u4e0d\u5b58\uff08\u5373\u6574\u4e2a\u4e0e\u4e3b\u670d\u52a1\u4f4d\u4e8e\u540c\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u7684\u8282\u70b9\u90fd\u4e0d\u53ef\u89c1\uff09\u5728\u5219\u8ba4\u4e3a\u662f\u7f51\u7edc\u95ee\u9898\u3002\u4e0d\u63d0\u5347\u65b0\u4e3b\u5e93\uff0c\u5e76\u4e14\u8fdb\u5165\u964d\u7ea7\u6a21\u5f0f\u3002</p>"},{"location":"postgres/repmgrd/#_4","title":"\u4e3b\u670d\u52a1\u53ef\u89c1\u6027\u5171\u8bc6","text":"<p>\u66f4\u590d\u6742\u7684\u96c6\u7fa4\u7ed3\u6784\uff0c\u5f53\u4ece\u8282\u70b9\u670d\u52a1\u8fde\u63a5\u4e0d\u5230\u4e3b\u670d\u52a1\u65f6\uff0c\u8be2\u95ee\u5176\u4ed6\u4ece\u670d\u52a1\u6700\u540e\u4e00\u6b21\u770b\u5230\u4e3b\u670d\u52a1\u7684\u65f6\u95f4\u3002\u5f53\u5b58\u5728\u8282\u70b9\u53ef\u4ee5\u8fde\u63a5\u5230\u4e3b\u670d\u52a1\u5219\u8bc1\u660e\u4e3b\u670d\u52a1\u8fd8\u5b58\u6d3b\uff0c\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u63d0\u4f9b\u5199\u670d\u52a1\u3002\u6b64\u65f6\u4e0d\u53d1\u751f\u65b0\u7684\u9009\u4e3e\u3002</p> <p>\u914d\u7f6e\u53c2\u6570</p> <pre><code> primary_visibility_consensus=true\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879\u3002\u5fc5\u987b\u6bcf\u4e2a\u670d\u52a1\u90fd\u8bbe\u7f6e\u4e3atrue\u624d\u751f\u6548</p>"},{"location":"postgres/repmgrd/#_5","title":"\u4ece\u8282\u70b9\u65ad\u5f00\u8fde\u63a5","text":"<p>\u5f53standby_disconnect_on_failover\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u5728\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u65f6\u9996\u5148\u4ece\u8282\u70b9\u65ad\u5f00\u672c\u5730\u7684wal receiver,\u5e76\u4e14\u7b49\u5f85\u6240\u6709\u5176\u4ed6\u8282\u70b9\u65ad\u5f00\u81ea\u5df1\u7684wal receiver\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u786e\u4fdd\u5728\u6545\u969c\u8f6c\u79fb\u65f6\uff0c\u6240\u6709\u7684\u8282\u70b9lsn\u5904\u4e8e\u9759\u6b62\u72b6\u6001\u3002</p> <p>\u91cd\u8981\u63d0\u793a:</p> <ul> <li> <p>Postgresql9.5 \u53ca\u4ee5\u4e0a\uff0crepmgr \u7684\u6570\u636e\u5e93\u7528\u6237\u5177\u6709\u8d85\u7ea7\u7528\u6237\u6743\u9650</p> </li> <li> <p><code>standby_disconnect_on_failover</code> \u5fc5\u987b\u8981\u6240\u6709\u8282\u70b9\u670d\u52a1\u90fd\u8bbe\u7f6e\u624d\u751f\u6548</p> </li> <li>\u6ce8\u610f\u8bbe\u7f6e\u6b64\u53c2\u6570\u540e\u5c06\u5e26\u6765\u7684\u5ef6\u8fdf\uff0c\u5305\u62ec\u786e\u5b9a\u81ea\u5df1wal receiver\u662f\u5426\u5df2\u7ecf\u5173\u95ed\u3002\u7b49\u4ed6\u786e\u8ba4\u5176\u4ed6\u8282\u70b9wal receiver \u662f\u5426\u5df2\u7ecf\u5b8c\u5168\u5173\u95ed</li> <li>\u5f00\u542f\u6b64\u53c2\u6570\u5efa\u8bae\u540c\u65f6\u5f00\u542f   <code>primary_visibility_consensus</code></li> </ul>"},{"location":"postgres/repmgrd/#_6","title":"\u6545\u969c\u8f6c\u79fb\u9a8c\u8bc1","text":"<p>\u5728\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u65f6\uff0c\u67d0\u4e2a\u8282\u70b9\u88ab\u9009\u4e3e\u4e3a\u65b0\u7684\u4e3b\u8282\u70b9\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u81ea\u5b9a\u4e49\u5224\u65ad\u811a\u672c\uff0c\u8fdb\u4e00\u6b65\u51b3\u5b9a\u5f53\u524d\u662f\u5426\u53ef\u4ee5\u88ab\u63d0\u5347\u4e3a\u4e3b\u8282\u70b9\uff08\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8f85\u52a9\u903b\u8f91\uff09\u3002  \u5fc5\u987b\u5728\u6240\u6709\u8282\u70b9\u8fdb\u884c\u914d\u7f6e\u3002       </p> <p>\u914d\u7f6e\u5982\u4e0b\uff1a</p> <pre><code>failover_validation_command=/path/to/script.sh %n     \n</code></pre> <p>\u53ef\u4f7f\u7528\u53c2\u6570\uff1a</p> <ul> <li><code>%n</code>: node ID</li> <li><code>%a</code>: node name</li> <li><code>%v</code>: \u53ef\u89c1\u8282\u70b9\u6570</li> <li><code>%u</code>: number of shared upstream nodes</li> <li><code>%t</code>: \u603b\u8282\u70b9\u6570</li> </ul> <p>\u6839\u636e\u811a\u672c\u8fd4\u56de\u7801\uff08\u662f\u5426\u975e0\uff09\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u5c06\u5f53\u524d\u8282\u70b9\u63d0\u5347\u4e3a\u4e3b\u8282\u70b9\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u4e2d\u65ad\u672c\u6b21\u6545\u969c\u8f6c\u79fb\u6d41\u7a0b\uff0c<code>election_rerun_interval</code> \u79d2\u540e\u8fdb\u5165\u4e0b\u4e00\u8f6e\u6545\u969c\u8f6c\u79fb\u6d41\u7a0b\u3002</p>"},{"location":"postgres/repmgrd/#_7","title":"\u7ea7\u8054\u590d\u5236","text":"<p>Postgresql 9.2 \u6570\u636e\u5e93\u5177\u6709\u4e86\u7ea7\u8054\u590d\u5236\u529f\u80fd\u3002repmgr \u53ef\u4ee5\u63d0\u4f9b\u7ea7\u8054\u590d\u5236\u652f\u6301\u3002</p> <p>\u5f53\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u65f6\uff0crepmgr\u4fdd\u6301\u7ea7\u8054\u5173\u7cfb\u4e0d\u53d8\u3002</p> <p>\u5728\u4e0a\u6e38\u8282\u70b9\u53d1\u751f\u6545\u969c\u65f6\u4e0b\u6e38\u8282\u70b9\u81ea\u52a8\u91cd\u65b0\u5c1d\u8bd5\u8fde\u63a5\u539f\u4e0a\u6e38\u8282\u70b9\u7684\u7236\u8282\u70b9\u3002</p>"},{"location":"postgres/repmgrd/#_8","title":"\u4e3b\u8282\u70b9\u68c0\u6d4b\u4ece\u5e93\u8fde\u63a5","text":"<p>\u4ee5\u4e0a\u7684\u8003\u8651\u60c5\u5f62\u5927\u591a\u662f\u901a\u8fc7\u4ece\u8282\u70b9\u68c0\u6d4b\u4e3b\u8282\u70b9\u7684\u8fd0\u884c\u60c5\u51b5\u6765\u51b3\u5b9a\u662f\u5426\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u3002\u5728repmgr\u4e2d\u4e3b\u8282\u70b9\u4e5f\u53ef\u4ee5\u68c0\u6d4b\u5230\u4ece\u8282\u70b9\u7684\u8fde\u63a5\u60c5\u51b5\u3002</p> <p>\u901a\u8fc7\u4e3b\u673a\u70b9\u4e0d\u65ad\u7684\u68c0\u6d4b\u4ece\u8282\u70b9\u7684\u8fde\u63a5\u60c5\u51b5\uff0c\u5f53\u6ee1\u8db3\u67d0\u4e9b\u72b6\u51b5\u65f6\u53ef\u4ee5\u6267\u884c\u81ea\u5b9a\u4e49\u811a\u672c\u3002\u5982\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u540e\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u4e3b\u670d\u52a1\u65f6\uff0c\u5176\u4ed6\u7684\u4ece\u8282\u70b9\u4e5f\u90fd\u8ddf\u7740\u6307\u5411\u4e86\u65b0\u4e3b\u8282\u70b9\uff0c\u539f\u4e3b\u8282\u70b9\u7684\u4ece\u8282\u70b9\u4e2a\u6570\u53d8\u4e3a\u96f6\u3002\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4e00\u4e2a\u7279\u6b8a\u7684\u547d\u4ee4\u6765\u963b\u6b62\u5e94\u7528\u5199\u5165\u539f\u4e3b\u8282\u70b9\u3002</p>"},{"location":"postgres/repmgrd/#_9","title":"\u68c0\u6d4b\u8fc7\u7a0b\u548c\u6807\u51c6","text":"<ul> <li>\u95f4\u9694\u65f6\u95f4<code>child_nodes_check_interval</code> \u9ed8\u8ba45\u79d2\u67e5\u8be2\u4e00\u6b21pg_stat_replication \u89c6\u56fe\uff0c\u5e76\u4e0e\u6ce8\u518crepmgr\u65f6\u6307\u5b9aupstream node\u4e3a\u4e3b\u53ca\u8282\u70b9\u7684\u5217\u8868\u8fdb\u884c\u5bf9\u6bd4</li> <li>\u5982\u679c\u68c0\u6d4b\u5230\u4ece\u8282\u70b9\u4e0d\u5728pg_stat_replication \u89c6\u56fe\u4e2d\u3002\u8bb0\u5f55\u68c0\u6d4b\u5230\u7684\u65f6\u95f4\u5e76\u89e6\u53d1   <code>child_node_disconnect</code> \u4e8b\u4ef6</li> <li>\u5982\u679c\u4ece\u8282\u70b9\u91cd\u65b0\u51fa\u73b0\u5728pg_stat_repliation\u89c6\u56fe\u4e2d\uff0c\u6e05\u9664\u4e0a\u9762\u7684\u68c0\u6d4b\u65f6\u95f4\u8bb0\u5f55\uff0c\u5e76\u89e6\u53d1  <code>child_node_reconnect</code>\u4e8b\u4ef6</li> <li>\u5982\u679c\u68c0\u6d4b\u5230\u4e00\u4e2a\u65b0\u7684\u4ece\u8282\u70b9\u52a0\u5165\uff0c\u5c06\u65b0\u8282\u70b9\u52a0\u5165\u5230\u5185\u90e8\u5217\u8868\u4e2d\u5e76\u89e6\u53d1<code>child_node_new_connect</code> \u4e8b\u4ef6</li> <li>\u5982\u679c\u5728repmgr.conf\u4e2d\u914d\u7f6e\u4e86\u53c2\u6570<code>child_nodes_disconnect_command</code>\uff0crepmgrd\u4f1a\u5faa\u73af\u68c0\u6d4b\u6240\u6709\u8282\u70b9\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u8fde\u63a5\u7684\u4ece\u8282\u70b9\u6570\u5c0f\u4e8e<code>child_nodes_connected_min_count</code> \uff08\u9ed8\u8ba4\u96f6\uff09\u5e76\u4e14\u8d85\u8fc7<code>child_nodes_disconnect_timeout</code>\uff08\u9ed8\u8ba430s\uff09\u6240\u6307\u5b9a\u7684\u65f6\u95f4\u65f6\uff0c\u89e6\u53d1          <code>child_nodes_disconnect_command</code> \u4e8b\u4ef6</li> <li>\u6ce8\u610f\u4e8b\u9879\uff0c\u5728 repmgrd \u542f\u52a8\u65f6\u6ca1\u6709\u8fde\u63a5\u7684\u5b50\u8282\u70b9\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e22\u5931\u7684\uff0c\u56e0\u4e3a repmgrd \u65e0\u6cd5\u77e5\u9053\u5b83\u4eec\u4e3a\u4ec0\u4e48\u6ca1\u6709\u88ab\u8fde\u63a5\u3002</li> </ul>"},{"location":"postgres/repmgrd/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p>\u5b50\u8282\u70b9\u914d\u7f6e\u4e3a\u5f52\u6863\u590d\u5236\u65f6</p> </li> <li> <p>\u5b50\u8282\u70b9\u7684primary_conninfo\u4fe1\u606f\u4e2d\u7684application_name\u4e0e\u8282\u70b9\u7684 repmgr.conf\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u8282\u70b9\u540d\u79f0\u76f8\u540c\u3002\u6b64\u5916\uff0c\u8fd9\u4e2aapplication_name\u5728\u6574\u4e2a\u590d\u5236\u96c6\u7fa4\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u5982\u679c\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684application_name\uff0c\u6216\u8005application_name\u5728\u6574\u4e2a\u590d\u5236\u96c6\u7fa4\u4e2d\u4e0d\u662f\u552f\u4e00\u7684\uff0crepmgr\u5c06\u65e0\u6cd5\u53ef\u9760\u5730\u76d1\u63a7\u5b50\u8282\u70b9\u7684\u8fde\u63a5\u3002</p> </li> </ul>"},{"location":"postgres/repmgrd/#_11","title":"\u914d\u7f6e\u53c2\u6570","text":"<ul> <li>child_nodes_check_interval  \u68c0\u6d4b\u95f4\u9694\u65f6\u95f4 \u9ed8\u8ba4\u503c5s</li> <li>child_nodes_disconnect_command \u81ea\u5b9a\u4e49\u811a\u672c</li> <li>child_nodes_disconnect_timeout  \u8d85\u65f6\u65f6\u95f4 \u9ed8\u8ba4\u503c30s</li> <li>child_nodes_connected_min_count  \u5b58\u6d3b\u4ece\u5e93\u7684\u6700\u5c0f\u503c\u3002\u5f53\u68c0\u6d4b\u5230\u5b58\u6d3b\u7684\u4ece\u8282\u70b9\u6570\u5c0f\u4e8e\u8be5\u503c\u65f6\uff0c\u89e6\u53d1child_nodes_disconnect_command \u4e8b\u4ef6\u3002</li> <li>child_nodes_disconnect_min_count \u4e22\u5931\u8282\u70b9\u7684\u6700\u5c0f\u503c\uff0c\u5f53\u4e22\u5931\u7684\u8282\u70b9\u6570\u5927\u4e8e\u8be5\u503c\u65f6\u89e6\u53d1child_nodes_disconnect_command \u4e8b\u4ef6\u3002</li> </ul> <p>\u6ce8\u610fchild_nodes_connected_min_count \u503c\u4f1a\u8986\u76d6child_nodes_disconnect_min_count\u3002\u5f53\u8fd9\u4e24\u4e2a\u53c2\u6570\u90fd\u672a\u8bbe\u7f6e\u65f6\u3002\u68c0\u6d4b\u5230\u4ece\u8282\u70b9\u5b58\u5728\u4e2a\u6570\u4e3a\u96f6\u65f6\u89e6\u53d1child_nodes_disconnect_command \u4e8b\u4ef6\u3002</p>"},{"location":"postgres/repmgrd/#_12","title":"\u4e8b\u4ef6\u7c7b\u578b","text":"<ul> <li>child_node_disconnect</li> <li>child_node_reconnect</li> <li>child_node_new_connect</li> <li>child_nodes_disconnect_command</li> </ul>"},{"location":"postgres/repmgrd/#_13","title":"\u67e5\u770b\u4e8b\u4ef6","text":"<pre><code>repmgr cluster event --event=xxxxx (\u4e8b\u4ef6\u7c7b\u578b)\n</code></pre>"},{"location":"postgres/repmgrd/#repmgrd_2","title":"repmgrd \u914d\u7f6e","text":"<p>Postgresql \u914d\u7f6e postgressql.conf  \u9700\u8981\u91cd\u542f\u670d\u52a1</p> <pre><code>shared_preload_libraries = 'repmgr'\n</code></pre> <ul> <li> <p>monitor_interval_secs \u68c0\u6d4b\u4e0a\u6e38\u8282\u70b9\u65f6\u95f4\u95f4\u9694 \u9ed8\u8ba42\u79d2</p> </li> <li> <p>connection_check_type \u68c0\u6d4b\u7c7b\u578b PQping (default)\u3001connection\u3001query</p> </li> <li> <p>reconnect_attempts \u91cd\u8fde\u5c1d\u8bd5\u6b21\u6570 \u9ed8\u8ba46\u6b21</p> </li> <li> <p>reconnect_interval \u91cd\u8fde\u5c1d\u8bd5\u95f4\u9694\u65f6\u95f4</p> </li> <li> <p>degraded_monitoring_timeout \u9ed8\u8ba4-1 \u7981\u6b62\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0crepmgrd\u5c06\u65e0\u9650\u671f\u5730\u7ee7\u7eed\u5904\u4e8e\u964d\u7ea7\u76d1\u89c6\u6a21\u5f0f\u3002\u8bbe\u7f6e\u8be5\u53c2\u6570\u8d85\u65f6\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u4e4b\u540erepmgrd\u5c06\u7ec8\u6b62\u3002</p> </li> </ul>"},{"location":"postgres/repmgrd/#_14","title":"\u5fc5\u987b\u8bbe\u7f6e\u7684\u53c2\u6570","text":"<ul> <li><code>failover</code>      =automatic</li> <li><code>promote_command</code>   =/'usr/bin/repmgr standby promote -f /etc/repmgr.conf --log-to-file'</li> <li><code>follow_command</code>=  '/usr/bin/repmgr standby follow -f /etc/repmgr.conf --log-to-file --upstream-node-id=%n'</li> </ul>"},{"location":"postgres/repmgrd/#_15","title":"\u53ef\u9009\u53c2\u6570","text":"<pre><code>priority\nfailover_validation_command\nprimary_visibility_consensus\nalways_promote\nstandby_disconnect_on_failover\nelection_rerun_interval\nsibling_nodes_disconnect_timeout\n</code></pre>"},{"location":"postgres/repmgrd/#_16","title":"\u5176\u4ed6\u53c2\u6570","text":"<p>\u9664\u4e86\u4ee5\u4e0a\u914d\u7f6e\uff0cconninfo \u4e5f\u4f1a\u5f71\u54cd repmgr \u5982\u4f55\u4e0e PostgreSQL \u8fdb\u884c\u7f51\u7edc\u8fde\u63a5\uff0c\u5982\u53c2\u6570connect_timeout\u3002\u540c\u65f6\u4e5f\u53d7\u5230\u7cfb\u7edf\u7f51\u7edc\u8bbe\u7f6e  <code>tcp_syn_retries</code>\u5c06\u5f71\u54cd\u3002</p>"},{"location":"postgres/repmgrd/#_17","title":"\u65e5\u5fd7\u81ea\u52a8\u5207\u5272","text":"<pre><code>  /var/log/repmgr/repmgrd.log {\n        missingok\n        compress\n        rotate 52\n        maxsize 100M\n        weekly\n        create 0600 postgres postgres\n        postrotate\n            /usr/bin/killall -HUP repmgrd\n        endscript\n    }\n</code></pre>"},{"location":"postgres/repmgrd/#repmgrd_3","title":"repmgrd \u64cd\u4f5c","text":""},{"location":"postgres/repmgrd/#repmgrd_4","title":"repmgrd \u7ef4\u62a4\u6a21\u5f0f","text":"<p>\u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f\u540e\uff0c\u5c06\u4e0d\u4f1a\u53d1\u751f\u81ea\u52a8\u6545\u969c\u8f6c\u79fb\u3002</p> <pre><code># \u7ef4\u62a4\u6a21\u5f0f\nrepmgr -f /etc/repmgr.conf service pause\n# \u89e3\u9664\u7ef4\u62a4\u6a21\u5f0f\nrepmgr -f /etc/repmgr.conf service unpause\n# \u67e5\u770b\u5f53\u524d\u6a21\u5f0f\nrepmgr -f /etc/repmgr.conf service status\n</code></pre> <p>\u6ce8\u610f: \u7ef4\u62a4\u6a21\u5f0f\u7684\u72b6\u6001\u4e0d\u4f1a\u56e0\u4e3a\u91cd\u542frepmgrd\u6216Postgresql\u670d\u52a1\u800c\u6539\u53d8\u3002</p> <p>\u5f53\u8fdb\u884cPostgresql \u7248\u672c\u5347\u7ea7\u65f6\uff0c\u8981\u5b8c\u5168\u5173\u95edrepmgrd \u670d\u52a1\u3002\u5e76\u4e14\u5b89\u88c5\u4e0e\u6570\u636e\u5e93\u5bf9\u5e94\u7684\u65b0\u7248\u672crepmgr\u3002</p> <p>\u624b\u52a8\u6545\u969c\u8f6c\u79fb<code>repmgr standby switchover</code> \u4f1a\u81ea\u52a8\u8fdb\u884c pause/unpause \u72b6\u6001\u5207\u6362\u3002</p> <p>\u5f53Postgresql\u6570\u636e\u5e93\u901a\u8fc7<code>pg_wal_replay_pause</code>\u5904\u4e8e\u6682\u505cwal\u65e5\u5fd7\u56de\u653e\u72b6\u6001\u65f6\uff0c\u6545\u969c\u8f6c\u79fb\u4f1a\u81ea\u52a8\u6062\u590dwal\u56de\u653e\u3002</p> <p>\u6ce8\u610f\u6267\u884crepmgr_standby_promote \u5c06\u88ab\u62d2\u7edd\uff0c\u76f4\u5230\u7ba1\u7406\u5458wal resumed\u6062\u590d\u56de\u653e\u3002</p>"},{"location":"postgres/repmgrd/#_18","title":"\u964d\u7ea7\u6a21\u5f0f","text":"<p>\u5f53\u9047\u5230\u67d0\u4e9b\u60c5\u51b5\u65f6\u5c06\u8fdb\u5165 \"\u964d\u7ea7\u76d1\u63a7 \"\u6a21\u5f0f\uff0c\u5373 repmgrd \u4ecd\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u4f46\u5728\u7b49\u5f85\u60c5\u51b5\u7684\u89e3\u51b3\u3002</p> <p>\u60c5\u51b5\u5305\u62ec: \u5f53\u53d1\u751f\u6545\u969c\u65f6</p> <ul> <li>\u4e0e\u4e3b\u8282\u70b9\u4f4d\u4e8e\u540c\u4e00\u4e2a\u6570\u636e\u4e2d\u7684\u7684\u5176\u4ed6\u8282\u70b9\u90fd\u4e0d\u53ef\u89c1\u3002\u6839\u636elocation\u53c2\u6570</li> <li>\u6ca1\u6709\u53ef\u4ee5\u63d0\u5347\u4e3a\u4e3b\u8282\u70b9\u7684\u5019\u9009\u8282\u70b9</li> <li>\u5019\u9009\u8282\u70b9\u4e0d\u80fd\u88ab\u63d0\u5347\u4e3b\u8282\u70b9</li> <li>\u8282\u70b9\u4e0d\u80fd\u4f5c\u4e3a\u65b0\u4e3b\u8282\u70b9\u7684\u4ece\u8282\u70b9</li> <li>\u8282\u70b9\u6ca1\u6709\u8bbe\u7f6e\u81ea\u52a8\u6545\u969c\u8f6c\u79fb</li> <li>\u4e3b\u8282\u70b9\u6545\u969c\uff0c\u4f46\u662f\u6ca1\u5176\u4ed6\u8282\u70b9\u88ab\u63d0\u5347\u4e3a\u4e3b\u8282\u70b9</li> </ul> <p>\u9ed8\u8ba4\u60c5\u51b5\uff0c\u964d\u7ea7\u6a21\u5f0f\u5c06\u4e00\u81f4\u6301\u7eed\u4e0b\u53bb\u3002\u4f46\u5982\u679c\u8bbe\u7f6e\u4e86degraded_monitoring_timeout\u53c2\u6570\uff0c\u8d85\u8fc7\u6307\u5b9a\u503c\uff0crepmgrd\u5c06\u505c\u6b62\u8fd0\u884c\u3002</p>"},{"location":"postgres/repmgrd/#_19","title":"\u76d1\u63a7\u6570\u636e\u5b58\u50a8","text":"<p>\u5f53\u53c2\u6570monitoring_history=true\u65f6\uff0c\u76d1\u63a7\u8bb0\u5f55\u6570\u636e\u5c06\u4f1a\u4e0d\u65ad\u7684\u5199\u5165\u5230<code>repmgr.monitoring_history</code>\u8868\u4e2d\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4<code>repmgr cluster cleanup -k/ --keep-history</code> (\u9009\u62e9\u9700\u8981\u4fdd\u7559\u8bb0\u5f55\u5929\u6570) \u5b9a\u671f\u6e05\u7406\u6570\u636e\u3002</p> <p>\u8fd9\u4e9b\u6570\u636e\u4e5f\u4f1a\u590d\u5236\u5230\u4ece\u8282\u70b9\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e<code>ALTER TABLE repmgr.monitoring_history SET UNLOGGED;</code> \u4f7f\u6570\u636e\u4e0d\u590d\u5236\u5230\u4ece\u8282\u70b9\u3002</p>"},{"location":"postgres/repmgrd/#_20","title":"\u9009\u4e3e\u6d41\u7a0b\u7b80\u4ecb","text":"<p>\u6e90\u7801\u4f4d\u7f6e <code>repmgrd-physical.c</code></p> <p>\u5f53primary \u8282\u70b9\u88ab\u68c0\u6d4b\u5230\u53d1\u751f\u6545\u969c\uff0c\u8fdb\u5165\u9009\u4e3e\u9636\u6bb5\u65f6\u7684\u5927\u6982\u6d41\u7a0b\u3002</p> <pre><code>/*\n * Failover decision for nodes attached to the current primary.\n *\n * NB: this function sets \"sibling_nodes\"; caller (do_primary_failover)\n * expects to be able to read this list\n */\n# \u9009\u4e3e\u6d41\u7a0b Postgresql \u652f\u6301\u7ea7\u8054\u590d\u5236\u3002\u65b0\u7684\u4e3b\u8282\u70b9\u53ea\u80fd\u5728\u4e00\u7ea7\u5b50\u8282\u70b9\u4e2d\u4ea7\u751f\u3002\n#  sibling_nodes \u5144\u5f1f\u8282\u70b9\nstatic ElectionResult\ndo_election(NodeInfoList *sibling_nodes, int *new_primary_id)\n{\n    int         electoral_term = -1;\n    #\n    NodeInfoListCell *cell = NULL;\n# \n    t_node_info *candidate_node = NULL;\n# \u9009\u4e3e\u72b6\u6001\n    election_stats stats;\n\n    ReplInfo    local_replication_info;\n\n    /* To collate details of nodes with primary visible for logging purposes */\n    PQExpBufferData nodes_with_primary_visible;\n\n    /*\n     * Check if at least one server in the primary's location is visible; if\n     * not we'll assume a network split between this node and the primary\n     * location, and not promote any standby.\n     *\n     * NOTE: this function is only ever called by standbys attached to the\n     * current (unreachable) primary, so \"upstream_node_info\" will always\n     * contain the primary node record.\n     */\n    # \u6839\u636e\u662f\u5426\u5b58\u5728\u4e0e\u6545\u969c\u8282\u70b9\u4f4d\u7f6e\u76f8\u540c\u7684\u53ef\u89c1\u8282\u70b9\u3002\u5982\u679c\u90fd\u4e3a\u4e0d\u53ef\u89c1\u72b6\u6001\uff0c\u5219\u8ba4\u4e3a\u662f\u7f51\u7edc\u95ee\u9898\u3002PS: \u6bcf\u4e2a\u8282\u70b9\u53ef\u914d\u7f6elocation \u53c2\u6570\u6307\u5b9a\u6240\u5728\u7684\u7269\u7406\u4f4d\u7f6e\u3002\u5982\u591a\u6570\u636e\u4e2d\u5fc3\u573a\u666f\n    bool        primary_location_seen = false;\n\n    int         nodes_with_primary_still_visible = 0;\n\n    if (config_file_options.failover_delay &gt; 0)\n    {\n        log_debug(\"sleeping %i seconds (\\\"failover_delay\\\") before initiating failover\",\n                  config_file_options.failover_delay);\n        sleep(config_file_options.failover_delay);\n    }\n\n    /* we're visible */ \n    #\u53ef\u89c1\u8282\u70b9\u6570\n    stats.visible_nodes = 1;\n    #\u4e0e\u5f53\u524dnode\u4e3a\u76f8\u540c\u4e0a\u6e38\u7684\u8282\u70b9\u6570 shared_upstream_nodes = sibling_nodes + 1(\u5f53\u524d\u8282\u70b9)\n    stats.shared_upstream_nodes = 0;\n    # \u96c6\u7fa4\u4e2d\u6240\u6709\u8282\u70b9\u6570\n    stats.all_nodes = 0;\n    # SELECT term FROM repmgr.voting_term; \u521d\u59cb\u503c\u4e3a1 , \u6267\u884crepmgr standby promote\u52a0\u4e00\n    electoral_term = get_current_term(local_conn);\n\n    if (electoral_term == -1)\n    {\n        log_error(_(\"unable to determine electoral term\"));\n\n        return ELECTION_NOT_CANDIDATE;\n    }\n\n    log_debug(\"do_election(): electoral term is %i\", electoral_term);\n   # \u5982\u679crepmgr.conf\u4e2dfailover\u53c2\u6570\u8bbe\u7f6e\u4e3amanual ,\u8be5\u8282\u70b9\u4e0d\u53c2\u4e0e\u9009\u4e3e\n    if (config_file_options.failover == FAILOVER_MANUAL)\n    {\n        log_notice(_(\"this node is not configured for automatic failover so will not be considered as promotion candidate, and will not follow the new primary\"));\n        log_detail(_(\"\\\"failover\\\" is set to \\\"manual\\\" in repmgr.conf\"));\n        log_hint(_(\"manually execute \\\"repmgr standby follow\\\" to have this node follow the new primary\"));\n\n        return ELECTION_NOT_CANDIDATE;\n    }\n#\u5982\u679c\u8bbe\u7f6epriority\u4e3a0 \uff0c\u8be5\u8282\u70b9\u4e0d\u53c2\u4e0e\u9009\u4e3e \u3002\u89c1\u8bc1\u8282\u70b9\u7684priority=0\u3002 \u53ca\u89c1\u8bc1\u8282\u70b9\u5230\u8fd9\u91cc\u5df2\u7ecf\u51fa\u5c40\n    /* node priority is set to zero - don't become a candidate, and lose by default */\n    if (local_node_info.priority &lt;= 0)\n    {\n        log_notice(_(\"this node's priority is %i so will not be considered as an automatic promotion candidate\"),\n                   local_node_info.priority);\n\n        return ELECTION_LOST;\n    }\n    #\u8be5\u65b9\u6cd5 SQL \u67e5\u8be2 \u89c6\u56ferepmgr.nodes ,\u83b7\u53d6\u5144\u5f1f\u8282\u70b9\u3002\u4f55\u4e3a\u5144\u5f1f\uff0c\u4e0e\u5f53\u524d\u8282\u70b9\u4e0a\u6e38\u8282\u70b9\u76f8\u540c\u7684\u8282\u70b9\uff0c\u4e0d\u5305\u62ec\u81ea\u8eab\u3002\n    # \u6ce8\u610f\u4e00\u70b9\u3002 \u89c1\u8bc1\u8282\u70b9\u7684\u4e5f\u7b97\u5728\u5144\u5f1f\u8282\u70b9\u4e2d\u3002\u56e0\u4e3a\u5728nodes\u8868\u4e2d\u4ed6\u4eec\u7684upstream_node_id \u76f8\u540c \n    # SELECT REPMGR_NODES_COLUMNS FROM repmgr.nodes n  WHERE n.upstream_node_id = %i  AND n.node_id != %i    AND n.active IS TRUE ORDER BY n.node_id  \n    /* get all active nodes attached to upstream, excluding self */\n    get_active_sibling_node_records(local_conn,\n                                    local_node_info.node_id,\n                                    upstream_node_info.node_id,\n                                    sibling_nodes);\n\n    log_info(_(\"%i active sibling nodes registered\"), sibling_nodes-&gt;node_count);\n\n    stats.shared_upstream_nodes = sibling_nodes-&gt;node_count + 1;\n    #\u83b7\u53d6\u96c6\u7fa4\u4e2d\u6240\u6709\u8282\u70b9\u6570\u91cf SELECT count(*) FROM repmgr.nodes n \n    get_all_nodes_count(local_conn, &amp;stats.all_nodes);\n\n    log_info(_(\"%i total nodes registered\"), stats.all_nodes);\n    #\u5224\u65ad\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u4f4d\u7f6e\u662f\u5426\u4e0e \u4e0a\u6e38\u8282\u70b9\uff08\u4e3b\u8282\u70b9\uff09\u4f4d\u7f6e\u76f8\u540c\n    if (strncmp(upstream_node_info.location, local_node_info.location, MAXLEN) != 0)\n    {\n        log_info(_(\"primary node \\\"%s\\\" (ID: %i) has location \\\"%s\\\", this node's location is \\\"%s\\\"\"),\n                 upstream_node_info.node_name,\n                 upstream_node_info.node_id,\n                 upstream_node_info.location,\n                 local_node_info.location);\n    }\n    else \n    {\n        log_info(_(\"primary node  \\\"%s\\\" (ID: %i) and this node have the same location (\\\"%s\\\")\"),\n                 upstream_node_info.node_name,\n                 upstream_node_info.node_id,\n                 local_node_info.location);\n    }\n\n    local_node_info.last_wal_receive_lsn = InvalidXLogRecPtr;\n    # \u6ca1\u6709\u5144\u5f1f\u8282\u70b9\uff0c\u6ca1\u6709\u89c1\u8bc1\u8282\u70b9\uff0c\u72ec\u751f\u5b50\u3002\u5982\u679c\u4e0e\u4e3b\u8282\u70b9\u4f4d\u7f6e\u76f8\u540c\u76f4\u63a5\u7ee7\u627f\u738b\u4f4d\uff0c\u6c5f\u6e56\u4e2d\u7684\u6253\u6253\u6740\u6740\u5728\u8fd9\u91cc\u4e0d\u5b58\u5728\u3002\n    /* fast path if no other standbys (or witness) exists - normally win by default */\n    if (sibling_nodes-&gt;node_count == 0)\n    {   # \u6bd4\u8f83\u4e0a\u6e38\u8282\u70b9\uff08\u539f\u4e3b\u8282\u70b9\uff09\u4e0e\u5f53\u524d\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u76f8\u540c\n        if (strncmp(upstream_node_info.location, local_node_info.location, MAXLEN) == 0)\n        {# \u5347\u7ea7\u4e3a\u4e3b\u670d\u52a1\u524d\u7684\u914d\u7f6e\u7684\u9a8c\u8bc1\u811a\u672c\uff0c\u662f\u5426\u8fd4\u56de\u503c\u4e3a0\n            if (config_file_options.failover_validation_command[0] != '\\0')\n            { \n                return execute_failover_validation_command(&amp;local_node_info, &amp;stats);\n            }\n\n            log_info(_(\"no other sibling nodes - we win by default\"));\n          # \u80dc\u51fa\uff0c\u65b0\u738b\u8bde\u751f\u3002\n            return ELECTION_WON;\n        }\n        else\n        {\n            /*\n             * If primary and standby have different locations set, the assumption\n             * is that no action should be taken as we can't tell whether there's\n             * been a network interruption or not.\n             *\n             * Normally a situation with primary and standby in different physical\n             * locations would be handled by leaving the location as \"default\" and\n             * setting up a witness server in the primary's location.\n             */\n            log_debug(\"no other nodes, but primary and standby locations differ\");\n           # \u867d\u7136\u53ea\u6709\u4e00\u4e2a\u4ece\u8282\u70b9\uff0c\u4f46\u662f\u4e0e\u4e3b\u8282\u70b9\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u4e0d\u80fd\u8fdb\u884c\u5347\u7ea7\u3002\u96c6\u7fa4\u8fdb\u884c\u964d\u7ea7\u5904\u7406\u3002\u5f88\u9057\u61be\u3002\n           # \u76f8\u5f53\u4e8e \u4e3b\u8282\u70b9\u76f8\u540c\u4f4d\u7f6e\u7684\u8282\u70b9\u90fd\u4e0d\u53ef\u89c1\u3002\u88ab\u8ba4\u4e3a\u7f51\u7edc\u5206\u533a\u6545\u969c\u3002\n            monitoring_state = MS_DEGRADED;\n            INSTR_TIME_SET_CURRENT(degraded_monitoring_start);\n\n            return ELECTION_NOT_CANDIDATE;\n        }\n    }\n    # \u5f53\u6709\u591a\u4e2a\u5144\u5f1f\u7684\u65f6\u5019\n    else \n    {\n        /* standby nodes found - check if we're in the primary location before checking theirs */ # \u5f53\u524d\u8282\u70b9\u662f\u5426\u4e0e\u4e3b\u8282\u70b9\u4f4d\u7f6e\u76f8\u540c\n        if (strncmp(upstream_node_info.location, local_node_info.location, MAXLEN) == 0)\n        {   # \u5b58\u5728\u4e0e\u4e3b\u8282\u70b9\u4f4d\u7f6e\u76f8\u540c\u7684\u76f4\u63a5\u4ece\u8282\u70b9\n            primary_location_seen = true;\n        }\n    }\n\n    /* get our lsn */ # \n    if (get_replication_info(local_conn, STANDBY, &amp;local_replication_info) == false)\n    {\n        log_error(_(\"unable to retrieve replication information for local node\"));\n        return ELECTION_LOST;\n    }\n     # wal \u56de\u653e\u72b6\u6001\u4e3a paused \uff0c\u5c1d\u8bd5\u6062\u590dwal\u56de\u653e\u72b6\u6001 , resume\u5931\u8d25 \u5f53\u524d\u8282\u70b9\u4e0d\u53c2\u4e0e\u9009\u4e3e\n    /* check if WAL replay on local node is paused */\n    if (local_replication_info.wal_replay_paused == true)\n    {\n        log_debug(\"WAL replay is paused\");\n        if (local_replication_info.last_wal_receive_lsn &gt; local_replication_info.last_wal_replay_lsn)\n        {\n            log_warning(_(\"WAL replay on this node is paused and WAL is pending replay\"));\n            log_detail(_(\"replay paused at %X/%X; last WAL received is %X/%X\"),\n                       format_lsn(local_replication_info.last_wal_replay_lsn),\n                       format_lsn(local_replication_info.last_wal_receive_lsn));\n        }\n        # \u5c1d\u8bd5\u6062\u590dwal\u72b6\u6001\n        /* attempt to resume WAL replay - unlikely this will fail, but just in case */\n        if (resume_wal_replay(local_conn) == false)\n        {\n            log_error(_(\"unable to resume WAL replay\"));\n            log_detail(_(\"this node cannot be reliably promoted\"));\n            # resume \u5931\u8d25\uff0c\u8be5\u8282\u70b9\u4e0d\u53c2\u4e0e\u9009\u4e3e\n            return ELECTION_LOST;\n        }\n\n        log_notice(_(\"WAL replay forcibly resumed\"));\n    }\n\n    local_node_info.last_wal_receive_lsn = local_replication_info.last_wal_receive_lsn;\n\n    log_info(_(\"local node's last receive lsn: %X/%X\"), format_lsn(local_node_info.last_wal_receive_lsn));\n\n    /* pointer to \"winning\" node, initially self */\n    candidate_node = &amp;local_node_info;\n\n    initPQExpBuffer(&amp;nodes_with_primary_visible);\n   # \u4f17\u5019\u9009\u8282\u70b9\u8fdb\u5165\u9009\u4e3e\u4f1a\u573a\uff0c\u5f00\u59cb\u53ae\u6740\u3002\n    for (cell = sibling_nodes-&gt;head; cell; cell = cell-&gt;next)\n    {\n        ReplInfo    sibling_replication_info;\n\n        log_info(_(\"checking state of sibling node \\\"%s\\\" (ID: %i)\"),\n                 cell-&gt;node_info-&gt;node_name,\n                 cell-&gt;node_info-&gt;node_id);\n\n        /* assume the worst case */\n        cell-&gt;node_info-&gt;node_status = NODE_STATUS_UNKNOWN;\n\n        cell-&gt;node_info-&gt;conn = establish_db_connection(cell-&gt;node_info-&gt;conninfo, false);\n\n        if (PQstatus(cell-&gt;node_info-&gt;conn) != CONNECTION_OK)\n        {\n            close_connection(&amp;cell-&gt;node_info-&gt;conn);\n\n            continue;\n        }\n\n        cell-&gt;node_info-&gt;node_status = NODE_STATUS_UP;\n\n        stats.visible_nodes++;\n\n        /*\n         * see if the node is in the primary's location (but skip the check if\n         * we've seen a node there already)\n         */\n        if (primary_location_seen == false)\n        {\n            if (strncmp(cell-&gt;node_info-&gt;location, upstream_node_info.location, MAXLEN) == 0)\n            {\n                log_debug(\"node %i in primary location \\\"%s\\\"\",\n                          cell-&gt;node_info-&gt;node_id,\n                          cell-&gt;node_info-&gt;location);\n                primary_location_seen = true;\n            }\n        }\n\n        /*\n         * check if repmgrd running - skip if not\n         *\n         * TODO: include pid query in replication info query?\n         *\n         * NOTE: from Pg12 we could execute \"pg_promote()\" from a running repmgrd;\n         * here we'll need to find a way of ensuring only one repmgrd does this\n         */\n        if (repmgrd_get_pid(cell-&gt;node_info-&gt;conn) == UNKNOWN_PID)\n        {\n            log_warning(_(\"repmgrd not running on node \\\"%s\\\" (ID: %i), skipping\"),\n                        cell-&gt;node_info-&gt;node_name,\n                        cell-&gt;node_info-&gt;node_id);\n            continue;\n        }\n\n        if (get_replication_info(cell-&gt;node_info-&gt;conn, cell-&gt;node_info-&gt;type, &amp;sibling_replication_info) == false)\n        {\n            log_warning(_(\"unable to retrieve replication information for node \\\"%s\\\" (ID: %i), skipping\"),\n                        cell-&gt;node_info-&gt;node_name,\n                        cell-&gt;node_info-&gt;node_id);\n            continue;\n        }\n\n        /*\n         * Check if node is not in recovery - it may have been promoted\n         * outside of the failover mechanism, in which case we may be able\n         * to follow it.\n         */\n\n        # \u6709\u5144\u5f1f\u8282\u70b9\u88ab\u624b\u52a8\u63d0\u5347\u4e3a\u4e3b\u8282\u70b9\n        if (sibling_replication_info.in_recovery == false &amp;&amp; cell-&gt;node_info-&gt;type != WITNESS)\n        {\n            bool can_follow;\n\n            log_warning(_(\"node \\\"%s\\\" (ID: %i) is not in recovery\"),\n                        cell-&gt;node_info-&gt;node_name,\n                        cell-&gt;node_info-&gt;node_id);\n\n            /*\n             * Node is not in recovery, but still reporting an upstream\n             * node ID; possible it was promoted manually (e.g. with \"pg_ctl promote\"),\n             * or (less likely) the node's repmgrd has just switched to primary\n             * monitoring node but has not yet unset the upstream node ID in\n             * shared memory. Either way, log this.\n             */\n            if (sibling_replication_info.upstream_node_id != UNKNOWN_NODE_ID)\n            {\n                log_warning(_(\"node \\\"%s\\\" (ID: %i) still reports its upstream is node %i, last seen %i second(s) ago\"),\n                            cell-&gt;node_info-&gt;node_name,\n                            cell-&gt;node_info-&gt;node_id,\n                            sibling_replication_info.upstream_node_id,\n                            sibling_replication_info.upstream_last_seen);\n            }\n            #\u68c0\u9a8c\u5f53\u524d\u8282\u70b9\u662f\u5426\u80fdfollow \u88ab\u63d0\u5347\u7684\u5144\u5f1f\u8282\u70b9\n            can_follow = check_node_can_follow(local_conn,\n                                               local_node_info.last_wal_receive_lsn,\n                                               cell-&gt;node_info-&gt;conn,\n                                               cell-&gt;node_info);\n            # \u5728\u9009\u4e3e\u7ed3\u679c\u524d\u6709\u8282\u70b9\u624b\u52a8\u63d0\u5347\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\u3002\u5e76\u4e14\u5f53\u524d\u8282\u70b9\u53ef\u4ee5follower\u3002\u5f53\u524d\u8282\u70b9\u4e0d\u5728\u53c2\u4e0e\u9009\u4e3e\n            if (can_follow == true)\n            {\n                *new_primary_id = cell-&gt;node_info-&gt;node_id;\n                termPQExpBuffer(&amp;nodes_with_primary_visible);\n                return ELECTION_CANCELLED;\n            }\n            # \u5982\u679c\u4e0d\u80fdfollower\u4e3b\u8282\u70b9\u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u5f88\u68d8\u624b\u3002\n            /*\n             * Tricky situation here - we'll assume the node is a rogue primary\n             */\n            log_warning(_(\"not possible to attach to node \\\"%s\\\" (ID: %i), ignoring\"),\n                        cell-&gt;node_info-&gt;node_name,\n                        cell-&gt;node_info-&gt;node_id);\n            continue;\n        }\n        else\n        {\n            log_info(_(\"node \\\"%s\\\" (ID: %i) reports its upstream is node %i, last seen %i second(s) ago\"),\n                     cell-&gt;node_info-&gt;node_name,\n                     cell-&gt;node_info-&gt;node_id,\n                     sibling_replication_info.upstream_node_id,\n                     sibling_replication_info.upstream_last_seen);\n        }\n\n        /* check if WAL replay on node is paused */\n        if (sibling_replication_info.wal_replay_paused == true)\n        {\n            /*\n             * Theoretically the repmgrd on the node should have resumed WAL play\n             * at this point.\n             */\n            if (sibling_replication_info.last_wal_receive_lsn &gt; sibling_replication_info.last_wal_replay_lsn)\n            {\n                log_warning(_(\"WAL replay on node \\\"%s\\\" (ID: %i) is paused and WAL is pending replay\"),\n                            cell-&gt;node_info-&gt;node_name,\n                            cell-&gt;node_info-&gt;node_id);\n            }\n        }\n\n        /*\n         * Check if node has seen primary \"recently\" - if so, we may have \"partial primary visibility\".\n         * For now we'll assume the primary is visible if it's been seen less than\n         * monitor_interval_secs * 2 seconds ago. We may need to adjust this, and/or make the value\n         * configurable.\n         */\n\n        if (sibling_replication_info.upstream_last_seen &gt;= 0 &amp;&amp; sibling_replication_info.upstream_last_seen &lt; (config_file_options.monitor_interval_secs * 2))\n        {\n            if (sibling_replication_info.upstream_node_id != upstream_node_info.node_id)\n            {\n                log_warning(_(\"assumed sibling node \\\"%s\\\" (ID: %i) monitoring different upstream node %i\"),\n                            cell-&gt;node_info-&gt;node_name,\n                            cell-&gt;node_info-&gt;node_id,\n                            sibling_replication_info.upstream_node_id);\n\n            }\n            else\n            {\n                nodes_with_primary_still_visible++;\n                log_notice(_(\"%s node \\\"%s\\\" (ID: %i) last saw primary node %i second(s) ago, considering primary still visible\"),\n                           get_node_type_string(cell-&gt;node_info-&gt;type),\n                           cell-&gt;node_info-&gt;node_name,\n                           cell-&gt;node_info-&gt;node_id,\n                           sibling_replication_info.upstream_last_seen);\n                appendPQExpBuffer(&amp;nodes_with_primary_visible,\n                                  \" - node \\\"%s\\\" (ID: %i): %i second(s) ago\\n\",\n                                  cell-&gt;node_info-&gt;node_name,\n                                  cell-&gt;node_info-&gt;node_id,\n                                  sibling_replication_info.upstream_last_seen);\n            }\n        }\n        else\n        {\n            log_info(_(\"%s node \\\"%s\\\" (ID: %i) last saw primary node %i second(s) ago\"),\n                     get_node_type_string(cell-&gt;node_info-&gt;type),\n                     cell-&gt;node_info-&gt;node_name,\n                     cell-&gt;node_info-&gt;node_id,\n                     sibling_replication_info.upstream_last_seen);\n        }\n\n        # \u89c1\u8bc1\u8282\u70b9\u4e0d\u53c2\u4e0e\u9009\u4e3e\n        /* don't interrogate a witness server */\n        if (cell-&gt;node_info-&gt;type == WITNESS)\n        {\n            log_debug(\"node %i is witness, not querying state\", cell-&gt;node_info-&gt;node_id);\n            continue;\n        }\n        # priority=0 \u7684\u8282\u70b9\u4e0d\u53c2\u4e0e\u9009\u4e3e\n        /* don't check 0-priority nodes */\n        if (cell-&gt;node_info-&gt;priority &lt;= 0)\n        {\n            log_info(_(\"node \\\"%s\\\" (ID: %i) has priority of %i, skipping\"),\n                       cell-&gt;node_info-&gt;node_name,\n                       cell-&gt;node_info-&gt;node_id,\n                       cell-&gt;node_info-&gt;priority);\n            continue;\n        }\n\n\n        /* get node's last receive LSN - if \"higher\" than current winner, current node is candidate */\n        cell-&gt;node_info-&gt;last_wal_receive_lsn = sibling_replication_info.last_wal_receive_lsn;\n\n        log_info(_(\"last receive LSN for sibling node \\\"%s\\\" (ID: %i) is: %X/%X\"),\n                 cell-&gt;node_info-&gt;node_name,\n                 cell-&gt;node_info-&gt;node_id,\n                 format_lsn(cell-&gt;node_info-&gt;last_wal_receive_lsn));\n\n        /* compare LSN */ # \u6bd4\u8f83LSN\n        if (cell-&gt;node_info-&gt;last_wal_receive_lsn &gt; candidate_node-&gt;last_wal_receive_lsn)\n        {\n            /* other node is ahead */\n            log_info(_(\"node \\\"%s\\\" (ID: %i) is ahead of current candidate \\\"%s\\\" (ID: %i)\"),\n                     cell-&gt;node_info-&gt;node_name,\n                     cell-&gt;node_info-&gt;node_id,\n                     candidate_node-&gt;node_name,\n                     candidate_node-&gt;node_id);\n\n            candidate_node = cell-&gt;node_info;\n        }\n        # LSN \u76f8\u540c\u6bd4\u8f83 priority,priority\u4e5f\u76f8\u540c\u7136\u540e\u6bd4\u8f83 node_id\n        /* LSN is same - tiebreak on priority, then node_id */\n        #LSN \u5bf9\u6bd4\n        else if (cell-&gt;node_info-&gt;last_wal_receive_lsn == candidate_node-&gt;last_wal_receive_lsn)\n        {\n            log_info(_(\"node \\\"%s\\\" (ID: %i) has same LSN as current candidate \\\"%s\\\" (ID: %i)\"),\n                     cell-&gt;node_info-&gt;node_name,\n                     cell-&gt;node_info-&gt;node_id,\n                     candidate_node-&gt;node_name,\n                     candidate_node-&gt;node_id);\n            #priority \u5bf9\u6bd4\n            if (cell-&gt;node_info-&gt;priority &gt; candidate_node-&gt;priority)\n            {\n                log_info(_(\"node \\\"%s\\\" (ID: %i) has higher priority (%i) than current candidate \\\"%s\\\" (ID: %i) (%i)\"),\n                         cell-&gt;node_info-&gt;node_name,\n                         cell-&gt;node_info-&gt;node_id,\n                         cell-&gt;node_info-&gt;priority,\n                         candidate_node-&gt;node_name,\n                         candidate_node-&gt;node_id,\n                         candidate_node-&gt;priority);\n\n                candidate_node = cell-&gt;node_info;\n            }\n            else if (cell-&gt;node_info-&gt;priority == candidate_node-&gt;priority)\n            {\n                if (cell-&gt;node_info-&gt;node_id &lt; candidate_node-&gt;node_id)\n                {\n                    log_info(_(\"node \\\"%s\\\" (ID: %i) has same priority but lower node_id than current candidate \\\"%s\\\" (ID: %i)\"),\n                             cell-&gt;node_info-&gt;node_name,\n                             cell-&gt;node_info-&gt;node_id,\n                             candidate_node-&gt;node_name,\n                             candidate_node-&gt;node_id);\n\n                    candidate_node = cell-&gt;node_info;\n                }\n            }\n            else\n            {\n                log_info(_(\"node \\\"%s\\\" (ID: %i) has lower priority (%i) than current candidate \\\"%s\\\" (ID: %i) (%i)\"),\n                         cell-&gt;node_info-&gt;node_name,\n                         cell-&gt;node_info-&gt;node_id,\n                         cell-&gt;node_info-&gt;priority,\n                         candidate_node-&gt;node_name,\n                         candidate_node-&gt;node_id,\n                         candidate_node-&gt;priority);\n            }\n        }\n    }\n    # \u7f51\u7edc\u5206\u533a\uff0c\u964d\u7ea7\u3002\n    if (primary_location_seen == false)\n    {\n        log_notice(_(\"no nodes from the primary location \\\"%s\\\" visible - assuming network split\"),\n                   upstream_node_info.location);\n        log_detail(_(\"node will enter degraded monitoring state waiting for reconnect\"));\n\n        monitoring_state = MS_DEGRADED;\n        INSTR_TIME_SET_CURRENT(degraded_monitoring_start);\n\n        reset_node_voting_status();\n\n        termPQExpBuffer(&amp;nodes_with_primary_visible);\n\n        return ELECTION_CANCELLED;\n    }\n    # \u4e3b\u8282\u70b9\u4ecd\u53ef\u89c1\n    if (nodes_with_primary_still_visible &gt; 0)\n    {\n        log_info(_(\"%i nodes can see the primary\"),\n                   nodes_with_primary_still_visible);\n\n        log_detail(_(\"following nodes can see the primary:\\n%s\"),\n                   nodes_with_primary_visible.data);\n        #\u4e3b\u8282\u70b9\u53ef\u89c1\u6027\u5171\u8bc6\n        if (config_file_options.primary_visibility_consensus == true)\n        {\n            log_notice(_(\"cancelling failover as some nodes can still see the primary\"));\n            monitoring_state = MS_DEGRADED;\n            INSTR_TIME_SET_CURRENT(degraded_monitoring_start);\n\n            reset_node_voting_status();\n\n            termPQExpBuffer(&amp;nodes_with_primary_visible);\n\n            return ELECTION_CANCELLED;\n        }\n    }\n\n    termPQExpBuffer(&amp;nodes_with_primary_visible);\n\n    log_info(_(\"visible nodes: %i; total nodes: %i; no nodes have seen the primary within the last %i seconds\"),\n             stats.visible_nodes,\n             stats.shared_upstream_nodes,\n             (config_file_options.monitor_interval_secs * 2));\n    # \u540c\u7ea7\u8282\u70b9\u4e2d\u5927\u90e8\u5206\u4e0d\u53ef\u89c1\uff0c\u4e0d\u53c2\u4e0e\u9009\u4e3e\n    if (stats.visible_nodes &lt;= (stats.shared_upstream_nodes / 2.0))\n    {\n        log_notice(_(\"unable to reach a qualified majority of nodes\"));\n        log_detail(_(\"node will enter degraded monitoring state waiting for reconnect\"));\n\n        monitoring_state = MS_DEGRADED;\n        INSTR_TIME_SET_CURRENT(degraded_monitoring_start);\n\n        reset_node_voting_status();\n\n        return ELECTION_CANCELLED;\n    }\n\n    log_notice(_(\"promotion candidate is \\\"%s\\\" (ID: %i)\"),\n               candidate_node-&gt;node_name,\n               candidate_node-&gt;node_id);\n   # \u65b0\u9009\u51fa\u7684\u8282\u70b9\u4e3a\u5f53\u524d\u8282\u70b9\n    if (candidate_node-&gt;node_id == local_node_info.node_id)\n    {\n        /*\n         * If \"failover_validation_command\" is set, execute that command\n         * and decide the result based on the command's output\n         */\n      # \u9a8c\u8bc1failover_validation_command \u811a\u672c\u7684\u6267\u884c\n        if (config_file_options.failover_validation_command[0] != '\\0')\n        {\n            return execute_failover_validation_command(candidate_node, &amp;stats);\n        }\n        # \u5f53\u524d\u8282\u70b9\u5ba3\u5e03\u80dc\u51fa\uff0c\u4e3a\u4e3b\u8282\u70b9\n        return ELECTION_WON;\n    }\n\n    return ELECTION_LOST;\n}if (primary_location_seen == false)\n    {\n        log_notice(_(\"no nodes from the primary location \\\"%s\\\" visible - assuming network split\"),\n                   upstream_node_info.location);\n        log_detail(_(\"node will enter degraded monitoring state waiting for reconnect\"));\n\n        monitoring_state = MS_DEGRADED;\n        INSTR_TIME_SET_CURRENT(degraded_monitoring_start);\n\n        reset_node_voting_status();\n\n        termPQExpBuffer(&amp;nodes_with_primary_visible);\n\n        return ELECTION_CANCELLED;\n    }\n\n    if (nodes_with_primary_still_visible &gt; 0)\n    {\n        log_info(_(\"%i nodes can see the primary\"),\n                   nodes_with_primary_still_visible);\n\n        log_detail(_(\"following nodes can see the primary:\\n%s\"),\n                   nodes_with_primary_visible.data);\n\n        if (config_file_options.primary_visibility_consensus == true)\n        {\n            log_notice(_(\"cancelling failover as some nodes can still see the primary\"));\n            monitoring_state = MS_DEGRADED;\n            INSTR_TIME_SET_CURRENT(degraded_monitoring_start);\n\n            reset_node_voting_status();\n\n            termPQExpBuffer(&amp;nodes_with_primary_visible);\n\n            return ELECTION_CANCELLED;\n        }\n    }\n</code></pre>"},{"location":"postgres/repmgrd/#_21","title":"\u603b\u7ed3","text":"<p><code>\u9009\u4e3e\u7ed3\u679c\u72b6\u6001</code></p> <pre><code>ELECTION_NOT_CANDIDAT\nELECTION_WON\nELECTION_LOST\nELECTION_CANCELLED\nELECTION_RERUN\n</code></pre> <p>\u6839\u636elocation \u6216 winess\u8282\u70b9\u51b3\u5b9a\u96c6\u7fa4\u662f\u5426\u5904\u4e8e\u7f51\u7edc\u5206\u533a\u72b6\u6001\uff0c\u8fdb\u5165\u9009\u4e3e\u6216\u964d\u7ea7\u6a21\u5f0f\u3002</p> <p>\u5f53\u53ea\u6709\u4e00\u4e2a\u4e00\u7ea7\u4ece\u8282\u70b9</p> <ul> <li>\u4ece\u8282\u70b9\u539f\u4e3b\u8282\u70b9\u4f4d\u7f6e\u76f8\u540c\u76f4\u63a5\u9009\u4e3e\u6210\u529f\u3002</li> <li>\u4ece\u8282\u70b9\u4e0e\u539f\u4e3b\u8282\u70b9\u4f4d\u7f6e\u4e0d\u540c\u4e14\u6ca1\u6709\u89c1\u8bc1\u8282\u70b9\u5219\u964d\u7ea7\u3002</li> </ul> <p>\u4e0d\u53c2\u4e0e\u9009\u4e3e\u7684\u8282\u70b9</p> <ul> <li>Priority=0</li> <li>repmgr.conf\u4e2dfailover\u53c2\u6570\u8bbe\u7f6e\u4e3amanual</li> <li>wal \u5904\u4e8e pause \u72b6\u6001\u5c06\u88abresume\u3002\u4f46resume\u5931\u8d25</li> </ul> <p>Repmgr\u9009\u4e3e\u5019\u9009\u5907\u8282\u70b9\u4f1a\u4ee5\u4ee5\u4e0b\u987a\u5e8f\u9009\u4e3e\uff1aLSN-&gt; Priority-&gt; Node_ID\u3002</p>"},{"location":"postgres/repmgrd/#_22","title":"\u6d41\u7a0b\u56fe","text":""},{"location":"postgres/repmgrd/#_23","title":"\u529f\u80fd\u589e\u5f3a","text":"<p>\u5982\u4f55\u5c06repmgrd\u771f\u6b63\u6295\u5165\u5230\u751f\u4ea7\u4e2d\uff0c\u771f\u6b63\u7684\u843d\u5730\u3002\u9762\u5bf9\u67d0\u4e9bCASES\u65f6\u4ecd\u80fd\u6ee1\u8db3HA\u8981\u6c42</p>"},{"location":"postgres/repmgrd/#virtual-ip","title":"Virtual IP","text":"<ul> <li>\u6ce8\u518c\u4e3b\u8282\u70b9\u65f6\uff0c\u7ed1\u5b9avip</li> <li>Failover &amp; Switchover\u65f6 \u5229\u7528failover_validation_command\u4e8b\u4ef6\u91cd\u65b0\u7ed1\u5b9avip </li> <li>\u6574\u4e2a\u96c6\u7fa4\u91cd\u542f\u65f6\uff0c\u8bc6\u522b\u51fa\u4e3b\u8282\u70b9\u7ed1\u5b9avip</li> </ul>"},{"location":"postgres/repmgrd/#_24","title":"\u4e3b\u8282\u70b9\u5f02\u5e38\u540e\u6062\u590d\u5904\u7406","text":"<ul> <li>\u4e3b\u8282\u70b9\u7f51\u7edc\u95ee\u9898\uff0c\u5982\u7f51\u7edc\u9632\u706b\u5899\u7b49\u539f\u56e0\u3002Postgresql\u670d\u52a1\u4ecd\u5728\u8fd0\u884c\uff0c\u5e76\u53ef\u5199\u3002</li> </ul> <pre><code>\u8bbe\u7f6e\u53c2\u6570 child_nodes_connected_min_count\n\u89e6\u53d1\u4e8b\u4ef6 child_nodes_disconnect_command \u4e2d\u5b9a\u4e49\u56de\u8c03\u65b9\u6cd5\u5c06\u4e3b\u8282\u70b9\u964d\u7ea7\u4e3a\u53ea\u8bfb\uff0c\u6216\u5173\u95ed\u3002\n</code></pre> <ul> <li>\u5f02\u5e38\u6062\u590d\u65f6\uff0c\u7f51\u7edc\u91cd\u65b0\u6062\u590d\u8fde\u63a5\u3002</li> </ul> <p>\u627e\u51fa\u96c6\u7fa4\u6545\u969c\u8f6c\u79fb\u540e\u65b0\u4e3b\u8282\u70b9\uff0c \u65b9\u6cd5 libpq \u4e2d\u53ef\u5199\u591a\u4e2ahosts\u3002</p> <p>pg_rewind \u5bf9\u9f50\u65f6\u95f4\u7ebf</p> <p>rejoin \u65b0\u96c6\u7fa4</p> <ul> <li> <p>\u65ad\u7535 \uff0c\u4e0d\u80fd\u505a\u4efb\u4f55\u5904\u7406</p> </li> <li> <p>\u7535\u529b\u6062\u590d\u3002\u670d\u52a1\u91cd\u542f\uff0c\u68c0\u6d4b\u4ece\u5e93\u6570\u91cf\u5982\u679c\u4e3a0 \u6682\u65f6\u4e0d\u63d0\u4f9b\u670d\u52a1\u3002\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4 stop service -&gt; rejoin\u96c6\u7fa4</p> </li> </ul>"},{"location":"postgres/repmgrd/#_25","title":"\u4ece\u8282\u70b9\u6545\u969c\u53ca\u6062\u590d","text":"<ul> <li>\u5f53\u4ece\u8282\u70b9\u53d1\u751f\u6545\u969c\u65f6\u4e0d\u4f1a\u5f15\u8d77\u6545\u969c\u8f6c\u79fb\u3002\u5f53\u9700\u8981\u6ce8\u610f\u5f53\u4ece\u8282\u70b9\u6545\u969c\u6062\u590d\u540ewal\u65e5\u5fd7\u4f1a\u843d\u540e\u4e0e\u4e3b\u5e93\u3002</li> </ul>"},{"location":"postgres/repmgrd/#_26","title":"\u5bf9\u5916\u670d\u52a1\u7ba1\u7406","text":"<p>\u5e94\u7528\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u76f4\u63a5\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u6bd4\u5982\u901a\u8fc7dns\uff0chaproxy\u7b49\u4e2d\u95f4\u7ba1\u7406\u670d\u52a1\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u548c\u89e3\u8026\u3002</p> <p>\u5728\u6570\u636e\u5e93\u53d1\u751f\u6545\u969c\u8f6c\u79fb\u65f6\uff0c\u5bf9\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u5c3d\u91cf\u505a\u5230\u4e0d\u9700\u53d8\u5316\uff0c\u65e0\u611f\u3002</p> <p>\u65b0\u589e\u4e00\u4e2a\u72ec\u7acb\u4e0e\u73b0\u6709\u670d\u52a1\u4e4b\u5916\u7684\u670d\u52a1\u3002</p>"},{"location":"postgres/repmgrd/#_27","title":"\u4e3b\u8981\u529f\u80fd","text":"<p>\u63d0\u4f9b\u4e00\u4e2a\u4e03\u5c42http\u8bf7\u6c42, \u5305\u62ec\u8bbf\u95ee\u6743\u9650\u9a8c\u8bc1</p> <p><code>\u8fd4\u56de\u503c</code>: \u670d\u52a1\u5df2\u7ecf\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4 ps:\u4e0a\u5c42\u8d1f\u8f7d\u5747\u8861\u7528\u6237\u53ef\u53c2\u8003\u8be5\u503c\u8fdb\u884c\u6743\u9650\u5206\u914d\u3002\u5982\u8282\u70b9\u521a\u63a5\u5165\u96c6\u7fa4\u7f13\u5b58\u6570\u636e\u5c1a\u672a\u51c6\u5907\u5145\u5206\uff0c\u5efa\u8bae\u4e1a\u52a1\u6d41\u91cf\u9010\u6b65\u63a5\u5165\u3002</p> <p><code>\u8fd4\u56de\u7801</code>: 200 , \u5176\u4ed6</p> <p><code>\u4e3b\u5e93</code>  \u8bbf\u95ee\u5730\u5740 ip:port/master ?xxx</p> <p>\u200b      \u5982\u8fd4\u56de\u7801\u4e3a200\uff0c\u5f53\u524d\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\u5e76\u4e14\u670d\u52a1\u6b63\u5e38\u3002</p> <p>\u200b      \u5176\u4ed6\u8fd4\u56de\u7801,\u6682\u65f6\u4e0d\u80fd\u63d0\u4f9b\u5199\u670d\u52a1</p> <p>\u200b     \u4e3b\u8981\u5224\u65ad\u903b\u8f91: PG\u670d\u52a1\u53ef\u8fde\u63a5\u6027\uff0c\u4e0b\u6e38\u8282\u70b9\u4e2a\u6570</p> <p><code>\u4ece\u5e93</code> \u8bbf\u95ee\u5730\u5740 ip:port/replocation ?xxx</p> <p>\u200b      \u4e3b\u8981\u5224\u65ad\u903b\u8f91: PG\u670d\u52a1\u53ef\u8fde\u63a5\u6027\uff0c\u843d\u540e\u4e3b\u8282\u70b9\u7684wal\u5dee\u503c</p>"},{"location":"postgres/repmgrd/#_28","title":"\u53ef\u89e3\u51b3\u7684\u95ee\u9898","text":"<ul> <li> <p>vip \u4e0d\u80fd\u8de8\u7f51\u6bb5\u7ba1\u7406</p> </li> <li> <p>\u5728Postgresql\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u65f6\u8fdb\u884c\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u9700\u6c42\uff0c\u505c\u6b62\u5bf9\u5e94\u7528\u63d0\u4f9b\u670d\u52a1\uff0c\u5f85\u6062\u590d\u540e\u5728\u63d0\u4f9b\u670d\u52a1</p> </li> </ul>"},{"location":"postgres/repmgrd/#_29","title":"\u6545\u969c\u5207\u6362\u65f6\u95f4\u9884\u4f30","text":"<p>switchover &amp; failover: \u6545\u969c\u53d1\u751f\u540e\u68c0\u6d4b\u5207\u6362\u7684\u603b\u65f6\u95f4\u9884\u4f30</p> <p>\u4e3b\u8981\u53c2\u8003\u56e0\u7d20:</p> <ul> <li> <p>monitor_interval_secs \u68c0\u6d4b\u4e0a\u6e38\u8282\u70b9\u65f6\u95f4\u95f4\u9694 \u9ed8\u8ba42\u79d2</p> </li> <li> <p>connection_check_type \u68c0\u6d4b\u7c7b\u578b \u6bcf\u6b21\u68c0\u6d4b\u7684timeout</p> </li> <li> <p>reconnect_attempts \u91cd\u8fde\u5c1d\u8bd5\u6b21\u6570 \u9ed8\u8ba46\u6b21</p> </li> <li> <p>reconnect_interval \u91cd\u8fde\u5c1d\u8bd5\u95f4\u9694\u65f6\u95f4</p> </li> </ul>"},{"location":"postgres/repmgrd/#_30","title":"\u53ea\u6709\u4e24\u4e2a\u8282\u70b9","text":"<p>\u4e3b\u8981\u9762\u4e34\u95ee\u9898: \u4e24\u4e2a\u8282\u70b9\u4e3b\u8981\u662f\u5f53\u53d1\u751f\u7f51\u7edc\u6545\u969c\u65f6\uff0c\u800c\u975epostgres\u6570\u636e\u5e93\u5e94\u7528\u95ee\u9898\u65f6\u3002\u4ece\u5e93\u65e0\u6cd5\u5224\u65ad\u662f\u7f51\u7edc\u8fd8\u662f\u4e3b\u5e93\u53d1\u751f\u4e86\u6545\u969c\u3002\u89c1\u8bc1\u8282\u70b9\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u3002</p> <p>\u89e3\u51b3\u601d\u8def: \u6a21\u62df\u89c1\u8bc1\u8282\u70b9\u3002\u5728\u4ece\u5e93\u65e0\u6cd5\u4e0e\u4e3b\u5e93\u901a\u4fe1\u65f6\uff0cping \u4e00\u4e2a\u5176\u4ed6\u8282\u70b9\u3002\u6216ping \u7f51\u5173\u6216\u81ea\u5df1\u7684ip\u3002 \u5f53ping\u5931\u8d25\u65f6\u8ba4\u4e3a\u53d1\u751f\u4e86\u7f51\u7edc\u95ee\u9898\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0: \u914d\u7f6e <code>failover_validation_command</code></p> <p>\u200b   failover_validation_command.sh</p> <pre><code>#! bin/bash\nping -c 5 {{ inventory_hostname }}\nif [ $? -eq 0 ]; then\n    echo \"ping $ip  success!\"\n    return 0\nelse\n    echo \"ping  $ip fail!\"\n    return 1\nfi\n</code></pre>"},{"location":"postgres/role-manager/","title":"\u6743\u9650\u7ba1\u7406","text":""},{"location":"postgres/role-manager/#_1","title":"\u521b\u5efa\u7528\u6237","text":"<pre><code># user \u4e0e role \u533a\u522b \uff0c user \u5177\u6709login\u6743\u9650\npostgres=# create user tester with password '123456';\nCREATE ROLE\n</code></pre>"},{"location":"postgres/role-manager/#_2","title":"\u521b\u5efa\u6570\u636e\u5e93,\u5e76\u5173\u8054\u6240\u6709\u8005","text":"<pre><code>postgres=# create database test owner tester ;\nCREATE DATABASE\n</code></pre>"},{"location":"postgres/role-manager/#_3","title":"\u53d8\u66f4\u6570\u636e\u5e93\u7528\u6237\u6240\u6709\u8005","text":"<pre><code>postgres=# alter database test owner to tester;\nALTER DATABASE\n</code></pre>"},{"location":"postgres/role-manager/#_4","title":"\u4fee\u6539\u7528\u6237&amp;\u6570\u636e\u5e93","text":"<pre><code>#\u7528\u6237\u8fde\u63a5\u6570\npostgres=# alter user tester connection limit 100;\nALTER ROLE\n#\u6570\u636e\u5e93\u8fde\u63a5\u6570\npostgres=# alter database test connection limit 100;\nALTER DATABASE\n\n#\u7528\u6237\u5176\u4ed6\u5c5e\u6027\u4fee\u6539\npostgres=# alter user tester \nBYPASSRLS           CREATEDB            ENCRYPTED PASSWORD  LOGIN               NOCREATEDB          NOINHERIT           NOREPLICATION       PASSWORD            REPLICATION         SET                 VALID UNTIL         \nCONNECTION LIMIT    CREATEROLE          INHERIT             NOBYPASSRLS         NOCREATEROLE        NOLOGIN             NOSUPERUSER         RENAME TO           RESET               SUPERUSER           WITH \n\n#\u6570\u636e\u5e93\u5176\u4ed6\u5c5e\u6027\u4fee\u6539\npostgres=# alter database test \nALLOW_CONNECTIONS  CONNECTION LIMIT   IS_TEMPLATE        OWNER TO           RENAME TO          RESET              SET \n</code></pre>"},{"location":"postgres/role-manager/#sqltableviewowner","title":"sql\u6279\u91cf\u4fee\u6539table/view\u7684owner","text":"<pre><code>DO $$DECLARE r record;\nBEGIN\nFOR r IN SELECT tablename/viewname FROM pg_tables/pg_views WHERE schemaname = 'public'\nLOOP\n    EXECUTE 'alter table '|| r.tablename/r.viewname ||' owner to new_owner;';\nEND LOOP;\nEND$$;\n</code></pre> <pre><code>DO $$DECLARE r record;\nBEGIN\nFOR r IN SELECT \n  c.relname as Name \nFROM pg_catalog.pg_class c\n     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\nWHERE c.relkind IN ('r','p','v','m','S','f','')\n      AND n.nspname &lt;&gt; 'pg_catalog'\n      AND n.nspname &lt;&gt; 'information_schema'\n      AND n.nspname !~ '^pg_toast'\n  AND pg_catalog.pg_table_is_visible(c.oid) \n  AND  pg_catalog.pg_get_userbyid(c.relowner) = 'postgres'\n  and n.nspname = 'public'\nLOOP\nEXECUTE 'alter table '|| r.Name ||' owner to new_owner;';\nEND LOOP;\nEND$$;\n</code></pre>"},{"location":"postgres/role-manager/#_5","title":"\u67e5\u770b\u7528\u6237&amp;\u6570\u636e\u5e93","text":"<pre><code>#\u67e5\u770b\u6570\u636e\u5e93\npostgres=# \\l+ test \n                                         \u6570\u636e\u5e93\u5217\u8868\n \u540d\u79f0 | \u62e5\u6709\u8005 | \u5b57\u5143\u7f16\u7801 |  \u6821\u5bf9\u89c4\u5219   |    Ctype    | \u5b58\u53d6\u6743\u9650 | \u5927\u5c0f  |   \u8868\u7a7a\u95f4   | \u63cf\u8ff0 \n------+--------+----------+-------------+-------------+----------+-------+------------+------\n test | tester | UTF8     | en_US.UTF-8 | en_US.UTF-8 |          | 14 MB | pg_default | \n(1 \u884c\u8bb0\u5f55)\n\n#\u67e5\u770b\u8868\n\npostgres=# \\d+\n\n#\u67e5\u770b\u7528\u6237\npostgres=# \\dg\n                                 \u89d2\u8272\u5217\u8868\n     \u89d2\u8272\u540d\u79f0     |                    \u5c5e\u6027                    | \u6210\u5458\u5c5e\u4e8e \n------------------+--------------------------------------------+----------\n postgres         | \u8d85\u7ea7\u7528\u6237, \u5efa\u7acb\u89d2\u8272, \u5efa\u7acb DB, \u590d\u5236, \u7ed5\u8fc7RLS | {}\n tester           | 10\u4e2a\u8fde\u63a5                                   | {}\n</code></pre>"},{"location":"postgres/role-manager/#_6","title":"\u6743\u9650\u5206\u914d","text":"<p>\u8bed\u6cd5</p> <p>grant \u6743\u9650 on \u6570\u636e\u5bf9\u8c61 to \u7528\u6237</p> <p>revoke \u6743\u9650 on \u6570\u636e\u5bf9\u8c61 from \u7528\u6237</p> <pre><code>grant SELECT on ALL tables in schema public TO dbuser;\n\nrevoke SELECT on ALL tables in schema public from dbuser;\n</code></pre> <p>\u66f4\u591a\u5185\u5bb9</p> <p>https://github.com/digoal/blog/blob/master/201605/20160510_01.md</p>"},{"location":"postgres/ssl/","title":"\u6570\u636e\u5e93 ssl\u8ba4\u8bc1","text":""},{"location":"postgres/ssl/#sslssl","title":"SSL\u53cc\u5411\u8ba4\u8bc1\u548cSSL\u5355\u5411\u8ba4\u8bc1\u7684\u533a\u522b","text":"<p>\u53cc\u5411\u8ba4\u8bc1 SSL \u534f\u8bae\u8981\u6c42\u670d\u52a1\u5668\u548c\u7528\u6237\u53cc\u65b9\u90fd\u6709\u8bc1\u4e66\u3002\u5355\u5411\u8ba4\u8bc1 SSL \u534f\u8bae\u4e0d\u9700\u8981\u5ba2\u6237\u62e5\u6709CA\u8bc1\u4e66\uff0c\u670d\u52a1\u5668\u7aef\u4e0d\u4f1a\u9a8c\u8bc1\u5ba2\u6237\u8bc1\u4e66\uff0c\u4ee5\u53ca\u5728\u534f\u5546\u5bf9\u79f0\u5bc6\u7801\u65b9\u6848\uff0c\u5bf9\u79f0\u901a\u8bdd\u5bc6\u94a5\u65f6\uff0c\u670d\u52a1\u5668\u53d1\u9001\u7ed9\u5ba2\u6237\u7684\u662f\u6ca1\u6709\u52a0\u8fc7\u5bc6\u7684(\u8fd9\u5e76\u4e0d\u5f71\u54cd SSL \u8fc7\u7a0b\u7684\u5b89\u5168\u6027)\u5bc6\u7801\u65b9\u6848\u3002</p> <p>\u8fd9\u6837\uff0c\u53cc\u65b9\u5177\u4f53\u7684\u901a\u8baf\u5185\u5bb9\uff0c\u90fd\u662f\u52a0\u8fc7\u5bc6\u7684\u6570\u636e\uff0c\u5982\u679c\u6709\u7b2c\u4e09\u65b9\u653b\u51fb\uff0c\u83b7\u5f97\u7684\u53ea\u662f\u52a0\u5bc6\u7684\u6570\u636e\uff0c\u7b2c\u4e09\u65b9\u8981\u83b7\u5f97\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5c31\u9700\u8981\u5bf9\u52a0\u5bc6\u7684\u6570\u636e\u8fdb\u884c\u89e3\u5bc6\uff0c\u8fd9\u65f6\u5019\u7684\u5b89\u5168\u5c31\u4f9d\u8d56\u4e8e\u5bc6\u7801\u65b9\u6848\u7684\u5b89\u5168\u3002</p> <p>\u800c\u5e78\u8fd0\u7684\u662f\uff0c\u76ee\u524d\u6240\u7528\u7684\u5bc6\u7801\u65b9\u6848\uff0c\u53ea\u8981\u901a\u8baf\u5bc6\u94a5\u957f\u5ea6\u8db3\u591f\u7684\u957f\uff0c\u5c31\u8db3\u591f\u7684\u5b89\u5168\u3002\u8fd9\u4e5f\u662f\u6211\u4eec\u5f3a\u8c03\u8981\u6c42\u4f7f\u7528128\u4f4d\u52a0\u5bc6\u901a\u8baf\u7684\u539f\u56e0\u3002</p> <p>\u4e00\u822cWeb\u5e94\u7528\u90fd\u662f\u91c7\u7528SSL\u5355\u5411\u8ba4\u8bc1\u7684\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u7528\u6237\u6570\u76ee\u5e7f\u6cdb\uff0c\u4e14\u65e0\u9700\u5728\u901a\u8baf\u5c42\u5bf9\u7528\u6237\u8eab\u4efd\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4e00\u822c\u90fd\u5728\u5e94\u7528\u903b\u8f91\u5c42\u6765\u4fdd\u8bc1\u7528\u6237\u7684\u5408\u6cd5\u767b\u5165\u3002\u4f46\u5982\u679c\u662f\u4f01\u4e1a\u5e94\u7528\u5bf9\u63a5\uff0c\u60c5\u51b5\u5c31\u4e0d\u4e00\u6837\uff0c\u53ef\u80fd\u4f1a\u8981\u6c42\u5bf9\u5ba2\u6237\u7aef(\u76f8\u5bf9\u800c\u8a00)\u505a\u8eab\u4efd\u9a8c\u8bc1\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u505aSSL\u53cc\u5411\u8ba4\u8bc1\u3002</p> <p>\u7531\u4e8e\u5355\u5411\u8ba4\u8bc1\u548c\u53cc\u5411\u8ba4\u8bc1\u7684\u533a\u522b\u4ec5\u5728\u4e8e\u521b\u5efa\u8fde\u63a5\u9636\u6bb5\uff0c\u6570\u636e\u7684\u4f20\u8f93\u5747\u4e3a\u52a0\u5bc6\u7684\uff0c\u56e0\u6b64\u5ba2\u6237\u7aef\u4e0ePG\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u91c7\u53d6SSL\u5355\u5411\u8ba4\u8bc1\u5373\u53ef\uff0c\u5373\u4ec5\u5728PG Server\u7aef\u914d\u7f6eSSL\u8bc1\u4e66\u3002</p>"},{"location":"postgres/ssl/#_1","title":"\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66","text":"<ul> <li>server.key \u2013 \u79c1\u94a5</li> <li>server.crt \u2013 \u670d\u52a1\u5668\u8bc1\u4e66</li> <li>root.crt \u2013 \u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66</li> </ul> <pre><code>\u521b\u5efa\u79c1\u94a5 \uff0c \u9700\u8981\u5bc6\u7801\uff0c\u968f\u610f\u8f93\u5165\nopenssl genrsa -des3 -out server.key 1024\n\n\u5220\u9664\u5bc6\u7801\nopenssl rsa -in server.key -out server.key\n\n\u4fee\u6539\u6743\u9650\nchmod 400 server.key\n</code></pre> <pre><code>\u521b\u5efa\u57fa\u4e8eserver.key\u6587\u4ef6\u7684\u670d\u52a1\u5668\u8bc1\u4e66 \u6709\u6548\u671f\u5341\u5e74\nopenssl req -new -key server.key -days 3650 -out server.crt -x509\n\n</code></pre> <pre><code>\u67e5\u770b\u8bc1\u4e66\nopenssl x509 -in server.crt -text -noout\n</code></pre> <pre><code>\u4e3a\u4e86\u5f97\u5230\u81ea\u5df1\u7b7e\u540d\u7684\u8bc1\u4e66\uff0c\u628a\u751f\u6210\u7684\u670d\u52a1\u5668\u8bc1\u4e66\u4f5c\u4e3a\u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66\uff0c\u53ea\u9700\u8981\u590d\u5236\u5e76\u53d6\u4e00\u4e2a\u5408\u9002\u7684\u540d\u5b57\n\ncp server.crt root.crt\n</code></pre>"},{"location":"postgres/ssl/#_2","title":"\u6570\u636e\u5e93\u914d\u7f6e","text":"<p>\u5c06\u4ee5\u4e0a\u751f\u6210\u7684\u8bc1\u4e66\u6587\u4ef6\u62f7\u8d1d\u5230\u6570\u636e\u5e93\u7684data\u76ee\u5f55\u4e0b</p> <p>\u4fee\u6539\u6240\u6709\u8005\u53ca\u8bbf\u95ee\u5c5e\u6027</p> <pre><code>chown postgres:postgres server.key\nchown postgres:postgres server.crt\nchown postgres:postgres root.crt\n\nchmod 400 server.key \nchmod 400 server.crt\nchmod 400 root.crt \n</code></pre> <p>\u4fee\u6539\u6570\u636e\u5e93\u914d\u7f6e postgresql.conf</p> <pre><code>ssl = on\nssl_ca_file = 'root.crt'\n</code></pre> <p>\u4fee\u6539 pg_hba.conf</p> <pre><code>host all all 0.0.0.0/0 md5\n\n# \"host\" is either a plain or SSL-encrypted TCP/IP socket,\n# \"hostssl\" is an SSL-encrypted TCP/IP socket, \n# and \"hostnossl\" is a plain TCP/IP socket.\n</code></pre> <p>\u53ef\u5bf9\u4e0d\u540c\u7684database \u5206\u522b\u8bbe\u7f6e</p> <p>\u91cd\u65b0\u52a0\u8f7d\u751f\u6548</p> <pre><code>systemctl reload postgresql-10\n</code></pre>"},{"location":"postgres/ssl/#pgbouncer","title":"pgbouncer \u914d\u7f6e","text":"<p>\u4fee\u6539\u8bbf\u95ee\u6743\u9650</p> <pre><code>chmod 644 server.key \nchmod 644 server.crt\nchmod 644 root.crt\n</code></pre> <p>\u4fee\u6539 pgbouncer </p> <pre><code>;;;\n;;; TLS settings for accepting clients\n;;;\n\n;; disable, allow, require, verify-ca, verify-full\nclient_tls_sslmode = require\n\n;; Path to file that contains trusted CA certs\nclient_tls_ca_file = /etc/pgbouncer/ssl/root.crt\n\n;; Private key and cert to present to clients.\n;; Required for accepting TLS connections from clients.\nclient_tls_key_file = /etc/pgbouncer/ssl/server.key\nclient_tls_cert_file = /etc/pgbouncer/ssl/server.crt\n</code></pre> <p>\u91cd\u65b0\u52a0\u8f7d\u751f\u6548</p> <pre><code>systemctl reload pgbouncer\n</code></pre>"},{"location":"postgres/ssl/#_3","title":"\u5ba2\u6237\u7aef\u8fde\u63a5","text":"<pre><code># psq -U postgres -p 5432 -h xxxx  \nSSL \u8fde\u63a5\uff08\u534f\u8bae\uff1aTLSv1.2\uff0c\u5bc6\u7801\uff1aECDHE-RSA-AES256-GCM-SHA384\uff0c\u5bc6\u94a5\u4f4d\uff1a256\uff0c\u538b\u7f29\uff1a\u5173\u95ed)\n\u8f93\u5165 \"help\" \u6765\u83b7\u53d6\u5e2e\u52a9\u4fe1\u606f.\n</code></pre>"},{"location":"postgres/stat/","title":"Postgresql\u6307\u6807\u67e5\u770b&stat\u7edf\u8ba1\u4fe1\u606f","text":"<ul> <li>\u5f53\u524d\u8fde\u63a5\u6570</li> </ul> <pre><code>SELECT count(*) FROM pg_stat_activity WHERE NOT pid=pg_backend_pid();\n count \n-------\n     3\n(1 row)\n\n</code></pre> <ul> <li>\u6570\u636e\u5e93\u5360\u7528\u7a7a\u95f4</li> </ul> <pre><code>select pg_size_pretty(pg_database_size('postgres'));\n pg_size_pretty \n----------------\n 14 MB\n(1 row)\n\nor\n\n\\l+\n\n</code></pre> <ul> <li>\u6570\u636e\u5e93\u8868(\u4e0d\u5305\u62ec\u7d22\u5f15)\u6216\u5355\u6761\u7d22\u5f15\u5360\u7528\u7a7a\u95f4</li> </ul> <pre><code>select pg_size_pretty(pg_relation_size('t_name'));\n pg_size_pretty \n----------------\n 24 kB\n(1 \u884c\u8bb0\u5f55)\n\nor\n\n\\d+\n</code></pre> <ul> <li>\u8868\u4e2d\u6240\u6709\u7d22\u5f15\u5360\u6709\u7684\u7a7a\u95f4</li> </ul> <pre><code>select pg_size_pretty(pg_indexes_size('t_name'));\n pg_size_pretty \n----------------\n 280 kB\n(1 \u884c\u8bb0\u5f55)\n</code></pre> <ul> <li>\u8868\u4e2d\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\u6392\u5e8f</li> </ul> <pre><code>select indexname ,  pg_size_pretty(pg_relation_size(indexname::regclass)) ,indexdef \nfrom pg_indexes where tablename = 't_name' \norder by pg_relation_size(indexname::regclass) desc limit 10;\n</code></pre> <ul> <li>\u8868\u548c\u7d22\u5f15\u5360\u7528\u603b\u7a7a\u95f4</li> </ul> <pre><code>select pg_size_pretty(pg_total_relation_size('t_name'));\n pg_size_pretty\n----------------\n 380 kB\n(1 \u884c\u8bb0\u5f55)\n</code></pre> <ul> <li>\u67e5\u770b\u4e00\u6761\u6570\u636e\u5728\u6570\u636e\u5e93\u5360\u7528\u7684\u7a7a\u95f4</li> </ul> <pre><code>select pg_column_size('Let us go !!!');\n pg_column_size \n----------------\n             14\n(1 \u884c\u8bb0\u5f55)\n\n</code></pre> <ul> <li>\u67e5\u51fa\u6240\u6709\u8868\uff08\u5305\u542b\u7d22\u5f15\uff09\u5e76\u6392\u5e8f</li> </ul> <pre><code>SELECT table_schema || '.' || table_name AS table_full_name, pg_size_pretty(pg_total_relation_size('\"' || table_schema || '\".\"' || table_name || '\"')) AS size\nFROM information_schema.tables\nORDER BY\npg_total_relation_size('\"' || table_schema || '\".\"' || table_name || '\"') DESC limit 10;\n</code></pre> <ul> <li>\u67e5\u51fa\u8868\u5927\u5c0f\u6309\u5927\u5c0f\u6392\u5e8f\u5e76\u5206\u79bbdata\u4e0eindex</li> </ul> <pre><code>SELECT\ntable_name,\npg_size_pretty(table_size) AS table_size,\npg_size_pretty(indexes_size) AS indexes_size,\npg_size_pretty(total_size) AS total_size\nFROM (\nSELECT\ntable_name,\npg_table_size(table_name) AS table_size,\npg_indexes_size(table_name) AS indexes_size,\npg_total_relation_size(table_name) AS total_size\nFROM (\nSELECT ('\"' || table_schema || '\".\"' || table_name || '\"') AS table_name\nFROM information_schema.tables\n) AS all_tables\nORDER BY total_size DESC\n) AS pretty_sizes;\n</code></pre> <ul> <li>\u5176\u4ed6</li> </ul> <pre><code>pg_stat_database\npg_stat_all_tables\npg_stat_sys_tables\npg_stat_user_tables\npg_stat_all_indexes\npg_stat_sys_indexes\npg_stat_user_indexes\n</code></pre> <pre><code>postgres=# select * from pg_stat_database where datname='postgres';\n-[ RECORD 1 ]-----+------------------------------\ndatid             | 13510                 #\u6570\u636e\u5e93oid\ndatname           | postgres              #\u6570\u636e\u5e93\u540d\nnumbackends       | 98                    #\u8bbf\u95ee\u5f53\u524d\u6570\u636e\u5e93\u8fde\u63a5\u6570\u91cf\nxact_commit       | 14291309              #\u8be5\u6570\u636e\u5e93\u4e8b\u52a1\u63d0\u4ea4\u603b\u91cf\nxact_rollback     | 0                     #\u8be5\u6570\u636e\u5e93\u4e8b\u52a1\u56de\u6eda\u603b\u91cf\nblks_read         | 536888                #\u603b\u78c1\u76d8\u7269\u7406\u8bfb\u7684\u5757\u6570\uff0c\u8fd9\u91ccread\u4e5f\u53ef\u80fd\u662f\u4ecepage cache\u8bfb\u53d6\uff0c\u5982\u679c\u8fd9\u91cc\u5f88\u9ad8\u9700\u8981\u7ed3\u5408blk_read_time\u770b\u662f\u5426\u771f\u7684\u5b58\u5728\u5f88\u591a\u5b9e\u9645\u4ece\u78c1\u76d8\u8bfb\u53d6\u7684\u60c5\u51b5\u3002\nblks_hit          | 261717850             #\u5728shared_buffer\u547d\u4e2d\u7684\u5757\u6570\ntup_returned      | 58521416              #\u5bf9\u4e8e\u8868\u6765\u8bf4\u662f\u5168\u8868\u626b\u63cf\u7684\u884c\u6570\uff0c\u5bf9\u4e8e\u7d22\u5f15\u662f\u901a\u8fc7\u7d22\u5f15\u65b9\u6cd5\u8fd4\u56de\u7684\u7d22\u5f15\u884c\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u6570\u91cf\u660e\u663e\u5927\u4e8etup_fetched\uff0c\u8bf4\u660e\u5f53\u524d\u6570\u636e\u5e93\u5b58\u5728\u5927\u91cf\u5168\u8868\u626b\u63cf\u7684\u60c5\u51b5\u3002\ntup_fetched       | 57193639              #\u6307\u901a\u8fc7\u7d22\u5f15\u8fd4\u56de\u7684\u884c\u6570\ntup_inserted      | 14293061              #\u63d2\u5165\u7684\u884c\u6570\ntup_updated       | 42868451              #\u66f4\u65b0\u7684\u884c\u6570\ntup_deleted       | 98                    #\u5220\u9664\u7684\u884c\u6570\nconflicts         | 0                     #\u4e0e\u6062\u590d\u51b2\u7a81\u53d6\u6d88\u7684\u67e5\u8be2\u6b21\u6570(\u53ea\u4f1a\u5728\u5907\u5e93\u4e0a\u53d1\u751f)\ntemp_files        | 0                     #\u4ea7\u751f\u4e34\u65f6\u6587\u4ef6\u7684\u6570\u91cf\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u5f88\u9ad8\u8bf4\u660ework_mem\u9700\u8981\u8c03\u5927\ntemp_bytes        | 0                     #\u4e34\u65f6\u6587\u4ef6\u7684\u5927\u5c0f\ndeadlocks         | 0                     #\u6b7b\u9501\u7684\u6570\u91cf\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u5f88\u5927\u8bf4\u660e\u4e1a\u52a1\u903b\u8f91\u6709\u95ee\u9898\nblk_read_time     | 0                     #\u6570\u636e\u5e93\u4e2d\u82b1\u8d39\u5728\u8bfb\u53d6\u6587\u4ef6\u7684\u65f6\u95f4\uff0c\u8fd9\u4e2a\u503c\u8f83\u9ad8\u8bf4\u660e\u5185\u5b58\u8f83\u5c0f\uff0c\u9700\u8981\u9891\u7e41\u7684\u4ece\u78c1\u76d8\u4e2d\u8bfb\u5165\u6570\u636e\u6587\u4ef6\nblk_write_time    | 0                     #\u6570\u636e\u5e93\u4e2d\u82b1\u8d39\u5728\u5199\u6570\u636e\u6587\u4ef6\u7684\u65f6\u95f4\uff0cpg\u4e2d\u810f\u9875\u4e00\u822c\u90fd\u5199\u5165page cache\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u8f83\u9ad8\uff0c\u8bf4\u660epage cache\u8f83\u5c0f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684page cache\u9700\u8981\u66f4\u79ef\u6781\u7684\u5199\u5165\u3002\nstats_reset       | 2019-04-09 14:06:53.416473+08 #\u7edf\u8ba1\u4fe1\u606f\u91cd\u7f6e\u7684\u65f6\u95f4\n</code></pre> <p>\u901a\u8fc7pg_stat_database\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u6982\u4e86\u89e3\u6570\u636e\u5e93\u7684\u5386\u53f2\u60c5\u51b5\uff0c\u6bd4\u5982\u770b\u5230tup_returned\u503c\u8fdc\u5927\u4e8etup_fetched\uff0c\u8bf4\u660e\u6570\u636e\u5e93\u5386\u53f2\u6267\u884c\u7684sql\u5f88\u591a\u90fd\u662f\u5168\u8868\u626b\u63cf\uff0c\u8bf4\u660e\u5b58\u5728\u5f88\u591a\u6ca1\u6709\u8d70\u7d22\u5f15\u7684sql\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u7ed3\u5408pg_stat_statments\u6765\u67e5\u627e\u6162sql\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7pg_stat_user_tables\u627e\u5230\u5168\u8868\u626b\u63cf\u6b21\u6570\u548c\u884c\u6570\u6700\u591a\u7684\u8868\u3002\u901a\u8fc7\u770b\u5230tup_updated\u5f88\u9ad8\u8bf4\u660e\u6570\u636e\u5e93\u6709\u5f88\u9891\u7e41\u7684\u66f4\u65b0\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5173\u6ce8\u4e00\u4e0bvacuum\u76f8\u5173\u7684\u6307\u6807\u548c\u957f\u4e8b\u52a1\uff0c\u5982\u679c\u6ca1\u6709\u53ca\u65f6\u8fdb\u884c\u5783\u573e\u56de\u6536\u4f1a\u9020\u6210\u6570\u636e\u81a8\u80c0\u7684\u6bd4\u8f83\u5389\u5bb3\u3002\u5982\u679ctemp_files\u8f83\u9ad8\u7684\u8bdd\u8bf4\u660e\u5b58\u5728\u5f88\u591a\u7684\u6392\u5e8f\uff0chash\uff0c\u6216\u8005\u805a\u5408\u8fd9\u79cd\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7\u589e\u5927work_mem\u51cf\u5c11\u4e34\u65f6\u6587\u4ef6\u7684\u4ea7\u751f\uff0c\u5e76\u4e14\u540c\u65f6\u8fd9\u4e9b\u64cd\u4f5c\u7684\u6027\u80fd\u4e5f\u4f1a\u6709\u8f83\u5927\u7684\u63d0\u5347\u3002</p> <p>https://yq.aliyun.com/articles/697692?spm=5176.10695662.1996646101.searchclickresult.28b6528caEAf7X</p>"},{"location":"postgres/tablespace/","title":"tablespace \u8868\u7a7a\u95f4","text":"<p>\u539f\u6587</p> <p>\u6ce8\u610f\u4e3b\u4ece\u67b6\u6784\u65f6\uff0c\u4e3b\u4ece\u8f6f\u8fde\u63a5\u4f4d\u7f6e\u9700\u8981\u5bf9\u5e94\u4e00\u81f4\u3002</p> <p>\u601d\u8003\uff1a \u51b7\u70ed\u6570\u636e\u5206\u79bb \u51b7\u6570\u636e\u5bf9\u70ed\u6570\u636e\u7684\u5f71\u54cd\uff0c\u5783\u573e\u56de\u6536\u673a\u5236\u3002</p>"},{"location":"postgres/template/","title":"\u6a21\u677f\u6570\u636e\u5e93","text":""},{"location":"postgres/template/#_1","title":"\u6a21\u677f\u6570\u636e\u5e93","text":"<p>\u6a21\u677f\u6570\u636e\u5e93\u5c31\u662f\u521b\u5efa\u65b0database\u65f6\uff0cPostgreSQL\u4f1a\u57fa\u4e8e\u6a21\u677f\u6570\u636e\u5e93\u5236\u4f5c\u4e00\u4efd\u526f\u672c\uff0c\u5176\u4e2d\u4f1a\u5305\u542b\u6240\u6709\u7684\u6570\u636e\u5e93\u8bbe\u7f6e\u548c\u6570\u636e\u6587\u4ef6\u3002 PostgreSQL\u5b89\u88c5\u597d\u4ee5\u540e\u4f1a\u9ed8\u8ba4\u9644\u5e26\u4e24\u4e2a\u6a21\u677f\u6570\u636e\u5e93\uff1atemplate0\u548ctemplate1\u3002</p> <ul> <li>template0 \u5e72\u51c0\u7248\uff0c\u4efb\u4f55\u65f6\u5019\u4e0d\u8981\u4fee\u6539</li> <li>template1 \u9ed8\u8ba4\u7248\uff0c\u5982\u679c\u521b\u5efa\u6570\u636e\u5e93\u65f6\u4e0d\u6307\u5b9a\u6a21\u677f\u5c06\u9ed8\u8ba4\u6a21\u677f\u6307\u5b9a\u4e3atemplate1</li> </ul>"},{"location":"postgres/template/#_2","title":"\u533a\u522b","text":"<ul> <li> <p>template1 \u53ef\u4ee5\u8fde\u63a5\u5e76\u521b\u5efa\u5bf9\u8c61\uff0ctemplate0 \u4e0d\u53ef\u4ee5\u8fde\u63a5</p> </li> <li> <p>\u4f7f\u7528 template1 \u6a21\u677f\u5e93\u5efa\u5e93\u65f6\u4e0d\u53ef\u6307\u5b9a\u65b0\u7684 encoding \u548c locale\uff0c\u800c template0 \u53ef\u4ee5</p> </li> </ul>"},{"location":"postgres/template/#_3","title":"\u4f7f\u7528","text":"<p>\u4f7f\u7528\u65b9\u6cd5\u3000</p> <pre><code>\n create database mytemplate template template1;\n\n create database mydatabase template mytemplate;\n\n</code></pre> <p>\u8bbe\u7f6e\u81ea\u5df1\u7684\u6a21\u677f\u3000mytemplate</p> <p>\u5728\u81ea\u5df1\u7684\u6a21\u677f\u4e2d\u9700\u6539\u4fe1\u606f\uff0c\u6bd4\u5982\u3000\u6dfb\u52a0\u5fc5\u5907\u7684\u6269\u5c55\uff0c\u7edf\u8ba1\u51fd\u6570\u5e93\u7b49\u3002</p> <p>\u5176\u4ed6\u6570\u636e\u5e93\u5728\u521b\u5efa\u65f6\u4f7f\u7528\u81ea\u5b9a\u7684\u6a21\u677f</p>"},{"location":"postgres/thinking_in_db_fd/","title":"\u6570\u636e\u5e93\u4f18\u5316\u601d\u8003 - \u7ed3\u6784\u8bbe\u8ba1","text":"","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#db-app","title":"DB \u4e0e APP \u7684\u4e0d\u540c","text":"","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_1","title":"\u6709\u65e0\u72b6\u6001","text":"<p>\u65e0\u72b6\u6001\u5e94\u7528\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u63d0\u4f9b\u7684\u670d\u52a1\u90fd\u662f\u7b49\u4ef7\u3001\u5bf9\u7b49\u7684\u3002APP \u5e94\u7528\u4e3a\u65e0\u72b6\u6001\u5e94\u7528\uff0cDB\u5e94\u7528\u4e3a\u6709\u72b6\u6001\u5e94\u7528\u3002</p> <p>\u6570\u636e\u5e93\u6b63\u662f\u56e0\u4e3a\u6709\u72b6\u6001\uff0c\u6240\u4ee5\u7ef4\u62a4\u8d77\u6765\u66f4\u6709\u6311\u6218\u3002</p> <p>APP \u5728\u9762\u5bf9\u5927\u91cf\u9ad8\u5e76\u53d1\u8bf7\u6c42\u65f6\u53ef\u4ee5\u65e0\u6240\u987e\u53ca\u7684\u589e\u52a0\u5b9e\u4f8b\uff0c\u52a0\u673a\u5668\u8fdb\u884c\u6269\u5bb9\u3002\u5904\u7406\u80fd\u91cc\u4e5f\u4f1a\u5c06\u5f97\u5230\u7ebf\u6027\u63d0\u5347\u3002\u7b80\u5355\u7c97\u66b4\u53c8\u6709\u6548\u3002</p> <p>DB \u9762\u5bf9\u540c\u6837\u7684\u538b\u529b\u6311\u6218\u65f6\u6b63\u56e0\u4e3a\u5176\u6709\u72b6\u6001\uff0c\u6269\u5bb9\u8d77\u6765\u5c31\u6ca1\u6709\u90a3\u4e48\u4ece\u5bb9\u3002\u56e0\u4e3a\u5f53\u524d\u7684\u8bf7\u6c42\u643a\u5e26\u7684\u4fe1\u606f\u9700\u8981\u4e0e\u5df2\u6709\u7684\u6570\u636e\u8fdb\u884c\u878d\u5408\u7d2f\u79ef\u3002</p> <p>\u72b6\u6001\u4e0d\u4ec5\u8981\u8003\u8651\u5f53\u524d\u72b6\u6001\uff0c\u8fd8\u9700\u8981\u8003\u8651\u5386\u53f2\u72b6\u6001\u3002\u56e0\u4e3a\u6570\u636e\u662f\u7d2f\u79ef\u7684\u3002</p> <ul> <li>\u5f53\u524d\u72b6\u6001</li> <li>\u5386\u53f2\u72b6\u6001</li> </ul> <p>\u5982\u4ea4\u6613\u8ba2\u5355\uff0c\u5f53\u524d\u8ba2\u5355\u4fe1\u606f\uff0c\u7d2f\u79ef\u8d26\u5355\u4fe1\u606f</p> <p>\u540c\u6837\u9762\u4e34\u7684\u6311\u6218\u8fd8\u6709\u6bd4\u5982\u9ad8\u53ef\u7528\uff08\u5f53\u524d\u72b6\u6001\uff09\uff0c\u8fc1\u79fb\uff08\u5386\u53f2\u72b6\u6001\uff09\u3002\u5728\u7ebf\u6269\u5bb9\u3001\u4e0d\u505c\u673a\u8fc1\u79fb\uff0c\u5347\u7ea7,\u7ef4\u62a4\uff08\u5f53\u524d\u72b6\u6001+\u5386\u53f2\u72b6\u6001\uff09\u3002 </p> <p>\u6bd4\u5982\u7535\u8111\u65b0\u88c5\u7cfb\u7edf\u3001\u65b0\u8d2d\u7f6e\u624b\u673a\uff0c\u6709\u4e00\u4e2a\u987e\u8651\u5c31\u662f\u91cc\u9762\u7684\u6570\u636e\u9700\u8981\u62f7\u8d1d\u5230\u65b0\u7cfb\u7edf\u91cc\u3002\u642c\u5bb6\u5934\u75bc\u7684\u4e5f\u662f\u4e1c\u897f\u592a\u591a\u4e86\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u7531\u4e8eDB\u5e94\u7528\u5177\u6709\u5f53\u524d\u72b6\u6001\u3001\u5386\u53f2\u72b6\u6001\u5c5e\u6027\uff0cDB\u5728\u9ad8\u538b\u4e0b\u9762\u4e34\u7684\u771f\u6b63\u6311\u6218\uff0c</p> <p>\u53ef\u5f52\u7ed3\u4e3a\u541e\u5410\u91cf\uff08QPS\uff09\u6311\u6218\uff0c\u5b58\u50a8\u91cf\uff08SIZE\uff09\u6311\u6218\u3002</p> <p>\u8ba4\u6e05DB\u771f\u6b63\u9762\u5bf9\u7684\u6311\u6218 QPS\uff08QPS+TPS\uff09 +  SIZE (\u5386\u53f2\u7d2f\u79ef + \u589e\u957f\u901f\u5ea6)\u3002\u8981\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b\uff0c\u4e0b\u9762\u5c06\u4eceqps\u3001size\u4e24\u4e2a\u65b9\u9762\u6765\u8fdb\u4e00\u6b65\u601d\u8003\u89e3\u51b3\u4e4b\u9053\u3002</p> <p>\u8fdb\u4e00\u6b65\u601d\u8003\uff0cQPS \u4e0e SIZE \u4e4b\u95f4\u4ea6\u76f8\u4e92\u5f71\u54cd\u3002</p> <p>tps \u52a0\u901fSIZE \u589e\u957f</p> <p>SIZE \u589e\u5927QPS\u4e0b\u964d </p> <p>\u53d6\u820d\u7b56\u7565\uff1a \u65f6\u95f4\u6362\u7a7a\u95f4\uff0c\u7a7a\u95f4\u6362\u65f6\u95f4\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#master","title":"\u591aMaster\u65b9\u6848","text":"<p>\u591amaster\uff0c\u5373\u53ef\u591a\u5199\u3002\u80fd\u591f\u89e3\u51b3\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u5417\uff1f</p> <p>tps \u8868\u9762\u6765\u770b\u5c06\u5199\u7684\u538b\u529b\u5206\u6563\u5230\u591a\u4e2a\u5b9e\u4f8b\u6765\u5904\u7406\uff0c\u5206\u62c5\u4e86\u603b\u4f53\u538b\u529b\u3002\u4f46\u662f\u8981\u4fdd\u6301\u591a\u4e2a\u5b9e\u4f8b\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u5f3a\u4e00\u81f4\u6027\u4e0b\u591a\u4e2a\u5b9e\u4f8b\u90fd\u8981\u5904\u7406\u5b8c\u6210\u624d\u8fd4\u56de\u7ed3\u679c\u3002</p> <p>tps\u7684\u89d2\u5ea6\u6765\u5206\u6790\uff0c\u5355\u4e2a\u5b9e\u4f8b\u7684\u5904\u7406\u91cf\u5e76\u6ca1\u6709\u51cf\u5c11\uff0c\u53cd\u800c\u53ef\u80fd\u4ea7\u751f\u76f8\u4e92\u7b49\u5f85\u3002\u5373\u4f7f\u662f\u6700\u7ec8\u4e00\u81f4\u6027\uff0ctps\u603b\u91cf\u4e5f\u6ca1\u6709\u6ca1\u51cf\u5c11\u3002</p> <p>\u53ef\u4ee5\u964d\u4f4e\u7684\u662f\u5355\u673a\u6240\u627f\u62c5\u7684qps\u3002</p> <p>\u53ef\u80fd\u591a\u4e2a\u5b9e\u4f8b\u4e4b\u95f4\u7531\u534f\u8bae\u6765\u5b8c\u6210\u5b9e\u4f8b\u95f4\u7684\u6570\u636e\u540c\u6b65\uff0c\u4f46\u662f\u5bf9tps\u6027\u80fd\u6765\u8bf4\u5f71\u54cd\u4e5f\u662f\u8d1f\u9762\u7684\u3002\u5bf9size\u6765\u8bf4\u4e5f\u6ca1\u5e26\u6765\u597d\u5904\u3002</p> <p>\u591amaster\u5e26\u6765\u7684\u4f18\u52bf\u66f4\u591a\u7684\u662f\u9ad8\u53ef\u7528\uff0c\u6216\u7c7b\u4f3cCDN\u591a\u673a\u623f\u672c\u5730\u4f18\u5148\u5904\u7406\u3002</p> <p>\u603b\u7ed3\uff1a \u591amaster\u65b9\u6848 \u5728tps\u548csize \u4e24\u4e2a\u65b9\u9762\u90fd\u4e0d\u80fd\u505a\u5230\u7f13\u89e3\u670d\u52a1\u538b\u529b\u7684\u4f5c\u7528</p> <p>\u4f2a\u547d\u9898\u3002\u968f\u7740\u673a\u5668\u589e\u52a0\u590d\u6742\u96be\u5ea6\u6307\u6570\u4e0a\u5347\u3002mysql \u6700\u65b08.0 \u591amaster\u65b9\u6848\u5b98\u65b9\u4e0d\u5efa\u8bae\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u3002</p> <p>\u73b0\u6709\u65b9\u6848\uff1a bucardo \u540c\u6b65\u901a\u8fc7\u89e6\u53d1\u5668\u6765\u8bb0\u5f55\u53d8\u5316 \u3001 \u81ea\u8eab\u903b\u8f91\u590d\u5236\u3002</p> <p>\u6ce8\u610f\u95ee\u9898\uff0c\u591a\u5199\u9020\u6210\u591a\u5b9e\u4f8b\u4e4b\u95f4\u7684\u5199\u5faa\u73af\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_2","title":"\u8bfb\u5199\u5206\u79bb","text":"<p>\u8bfb\u5199\u5206\u79bb\u7684\u6838\u5fc3\u662f\u5c06\u8bfb\u8bf7\u6c42\u4e0e\u5199\u8bf7\u6c42\u5206\u5f00\u6765\u5904\u7406\uff0c\u8bf7\u6c42=qps+tps\u3002master\u53ea\u5904\u7406\u5199\u8bf7\u6c42\uff0c\u7531slave\u6765\u5904\u7406\u8bfb\u8bf7\u6c42\u3002</p> <p>\u901a\u5e38\u5728\u73b0\u5b9e\u7684TP\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u8bfb\u8bf7\u6c42\u5f80\u5f80\u662f\u5199\u8bf7\u6c42\u7684\u6570\u500d\u6216\u6570\u5341\u500d\u3002\u8fd9\u6837\u901a\u8fc7\u4e00\u4e3b\u591a\u4ece\u7684\u65b9\u5f0f\u53ef\u4ee5\u975e\u5e38\u6709\u6548\u7684\u5c06\u8bf7\u6c42\u5206\u6563\u5230\u591a\u4e2a\u5b9e\u4f8b\uff0c\u589e\u52a0\u4ece\u5e93\u4e5f\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u3002</p> <p>\u5c06\u6570\u636e\u5e93\u7684\u8bfb\u8bf7\u6c42\u5206\u79bb\u5f00\u6765\u5bf9\u5199\u7684\u5f71\u54cd\u4e5f\u4f1a\u4ea7\u751f\u79ef\u6781\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a\u8bfb\u5199\u90fd\u4f1a\u5360\u6709IO\u8d44\u6e90\uff0cCPU\u8d44\u6e90\u3002\u5c06\u8bfb\u8bf7\u6c42\u5206\u5230\u5176\u4ed6\u5b9e\u4f8b\uff0c\u8d44\u6e90\u5b8c\u5168\u4ea4\u7ed9\u5199\u5904\u7406\uff0c\u5199\u7684\u6027\u80fd\u8fdb\u800c\u4f1a\u5f97\u5230\u6781\u5927\u7684\u63d0\u5347\u3002</p> <p>\u603b\u7ed3\uff1a \u8bfb\u5199\u5206\u79bb\u89e3\u51b3\u7684\u662f\u5e76\u53d1\u8bf7\u6c42\u91cfqps\uff0c\u5bf9SIZE\u65b9\u9762\u7684\u95ee\u9898\u6ca1\u6709\u5f97\u5230\u89e3\u51b3</p> <p>\u73b0\u6709\u65b9\u6848\uff1a \u6570\u636e\u5e93\u6d41\u590d\u5236\uff0c\u5e94\u7528\u5c42\u901a\u5e38\u6846\u67b6\u81ea\u5e26\u8bfb\u5199\u8def\u7531\u529f\u80fd\u3002 \u5982jdbc\u4e0d\u4ec5\u6709\u8def\u7531\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u4e3b\u4ece</p> <p>\u6ce8\u610f\u95ee\u9898\uff1a \u4e3b\u4ece\u4e4b\u95f4\u7684\u540c\u6b65\uff0c\u5ef6\u8fdf\u95ee\u9898\u3002\u4ece\u5e93\u5bf9\u957f\u4e8b\u52a1\u5bf9\u4e3b\u5e93gc\u5f71\u54cd\uff0c\u4e3b\u5e93wal\u65e5\u5fd7\u4fdd\u7559\u7b56\u7565\u7b49\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_3","title":"\u4e1a\u52a1\u5265\u79bb","text":"<p>DB \u7684\u6838\u5fc3\u4e1a\u52a1\u80fd\u529b\u662fACID\u5904\u7406\u3002\u901a\u8fc7\u524d\u9762APP\u4e0eDB\u7684\u5bf9\u6bd4\u53ef\u77e5\uff0cDB\u7684\u7ef4\u62a4\u6210\u672c\uff0c\u590d\u6742\u7a0b\u5ea6\u901a\u5e38\u8981\u9ad8\u4e8e\u5176\u4ed6\u5e94\u7528\u3002\u5982\u679c\u4e1a\u52a1\u7684\u9700\u8981\u6ca1\u6709ACID\u8981\u6c42\u5c3d\u91cf\u4e0d\u4f7f\u7528DB\u6765\u5904\u7406\uff0c\u505a\u5230\u4e14\u7528\u4e14\u73cd\u60dc\uff01</p> <ul> <li>\u65e5\u5fd7\u7c7b \u6ca1\u6709\u4e8b\u52a1\u8981\u6c42</li> <li>\u4e34\u65f6\u72b6\u6001\u7c7b \u6ca1\u6709\u6301\u4e45\u6027\u8981\u6c42\uff08ttl\uff09</li> <li>\u9891\u7e41\u66f4\u65b0 \u7c7b\u4f3c\u4e34\u65f6\u72b6\u6001</li> <li>\u8ba1\u7b97\u7c7b \u601d\u8003\u95ee\u9898\u4e0d\u8981\u7528\u811a\uff0capp\u6bd4\u6570\u636e\u5e93\u66f4\u7075\u6d3b\u66f4\u9ad8\u6548</li> <li>\u7ea6\u675f\u7c7b \u6570\u636e\u5e93\u63d0\u4f9b\u7ea6\u675f\u529f\u80fd\uff0c\u4f46\u662f\u53ea\u4f5c\u4e3a\u515c\u5e95\u4fdd\u969c\uff0c\u5916\u952e\u662f\u4e00\u5b9a\u8981\u53bb\u6389\u7684\u3002\u9a8c\u8bc1\u5c3d\u529b\u9760\u524d\uff0c\u5982\u5728\u524d\u7aef\u9875\u9762\u9a8c\u8bc1\u4f18\u4e8eapp\u9a8c\u8bc1\u4f18\u4e8eDB\u9a8c\u8bc1\u3002</li> </ul> <p>\u603b\u7ed3: \u5c06\u975e\u5fc5\u8981\u4e1a\u52a1\u4e0d\u7531DB\u6765\u5904\u7406\u662f\u6700\u7b80\u5355\u6709\u6548\u7684\uff0c\u65e0\u8bba\u662fqps\u8fd8\u662fsize</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_4","title":"\u4e2d\u95f4\u5c42\u4ee3\u7406","text":"<p>\u6709\u7684\u4e1a\u52a1\u5fc5\u987b\u8981\u843d\u76d8\u5230DB\uff0c\u4f46\u662f\u53c8\u5b58\u5728\u5176\u7279\u6b8a\u6027\u3002</p> <p>\u8bfb\u7279\u522b\u9891\u7e41\uff0c\u5199\u4e0d\u662f\u5f88\u5927\u3002\u53ef\u91c7\u7528\u9884\u52a0\u8f7d\uff0c\u7f13\u5b58\u7b49\u5c06\u8bfb\u8bf7\u6c42\u62e6\u622a\u5728DB\u524d\u3002\u56e0\u4e3a\u8fd9\u79cd\u7f13\u5b58\u7c7b\u4e2d\u95f4\u4ef6\u7684\u6027\u80fd\u5f80\u5f80\u8981\u9ad8\u4e8eDB\u6570\u4e2a\u7b49\u7ea7\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u9891\u7e41IO\uff0c\u4e0d\u9700\u8981\u8003\u8651\u4e8b\u52a1\uff0c\u9501\u7b49\u3002 </p> <p>\u5bf9\u6570\u636e\u5b9e\u65f6\u53ef\u9760\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u5927\u5e76\u53d1\u5199\uff0c\u53ef\u91c7\u7528\u7f13\u5b58\u5408\u5e76\u591a\u6b21\u5199\uff0c\u6700\u7ec8\u4e00\u8d77\u843d\u76d8\u3002</p> <p>\u4e1a\u52a1\u5cf0\u8c37\u7279\u5f81\u660e\u663e\uff0c\u5cf0\u65f6\u5b9e\u65f6\u8981\u6c42\u53ef\u5ef6\u8fdf\u3002\u901a\u5e38\u4f1a\u8003\u8651\u4f7f\u7528\u961f\u5217\u524a\u5cf0\u586b\u8c37\u3001\u89e3\u8026\u3002\u4e5f\u53ef\u4ee5\u7ed3\u5408\u91c7\u7528\u6d88\u8d39\u7aef\u591a\u6b21\u5199\u5408\u5e76\u7684\u65b9\u5f0f\u8fdb\u4e00\u6b65\u7f13\u89e3\u5199\u8bf7\u6c42\u3002</p> <p>\u603b\u7ed3\uff1a\u66ff\u4ee3\u5927\u90e8\u5206qps\uff0c\u7f13\u89e3tps</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_5","title":"\u591a\u673a\u65b9\u6848","text":"<p>\u6570\u636e\u7684\u62c6\u5206\uff0c\u5c06\u6570\u636e\u5206\u6563\u5230\u591a\u4e2a\u4e3b\u673a\u4e0a\u3002\u964d\u4f4e\u5355\u4e3b\u673a\u627f\u62c5\u7684qps\u3001size</p> <p>\u6570\u636e\u7684\u7ec4\u6210 </p> <ul> <li>\u5355\u5b9e\u4f8b\u591a\u9879\u76ee</li> <li>\u4e00\u4e2a\u9879\u76ee\u591a\u4e2a\u72ec\u7acb\u6a21\u5757</li> <li>\u4e00\u4e2a\u6a21\u5757\u591a\u4e2a\u8868</li> <li>\u5355\u8868\u4e2d\u591a\u5217\u3001\u884c</li> </ul> <p>\u63a5\u4e0b\u6765\u6309\u7167\u6570\u636e\u7684\u7ec4\u6210\u7ed3\u6784\u4ece\u4e0a\u81f3\u4e0b\u5f00\u59cb\u62c6</p> <p>\u5355\u5b9e\u4f8b\u591a\u4e2a\u9879\u76ee\uff0c\u7531\u4e8e\u9879\u76ee\u521d\u671f\u6216\u6570\u636e\u8f7b\u91cf\u7ea7\u9879\u76ee\u3002\u591a\u4e2adatabase\u4f7f\u7528\u4e00\u4e2aDB\u5b9e\u4f8b\u3002\u5f53\u67d0\u4e2a\u9879\u76ee\u6570\u636e\u91cf\u589e\u5230\u53ef\u4ee5\u72ec\u7acb\u62e5\u6709\u4e00\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\u5c06\u8fd9\u4e2a\u9879\u76ee\u4ece\u4e2d\u5265\u79bb\u51fa\u6765\uff0c\u4e0e\u5176\u4ed6\u9879\u76ee\u4e0d\u5728\u76f8\u4e92\u6253\u6270\u3002</p> <p>\u591a\u4e2a\u9879\u76ee\u4e4b\u95f4\u8bbf\u95ee\u662f\u901a\u8fc7API\u6765\u5b9e\u73b0\uff0c\u9879\u76ee\u5728\u6570\u636e\u5e93\u5c42\u6ca1\u6709\u76f4\u63a5\u7684\u4f9d\u8d56\u3002\u62c6\u5206\u5f88\u5bb9\u6613</p> <p>\u4e00\u4e2a\u9879\u76ee\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u7c7b\u4f3c\u4e8e\u591a\u4e2a\u9879\u76ee\uff0c\u4f46\u662f\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u66f4\u5f3a\uff0c\u8026\u5408\u5ea6\u76f8\u5bf9\u8981\u9ad8\u3002\u4f46\u5728\u6570\u636e\u5c42\u5e76\u4e0d\u4e00\u5b9a\u5b58\u5728join\u591a\u8868\u5173\u8054\uff0c\u62c6\u5206\u8d77\u6765\u95ee\u9898\u4e5f\u4e0d\u662f\u5f88\u5927\u3002</p> <p>\u4ee5\u4e0a\u7684\u62c6\u5206\u7684\u5173\u952e\u8bcd\u662f\u76f8\u5173\u6027\u3002\u4e0d\u540c\u7684\u6570\u636e\u6ca1\u6709\u76f4\u63a5\u7684\u8054\u7cfb\u53ef\u5929\u7136\u7684\u8fdb\u884c\u62c6\u5206\u3002\u5728\u8def\u7531\u5c42\u5373\u53ef\u5b8c\u6210\u3002\u5982\u4e0d\u540c\u7684model\u8def\u7531\u5230\u4e0d\u540c\u7684DB\u5b9e\u4f8b\u3002\u7c7b\u4f3c\u4e8eapp\u7684\u62c6\u5206\uff0c\u5fae\u670d\u52a1\u4e4b\u7c7b\u3002</p> <p>\u4ee5\u4e0b\u7684\u62c6\u5206\u7684\u5173\u952e\u8bcd\u662f\u4eb2\u548c\u6027\uff0c\u4e3b\u8981\u662f\u6d89\u53ca\u5230\u591a\u8868\u7684\u8054\u5408join\u67e5\u8be2\uff0c\u591a\u8868\u4e4b\u95f4\u76f4\u63a5\u4f9d\u8d56\u3002\u4e3a\u6ee1\u8db3\u4e8b\u52a1\u8981\u6c42\u591a\u4e2a\u8868\u5fc5\u987b\u8981\u843d\u5728\u4e00\u4e2aDB\u5b9e\u4f8b\u4e2d\u3002</p> <p>\u4eb2\u548c\u6027\u7684\u7406\u89e3\u5c31\u662f\u76f8\u5173\u7684\u6570\u636e\u653e\u5230\u4e00\u8d77\u3002\u5177\u4f53\u4e0e\u4e1a\u52a1\u903b\u8f91\u5bc6\u5207\u76f8\u5173\uff0c\u5982A\u7528\u6237\u7684\u8ba2\u5355\u4e0eB\u7528\u6237\u7684\u8ba2\u5355\u901a\u5e38\u6ca1\u6709\u76f4\u63a5\u7684\u5f3a\u8026\u5408\uff0c\u90a3\u4e48A\uff0cB\u6570\u636e\u5c31\u53ef\u5b58\u653e\u5728\u4e0d\u540c\u7684DB\u5b9e\u4f8b\u4e2d\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u591a\u79df\u6237\u5e94\u7528\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_6","title":"\u8868\u7684\u62c6\u5206","text":"<ul> <li>\u5782\u76f4\u62c6\u5206 (\u6309\u5217\u62c6\u5206\uff0c\u4e0d\u540c\u7684\u5217\u96c6\u5212\u5206\u4e3a\u4e00\u4e2a\u5904\u7406\u5355\u5143)</li> <li>\u6c34\u5e73\u62c6\u5206 (range,hash,list)\uff08\u6309\u884c\u62c6\u5206\uff0c\u4e0d\u540c\u7684\u884c\u96c6\u5212\u5206\u4e3a\u4e00\u4e2a\u5904\u7406\u5355\u5143\uff09</li> </ul> <p>\u5782\u76f4\u62c6\u5206\u4e3b\u8981\u6839\u636e\u6570\u636e\u5e93\u8868\u8bbe\u8ba1\u8303\u5f0f\u7684\u8981\u6c42</p> <p>\u6c34\u5e73\u62c6\u5206\u4e3b\u8981\u5e94\u7528\u8868\u4e4b\u95f4\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u5982\u6839\u636e\u65f6\u95f4\u5212\u5206\uff0c\u5219\u53ef\u8fdb\u884c\u5386\u53f2\u6570\u636e\u5f52\u6863\u7b49\u3002\u89e3\u51b3size\u95ee\u9898</p> <p>\u8868\u7684\u62c6\u5206\u66f4\u591a\u7684\u5c5e\u4e8e\u8868\u8bbe\u8ba1\u8303\u7574\u3002\u8fd8\u6709\u4e2a\u5c31\u662f\u7d22\u5f15\u7684\u8bbe\u8ba1\u3002\u5408\u7406\u7684\u8868\u8bbe\u8ba1\u76f4\u63a5\u5f71\u54cd\u63a5\u4e0b\u6765\u7684\u8868\u5206\u7247\u3002</p> <p>\u8868\u62c6\u5206\u4ee3\u4ef7\u53ca\u6ce8\u610f\u4e8b\u9879, \u5916\u952e\uff0c\u5168\u5c40\u552f\u4e00\u6027\uff0c\u8054\u5408\u67e5\u8be2\uff0c\u751a\u81f3\u8de8\u5e93\u4e8b\u52a1\u7b49\u7279\u6027\u7684\u652f\u6301,\u67e5\u8be2\u6761\u4ef6\u4e0b\u63a8\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_7","title":"\u51b7\u70ed\u5206\u79bb","text":"<p>\u51b7\u70ed\u5206\u79bb\u4f5c\u4e3a\u8868\uff08\u65f6\u95f4\u7ef4\u5ea6range\uff09\u62c6\u5206\u540e\u7684\u4e00\u4e2a\u5177\u4f53\u5e94\u7528\u3002\u6839\u636e\u6570\u636e\u8bbf\u95ee\u70ed\u5ea6\u8fdb\u884c\u5212\u5206\u3002</p> <p>\u901a\u5e38\u6309\u65f6\u95f4\u7ef4\u5ea6\u8fdb\u884c\u5212\u5206\uff0c\u6bd4\u5982\u6700\u8fd1N\u4e2a\u6708\u4e4b\u5185\u6570\u636e\u5b58\u653e\u5728\u6027\u80fd\u8f83\u4f18\u7684ssd\uff0c\u5386\u53f2\u6570\u636e\u653e\u5728\u666e\u901a\u5927\u5bb9\u91cfsata\u76d8\u3002</p> <p>\u8fdb\u4e00\u6b65\u53ef\u5bf9\u5386\u53f2\u6570\u636e\u538b\u7f29,\u5f52\u6863</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_8","title":"\u8868\u7684\u5206\u7247","text":"<p>\u90fd\u5230\u8868\u7684\u5206\u7247(hash,list\u62c6\u5206)\u8fd9\u6b65\u4e86\uff0c\u5c3d\u91cf\u8981\u6c42\u8868\u7684\u7ed3\u6784\u80fd\u4e0d\u52a8\u5c31\u522b\u6298\u817e\u4e86\uff0c\u5305\u62ec\u7d22\u5f15\u7b49\u4efb\u4f55ddl</p> <p>\u5206\u7247\u7684\u5173\u952e\u8bcd\u5206\u5e03\u952e\uff0c\u5206\u5e03\u952e\u7684\u9009\u53d6\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u5982\u4f55\u5c3d\u91cf\u5c06\u6570\u636e\u6253\u6563\uff0c\u5747\u5300\u7684\u5206\u6563\u5230\u591a\u4e2a\u5b9e\u4f8b\u4e2d\uff0c\u907f\u514d\u6570\u636e\u503e\u659c</p> <p>\u4eb2\u548c\u6027\u7684\u8981\u6c42\uff0c\u591a\u4e2a\u76f8\u5173\u8868\u7684\u5206\u5e03\u952e\u9700\u8981\u4e00\u81f4\u3002</p> <p>\u8868\u5206\u7247\u7684\u672c\u8d28\u5c31\u662f\u5728\u8868\u7ea7\u522b\u5c06\u6570\u636e\u5206\u6563\u5230\u591a\u5b9e\u4f8b\u4e2d\uff0c\u4e0d\u4ec5\u7f13\u89e3\u4e86\u5355\u673a\u7684qps\u4e5f\u7f13\u89e3\u7684\u5355\u673a\u7684size\u538b\u529b\u3002</p> <p>\u73b0\u6709\u65b9\u6848\uff1a pgxl,pgxc, citus</p> <p>\u6ce8\u610f\u95ee\u9898\uff1a \u5206\u5e03\u952e\u7684\u9009\u62e9\uff0c\u591a\u5b9e\u4f8b\u4e4b\u95f4\u7f51\u7edc\u7684\u5ef6\u8fdf\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_9","title":"\u603b\u7ed3","text":"<p>\u964d\u4f4e\u5355\u5b9e\u4f8b\u7684\u538b\u529b\u4e3b\u8981\u662f\u4eceqps\uff0csize\u4e24\u4e2a\u7ef4\u5ea6\u6765\u8003\u8651\u3002</p> <p>\u4e3b\u8981\u624b\u6bb5\u5c31\u662f\u62c6\u3001\u62c6\u3001\u62c6 </p> <p>\u4ee5\u4e0a\u4ece\u5f00\u59cb\u5230\u6700\u540e\u7684\u62c6\u5206\uff0c\u8d8a\u5411\u4e0b\u62c6\u5206\u96be\u5ea6\u8d8a\u5927\uff0c\u7ef4\u62a4\u96be\u5ea6\u589e\u52a0\uff0c\u53cd\u800c\u5f97\u5230\u7684\u6536\u76ca\u8d8a\u4e0d\u660e\u663e\u3002</p> <p>\u5982\u679c\u524d\u9762\u7684\u65b9\u6848\u80fd\u591f\u89e3\u51b3\u5c3d\u91cf\u4e0d\u91c7\u7528\u540e\u9762\u7684\u65b9\u6848\u3002</p> <p>\u5316\u7e41\u4e3a\u7b80\u7684\u601d\u8def\u4f18\u4e8e\u5177\u4f53\u7684\u6280\u672f\u3002\u52a1\u8981\u4ee5\u4e1a\u52a1\u4e3a\u6838\u5fc3\u3002\u6280\u672f\u56f4\u7ed5\u4e1a\u52a1\u9700\u6c42\uff0c\u5207\u83ab\u672c\u672b\u5012\u7f6e\u3002\u6362\u53e5\u6765\u8bf4\u4e1a\u52a1\u80fd\u89e3\u51b3\u7684\u4e0d\u7528\u6280\u672f\u6765\u89e3\u51b3\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_fd/#_10","title":"\u6269\u5c55 \u5206\u5e03\u5f0f\u6570\u636e\u5e93","text":"<ul> <li>\u5171\u4eab\u5b58\u50a8 </li> <li>no sharing 2pc \u6bd4\u5982greenplum</li> <li>gmt \u96c6\u4e2d\u4e8b\u52a1\u6bd4\u5982 pgxc</li> <li> <p>fdw \u5916\u5b58\u50a8</p> </li> <li> <p>\u5206\u5e03\u5f0f\u8ba1\u7b97\u5b58\u50a8</p> </li> <li>\u5206\u5e03\u5f0f\u8ba1\u7b97</li> <li>\u5206\u5e03\u5f0f\u5b58\u50a8</li> <li>\u5206\u5e03\u5f0f\u4e8b\u52a1 </li> </ul>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_performance/","title":"\u6570\u636e\u5e93\u4f18\u5316\u601d\u8003-\u6027\u80fd\u4f18\u5316","text":"","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_performance/#_1","title":"\u4e3a\u4ec0\u4e48\u8981\u4f18\u5316","text":"<p>\u9996\u5148\u4e86\u89e3\u4e00\u4e2a\u6982\u5ff5\uff0c\u4ec0\u4e48\u662f\u00b7\u71b5\u589e\u00b7</p> <p>\u7269\u7406\u5b9a\u4e49\uff1a\u71b5\u589e\u8fc7\u7a0b\u662f\u4e00\u4e2a\u81ea\u53d1\u7684\u7531\u6709\u5e8f\u5411\u65e0\u5e8f\u53d1\u5c55\u7684\u8fc7\u7a0b(Bortz, 1986; Roth, 1993)</p> <p>\u5728\u4e00\u4e2a\u5b64\u7acb\u7684\u7cfb\u7edf\u91cc\uff0c\u5982\u679c\u6ca1\u6709\u5916\u529b\u505a\u5de5\uff0c\u5176\u603b\u6df7\u4e71\u5ea6\uff08\u5373\u71b5\uff09\u4f1a\u4e0d\u65ad\u589e\u5927\uff0c\u76f4\u81f3\u7cfb\u7edf\u5f7b\u5e95\u53d8\u5f97\u65e0\u5e8f</p> <p>\u4ece\u7cfb\u7edf\u8f6f\u4ef6\u7684\u89d2\u5ea6\uff1a \u4ece\u5e94\u7528\u7cfb\u7edf\u4e0a\u7ebf\u90a3\u4e00\u523b\u5f00\u59cb\uff0c\u968f\u7740\u7528\u6237\u91cf\u7684\u589e\u52a0\u3001\u4e1a\u52a1\u529f\u80fd\u7684\u6301\u7eed\u8fed\u4ee3\uff0c\u7cfb\u7edf\u4f1a\u9762\u4e34\u5404\u79cd\u4e0d\u540c\u7a0b\u5ea6\u7684\u6311\u6218\uff0c\u5982\u679c\u4e0d\u53ca\u65f6\u91c7\u53d6\u4f18\u5316\u63aa\u65bd\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8bf8\u591a\u95ee\u9898</p> <p>\u6bd4\u5982\uff1a\u7cfb\u7edf\u600e\u4e48\u8d8a\u6765\u8d8a\u6162\u4e86\uff0c\u6d41\u91cf\u4e00\u9ad8\u7cfb\u7edf\u5c31\u5361\u987f\u3001\u751a\u81f3\u5b95\u673a\u7b49\u7b49\u3002</p> <p>\u53ef\u4ee5\u8bf4\uff0c\u6027\u80fd\u4f18\u5316\u662f\u8d2f\u7a7f\u5728\u6574\u4e2a\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u4e4b\u4e2d\u7684</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_performance/#_2","title":"\u901a\u5e38\u6709\u54ea\u4e9b\u4f18\u5316\u65b9\u6cd5","text":"<ul> <li>\u7ed3\u6784\u4f18\u5316</li> <li>\u6027\u80fd\u4f18\u5316</li> <li>\u6a21\u5757\u4f18\u5316</li> </ul> <p>\u5728\u7b97\u6cd5\u9886\u57df\uff0c\u8bc4\u4ef7\u4e00\u4e2a\u7b97\u6cd5\u7684\u6548\u7387\u5982\u4f55\uff0c\u4e3b\u8981\u4f1a\u770b\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u60c5\u51b5\u3002</p> <p>\u5f15\u7528\u5728\u6570\u636e\u5e93\u7684\u4f18\u5316\u4e2d\uff0c</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u7740\u91cd\u8003\u91cf\u7684\u662f\u65f6\u95f4\u6210\u672c\uff0c\u6548\u7387\u3002 \u901a\u5e38\u7406\u89e3\u6210\u6027\u80fd\u4f18\u5316\uff0c\u5982\u4f55\u8ba9\u6211\u7684\u8bbf\u95ee\u66f4\u5feb</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \u7740\u91cd\u8003\u91cf\u7684\u662f\u8d44\u6e90\u6210\u672c\u3002\u53ef\u5bf9\u5e94\u7ed3\u6784\u4f18\u5316\uff0c\u5982\u679c\u7ec4\u7ec7\u6570\u636e\u7684\u5b58\u653e\u3002</p> <p>\u90a3\u4e48\uff0c\u5728\u505a\u4f18\u5316\u65f6\uff0c\u672c\u8d28\u4e0a\u4e5f\u662f\u4ece\u201c\u4f18\u5316\u65f6\u95f4\u201d\u3001\u201c\u4f18\u5316\u7a7a\u95f4\u201d\u3001\u201c\u65f6\u7a7a\u4e92\u6362\uff08\u7528\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff09\u201d\u4e09\u4e2a\u65b9\u5411\u53bb\u601d\u8003\uff0c\u7136\u540e\u5728\u7a7a\u95f4\u3001\u65f6\u95f4\u4e0a\u4e0d\u505c\u5730\u505a\u53d6\u820d\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_performance/#_3","title":"\u4f18\u5316\u8861\u91cf\u6307\u6807","text":"<p>\u7cfb\u7edf\u4f18\u5316\u7684\u76ee\u6807\u63d0\u9ad8\u7cfb\u7edf\u7684\u541e\u5410\u91cf\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\u80fd\u591f\u5904\u7406\u7684\u8bf7\u6c42\u6570\u91cf</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\u3002\u628a\u7cfb\u7edf\u6bd4\u4f5c\u4e00\u4e2a\u94f6\u884c\u8425\u4e1a\u7f51\u70b9\u3002 \u6709\u591a\u4e2a\u7a97\u53e3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002 \u5982\u4f55\u80fd\u591f\u63d0\u9ad8\u6574\u4f53\u7684\u5904\u7406\u91cf\u5462\uff1f</p> <ul> <li> <p>\u7a7a\u95f4 \u589e\u52a0\u8425\u4e1a\u7a97\u53e3  </p> </li> <li> <p>\u65f6\u95f4 \u63d0\u9ad8\u6bcf\u4e2a\u7a97\u53e3\u7684\u6548\u7387</p> </li> </ul> <p>\u5173\u4e8e\u7a7a\u95f4\u7684\u4f18\u5316\u53c2\u89c1\u6570\u636e\u5e93\u4f18\u5316\u601d\u8003 - \u7ed3\u6784\u8bbe\u8ba1, \u672c\u7bc7\u66f4\u591a\u601d\u8003\u7684\u662f\u6027\u80fd\uff08\u65f6\u95f4\uff09\u7684\u4f18\u5316\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_performance/#_4","title":"\u6027\u80fd\u4f18\u5316\u7684\u8861\u91cf\u6307\u6807","text":"<p>\u54cd\u5e94\u65f6\u95f4(RT), \u5305\u62ec</p> <ul> <li>\u5e73\u5747\u54cd\u5e94\u65f6\u95f4(AVG)</li> </ul> <p>\u63a5\u53e3\u7684\u5e73\u5747\u5904\u7406\u80fd\u529b\uff0c \u4f46\u4ec0\u4e48\u4e1c\u897f\u4e00\u5e73\u5747\u5f88\u591a\u5c31\u88ab\u5e73\u5747\u4e86\uff0c\u5982\u4eba\u5747\u6536\u5165\uff01\ud83d\ude13\u3002 \u4e0d\u80fd\u5f88\u597d\u53cd\u5e94\u771f\u5b9e\u60c5\u51b5\u3002\u53e6\u4e00\u79cd\u7c7b\u4f3c\u4e2d\u4f4d\u6570\u7684\u6307\u6807\u3002</p> <ul> <li>\u767e\u5206\u4f4d\u6570(Top Percentile) </li> </ul> <p>\u4e00\u79cd\u7edf\u8ba1\u5b66\u672f\u8bed\uff0c\u53cd\u6620\u7684\u662f\u8d85\u8fc7n%\u7684\u8bf7\u6c42\u90fd\u5728m\u65f6\u95f4\u5185\u8fd4\u56de\uff0c\u4e00\u822c\u7528TPn=m\u6765\u63cf\u8ff0\uff0c\u6bd4\u5982\uff1aTP99=5\uff0c\u8868\u793a\u8d85\u8fc799%\u7684\u8bf7\u6c42\u90fd\u80fd\u57285ms\u5185\u8fd4\u56de\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_performance/#_5","title":"\u4f18\u5316\u5982\u4f55\u5177\u4f53\u505a","text":"<p>\u5f00\u53d1\u7aef\uff1a </p> <ul> <li> <p>\u5b9e\u73b0\u65b9\u6cd5 \u6761\u6761\u5927\u8def\u901a\u7f57\u9a6c\uff0c\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5426\u53ea\u6ee1\u8db3\u4e1a\u52a1\u529f\u80fd\u7684\u9700\u6c42\uff0c\u800c\u6ca1\u6709\u8003\u8651\u6027\u80fd\u3002</p> </li> <li> <p>\u7d22\u5f15 \u7d22\u5f15\u7528\u7684\u597d\uff0c\u6027\u80fd\u6ca1\u70e6\u607c\u3002\u5927\u90e8\u5206\u5e94\u7528\u7aef\u7684\u6027\u80fd\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u6539\u5584\u3002</p> </li> </ul> <p>\u7d22\u5f15\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u624b\u6bb5\u3002\u7d22\u5f15\u672c\u8eab\u4e5f\u662f\u9700\u8981\u989d\u5916\u7684\u4ee3\u4ef7\u3002</p> <ul> <li>\u9501\u7b49\u5f85 \u6700\u6f2b\u957f\u7684\u83ab\u8fc7\u4e8e\u7b49\u5f85\u3002</li> </ul> <p>\u8fd0\u7ef4\u7aef\uff1a </p> <p>\u901a\u8fc7\u6027\u80fd\u6307\u6807\u76d1\u63a7\u9a8c\u8bc1\u4f18\u5316\u6210\u679c\uff0c\u5982</p> <ul> <li>TPS</li> <li>\u6162sql</li> <li>\u7f13\u5b58\u547d\u4e2d\u7387</li> <li>\u9891\u7e41sql- top10</li> <li>\u4e0d\u7a33\u5b9asql - top10</li> <li>\u7d22\u5f15\u5229\u7528\u7387</li> <li>TPn</li> </ul> <p>DBA\uff1a </p> <p>\u901a\u8fc7\u6267\u884c\u8ba1\u5212\u5bf9\u5177\u4f53sql\u8fdb\u884c\u8c03\u4f18</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/","title":"\u6570\u636e\u5e93\u4f18\u5316\u601d\u8003 - \u6a21\u5757\u8c03\u4f18","text":"","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#_1","title":"\u5f00\u59cb\u4e71\u8bf4","text":"<p>\u4e3b\u8981\u662f\u7ed3\u5408postgres\u6570\u636e\u5e93\u81ea\u8eab\u7279\u70b9\uff0c\u6839\u636e\u5177\u4f53\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u4f5c\u51fa\u76f8\u5e94\u8c03\u6574\uff0c\u4f7f\u5176\u66f4\u52a0\u5408\u7406\u3002</p> <p>\u6570\u636e\u5e93\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u5355\u662f\u5176\u5185\u90e8\u662f\u7531\u4e0d\u540c\u7684\u529f\u80fd\u6a21\u5757\u7ec4\u6210\uff0c\u76f8\u4e92\u534f\u8c03\u6765\u5171\u540c\u5b8c\u6210\u4efb\u52a1\u3002</p> <p>\u5404\u4e2a\u529f\u80fd\u6a21\u5757\u5b8c\u6210\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u6bcf\u4e2a\u6a21\u5757\u7684\u7279\u70b9\u4e5f\u4e0d\u540c\uff0c\u5728\u8c03\u6574\u7684\u65f6\u5019\u81f3\u5c11\u9700\u8981\u7406\u89e3\u5404\u4e2a\u6a21\u5757\u5b9e\u73b0\u7684\u57fa\u672c\u539f\u7406\uff08\u5c5e\u4e8e\u5185\u529f\u9700\u4fee\u70bc\uff09\u624d\u597d\u4e0b\u624b\u3002</p> <p>\u5404\u4e2a\u529f\u80fd\u6a21\u5757\u53c8\u76f8\u4e92\u5f71\u54cd\uff0c\u5171\u4eab\u8d44\u6e90\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u4e4b\u95f4\u4f1a\u5b58\u5728\u7ade\u4e89\u8d44\u6e90\u3002\u6bd4\u5982\u5f53\u7cfb\u7edf\u53d1\u751fgc\u65f6\u5bf9\u51e0\u4e4e\u5404\u4e2a\u6a21\u5757\u90fd\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002</p> <p>\u6709\u4e9b\u95ee\u9898\u53ef\u80fd\u662f\u591a\u4e2a\u6a21\u5757\u5171\u540c\u4ea7\u751f\u7684\u3002 \u6700\u5e38\u89c1\u7684\u5982\u4e00\u6761\u6162sql\uff0c\u53ef\u80fd\u5f15\u8d77\u7684\u539f\u56e0\u53ef\u80fd\u662f\u7d22\u5f15\u4e0d\u5408\u7406\uff0c\u6267\u884c\u8ba1\u5212\u8dd1\u504f\uff0csql\u672c\u8eab\u95ee\u9898\uff0clock, \u5f53\u65f6\u7cfb\u7edf\u6b63\u5728gc\u3002\u7b49\u7b49\u3002</p> <p>\u6570\u636e\u5e93\u4f5c\u4e3a\u4e00\u4e2a\u4ea7\u54c1\uff0c\u4e3a\u4e86\u9002\u5e94\u66f4\u5e7f\u6cdb\u7684\u573a\u666f\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u8bbe\u7f6e\u90fd\u6bd4\u8f83\u4fdd\u5b88\u3002\u9ed8\u8ba4\u7684\u8bbe\u7f6e\u80fd\u591f\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6ee1\u8db3\u7684\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5728\u5bf9\u6027\u80fd\u7528\u6240\u8981\u6c42\u7684\u751f\u4ea7\u73af\u5883\u4e0b\u9700\u5fc5\u8981\u7684\u8c03\u6574\uff0c\u751a\u81f3\u4f1a\u79c1\u4eba\u5b9a\u5236\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#_2","title":"\u4e0d\u540c\u573a\u666f\u533a\u522b\u5bf9\u5f85","text":"<p>\u573a\u666f\u4e3b\u8981\u5206\u4e3aTP\u3001AP\u4e24\u79cd\u573a\u666f\u3002</p> <p>\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\u4f18\u5316\u7684\u65b9\u5411\u5e94\u8be5\u662f\u4e0d\u540c\u7684\uff0c\u4fa7\u91cd\u70b9\u4e5f\u4f1a\u4e0d\u540c\u3002</p> <p>TP \u5f3a\u8c03\u7684\u77ed\u5e73\u5feb\uff0c\u6ce8\u91cdTPS\u3002\u76f8\u5f53\u4e8e\u8dd1\u8f66\u8ffd\u6c42\u901f\u5ea6\uff0c\u6548\u7387\u3002</p> <p>AP \u5f3a\u8c03\u7684\u541e\u5410\u91cf\uff0c\u76f8\u5f53\u4e8e\u5927\u5361\u8f66\u3002</p> <p>\u9488\u5bf9\u4e0d\u540c\u8f66\u8f86\u8bbe\u8ba1\u4e0d\u540c\u7684\u9053\u8def\u624d\u5408\u7406\u3002</p> <p>\u5728\u8dd1\u8f66\u7684\u8d5b\u9053\u4e0a\u5f00\u6765\u4e00\u8f86\u5927\u5361\u8f66\uff0c\u5f7c\u6b64\u4f24\u5bb3\u3002TP\u5982\u679c\u4e0d\u5e78\u5c31\u6b64\u6302\u6389\uff0c\u771f\u7684\u4e0d\u80fd\u8bf4\u662f\u7cfb\u7edf\u4e0d\u591f\u5065\u58ee\u3002</p> <p>\u8865\u5145\uff1a \u6162Sql\u53ef\u89c6\u4e3aTP\u7cfb\u7edf\u6027\u80fd\u4e0a\u7684bug , \u9ad8\u901f\u8fd0\u884c\u7684\u5217\u8f66\uff0c\u98de\u673a\u4efb\u4f55\u78b0\u649e\u90fd\u662f\u81f4\u547d\u7684\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#tp-sql","title":"TP \u7cfb\u7edf\u4e2d\u4e00\u6761\u6162Sql\u7684\u4f24\u5bb3","text":"<ul> <li>\u4f24\u78c1\u76d8IO</li> <li>\u4f24\u7cfb\u7edfCUP</li> <li>\u4f24\u7cfb\u7edf\u5185\u5b58</li> <li>\u4f24\u6570\u636e\u5e93MVCC LOCK VACUUM</li> <li>\u4f24\u7cfb\u7edf\u7edf\u8ba1\u4fe1\u606f\u3001temp</li> <li>\u4f24\u6570\u636e\u5e93\u7f13\u5b58</li> <li>\u4f24\u6570\u636e\u5e93\u8fde\u63a5\u6570</li> </ul>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#_3","title":"\u76d1\u6d4b\u5f88\u91cd\u8981","text":"<p>\u4f60\u662f\u6211\u7684\u773c \ud83d\udc40</p> <p>\u4f5c\u7528</p> <ul> <li> <p>\u65e9\u671f\u53d1\u73b0\u95ee\u9898</p> </li> <li> <p>\u8bc4\u4f30\u8c03\u6574\u540e\u6548\u679c</p> </li> </ul> <p>\u5de5\u5177</p> <ul> <li> <p>\u76d1\u63a7\u7cfb\u7edf</p> </li> <li> <p>\u65e5\u5fd7\u7cfb\u7edf</p> </li> </ul>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#_4","title":"\u529f\u80fd\u6a21\u5757\u6982\u89c8","text":"<ul> <li>vacuum</li> </ul> <p>\u907f\u514d\u5728\u9ad8\u5cf0\u65f6\u53d1\u751f\uff0c\u53c8\u80fd\u53ca\u65f6\u5904\u7406\uff0c\u907f\u514d\u8868\u81a8\u80c0\u3002\u8c03\u6574\u89e6\u53d1\u6761\u4ef6\u53ca\u624b\u52a8\u89e6\u53d1</p> <ul> <li>checkpoint</li> </ul> <p>\u9891\u7387\uff0cIO\u5e73\u6ed1\u5ea6</p> <ul> <li>sql</li> </ul> <p>\u6ee1\u8db3\u529f\u80fd\u540c\u65f6\u662f\u5426\u8003\u8651\u6027\u80fd</p> <ul> <li>wal</li> </ul> <p>\u8f93\u51fa\u91cf\uff0cFPI</p> <ul> <li>hotupdate </li> </ul> <p>\u70ed\u66f4\u65b0\u6bd4\u4f8b \u8c03\u6574fillfactor</p> <ul> <li>\u7f13\u5b58 buffer </li> </ul> <p>\u547d\u4e2d\u7387 \u662f\u5426\u4ea7\u751ftempfile</p> <ul> <li>\u7d22\u5f15 index</li> </ul> <p>\u5229\u7528\u7387\uff0c\u9700\u8981\u52a0\uff0c\u6ca1\u5fc5\u8981\u7684\u5220</p> <ul> <li>\u9501 lock</li> </ul> <p>\u9501\u7b49\u5f85,\u6b7b\u9501</p> <ul> <li>SQL</li> </ul> <p>\u4f7f\u7528\u662f\u5426\u5408\u7406</p> <p></p> <p>\u4e00\u53f0\u5e94\u7528\u7684\u6574\u4f53\u63d0\u4f9b\u670d\u52a1\u7684\u80fd\u529b\u540c\u6837\u53d6\u51b3\u4e8e\u6700\u77ed\u7684\u90a3\u5757\u677f\u5b50\uff0c\u5c06\u6700\u77ed\u7684\u90a3\u5757\u677f\u5b50\u6027\u80fd\u63d0\u5347\u5c06\u4f1a\u63d0\u5347\u6574\u4e2a\u5e94\u7528\u7684\u670d\u52a1\u80fd\u529b\u3002</p> <p>\u521d\u671f\u901a\u5e38\u5c40\u90e8\u7684\u4f18\u5316\u6548\u679c\u4f18\u4e8e\u52a0\u4e00\u4e2a\u540c\u6837\u914d\u7f6e\u7684\u670d\u52a1\u5668\u3002</p>","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#_5","title":"\u5177\u4f53\u4f18\u5316\u63aa\u65bd","text":"","tags":["\u4f18\u5316"]},{"location":"postgres/thinking_in_db_tune/#_6","title":"\u5927\u91cf\u5199\u573a\u666f","text":"<ul> <li>\u5220\u9664 \u65e0\u7528\u7684index</li> </ul> <p>\u7d22\u5f15\u7684\u7ef4\u62a4\u9700\u8981\u989d\u5916\u7684\u4ee3\u4ef7</p> <ul> <li>\u529b\u4e89 hotupdate </li> </ul> <p>\u65b0\u65e7\u6570\u636e\u5728\u4e00\u4e2apage\u4e2d</p> <ul> <li>\u8c03\u6574 fillfactor</li> </ul> <p>\u589e\u52a0hotupdate\u6bd4\u4f8b</p> <ul> <li>\u53ea\u66f4\u65b0\u53d8\u5316\u7684\u5217</li> </ul> <p>\u964d\u4f4eIO\uff0c\u7f51\u7edc\uff0cwal\u65e5\u5fd7\u7684\u4f53\u91cf</p> <ul> <li>\u6279\u91cf\u66f4\u65b0\uff0c\u4e00\u4e2a\u4e8b\u52a1\u66f4\u65b0\u591a\u6761\u8bb0\u5f55</li> </ul> <p>\u6279\u64cd\u4f5c\uff0c\u51cf\u5c11\u8fde\u63a5\u4e8b\u52a1\u5f00\u9500</p> <ul> <li>\u9501</li> </ul> <p>\u4e8b\u52a1\u4e4b\u95f4\u76f8\u4e92\u7b49\u5f85\uff0c\u76f8\u4e92\u8e29\u8e0f</p> <ul> <li>where \u6761\u4ef6\u7d22\u5f15\u5229\u7528\u60c5\u51b5\uff0c\u66f4\u65b0\u524d\u9700\u8981\u67e5\u627e\u5177\u4f53\u8bb0\u5f55</li> </ul> <p>\u5feb\u901f\u5b9a\u4f4d\u76ee\u6807\u6570\u636e\u6240\u5728\u7684\u4f4d\u7f6e</p> <ul> <li>\u76d1\u63a7\u8868\u7a7a\u95f4\u81a8\u80c0</li> </ul> <p>\u66f4\u65b0\u4f7f\u7528\u4e86mvcc \u6280\u672f\uff0c\u5229\u7528\u7a7a\u95f4\u6765\u8282\u7701\u65f6\u95f4\u3002\u540c\u65f6\u5e26\u6765\u4e86\u7a7a\u95f4\u81a8\u80c0\u3002\u95f2\u65f6\u5904\u7406</p> <ul> <li>checkpoint</li> </ul> <p>\u964d\u4f4echeckpoint\u53d1\u751f\u9891\u7387\u53ca\u5267\u70c8\u7a0b\u5ea6\u3002\u51cf\u5c11FPI</p> <ul> <li>\u9891\u7e41\u66f4\u65b0\u4e1a\u52a1</li> </ul> <p>\u9891\u7e41\u66f4\u65b0\uff0c\u6307\u7684\u662f\u540c\u4e00\u6761\u8bb0\u5f55\u7684\u66f4\u65b0\u3002\u6bd4\u5982\u72b6\u6001\u4fe1\u606f\u3002\u4f4d\u7f6e\u4fe1\u606f\u7b49\u3002\u63a8\u8350\u4f7f\u7528\u5176\u4ed6\u6570\u636e\u5e93 \u5982redis</p> <ul> <li>\u591a\u5199</li> </ul> <p>\u5728\u5355\u8282\u70b9\u4e0a\u7684\u4f18\u5316\u505a\u597d\u4e86\u518d\u8003\u8651\u591a\u5199</p> <p>\u603b\u7ed3\u7684\u5f88\u5168\u9762\u7684\u5173\u4e8e\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u4f18\u5316\u6570\u636e https://www.modb.pro/db/26031?xzs=</p>","tags":["\u4f18\u5316"]},{"location":"postgres/timescaledb/","title":"TimescaleDB \u65f6\u5e8f\u6570\u636e\u5e93","text":"<p>\u65f6\u5e8f\u6570\u636e\u5e93 https://github.com/timescale/timescaledb</p> <p>\u6570\u636e\u5e93\u914d\u7f6e https://github.com/timescale/timescaledb-tune</p> <p>copy\u5e76\u884c\u5bfc\u5165\u6570\u636e https://github.com/timescale/timescaledb-parallel-copy</p>"},{"location":"postgres/timescaledb/#_1","title":"\u5e38\u7528\u65b9\u6cd5","text":"<p>\u521b\u5efa\u62d3\u5c55</p> <pre><code>CREATE EXTENSION timescaledb;\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7684\u8868</p> <pre><code>CREATE TABLE conditions (\n  time        TIMESTAMPTZ       NOT NULL,\n  location    TEXT              NOT NULL,\n  temperature DOUBLE PRECISION  NULL,\n  humidity    DOUBLE PRECISION  NULL\n);\n</code></pre> <p>\u8f6c\u6362\u6210\u65f6\u5e8f\u6570\u636e\u5e93\u8868</p> <pre><code>SELECT create_hypertable('conditions', 'time');\n</code></pre> <ul> <li>conditions \u8868\u540d</li> <li>time \u65f6\u5e8f\u5b57\u6bb5</li> </ul> <p>\u4fee\u6539\u65f6\u5e8f\u95f4\u9694 \u5bf9\u65b0\u8868\u751f\u6548</p> <pre><code>SELECT set_chunk_time_interval('conditions', INTERVAL '24 hours');\n</code></pre> <p>\u67e5\u770b\u5206\u533a</p> <pre><code>SELECT show_chunks('conditions');\n\nSELECT show_chunks('conditions', older_than =&gt; INTERVAL '3 months')\n\nSELECT show_chunks('conditions', older_than =&gt; DATE '2017-01-01');\n\nSELECT show_chunks(newer_than =&gt; INTERVAL '3 months');\n\nSELECT show_chunks(older_than =&gt; INTERVAL '3 months', newer_than =&gt; INTERVAL '4 months');\n\n</code></pre> <p>\u67e5\u770b\u6570\u636e\u5927\u5c0f</p> <pre><code>SELECT * FROM timescaledb_information.hypertable;\n</code></pre> <p>\u81ea\u52a8\u5220\u9664</p> <pre><code>\u6dfb\u52a0\u89c4\u5219\nSELECT add_drop_chunks_policy('conditions', INTERVAL '6 months');\n\u5220\u9664\u89c4\u5219\nSELECT remove_drop_chunks_policy('conditions');\n</code></pre>"},{"location":"postgres/timescaledb/#_2","title":"\u6ce8\u610f\u4e8b\u9879","text":"<pre><code>When creating hypertables, one constraing that TimescaleDB imposes is that the partitioning column (in your case 'date_time') must be included in any unique indexes (and Primary Keys) for that table.\n</code></pre> <p>https://stackoverflow.com/questions/61205063/error-cannot-create-a-unique-index-without-the-column-date-time-used-in-part</p>"},{"location":"postgres/timescaledb/#_3","title":"\u65f6\u5e8f\u6570\u636e\u7279\u5f81","text":"<ul> <li>have a timestamp</li> <li>append only ,less update or delete</li> <li>recent hot</li> </ul>"},{"location":"postgres/timescaledb/#_4","title":"\u9650\u5236","text":"<p>\u9664\u5206\u533a\u5217\u5916\u4e0d\u53ef\u4ee5\u5728\u5176\u4ed6\u5217\u4e2d\u6709\u552f\u4e00\u7ea6\u675f</p> <p>\u539f\u6570\u636e\u5e93\u4e2d\u7684\u552f\u4e00\u7ea6\u675f\u4e3a\u5168\u5c40\u8868\u5185\u552f\u4e00\u7ea6\u675f\uff0c\u5728\u5206\u533a\u8868\uff08chunks\uff09\u4e2d\u4e0d\u80fd\u591f\u4fdd\u8bc1\u5168\u5c40\u552f\u4e00</p> <pre><code>When converting a normal SQL table to a hypertable, pay attention to how you handle constraints.\nA hypertable can contain foreign keys to normal SQL table columns, but the reverse is not allowed. UNIQUE and PRIMARY constraints must include the partitioning key.\n</code></pre>"},{"location":"postgres/timescaledb/#_5","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"postgres/timescaledb/#chunk","title":"chunk \u65f6\u95f4\u8303\u56f4","text":"<p>\u4e0e\u6570\u636e\u91cf\u6709\u5173\uff0c\u4e00\u4e2achunk\u5bb9\u91cf\u7ea61/4 \u5185\u5b58\u5927\u5c0f</p> <pre><code>SELECT * FROM create_hypertable('conditions', 'time',\n       chunk_time_interval =&gt; INTERVAL '1 day');\n</code></pre>"},{"location":"postgres/timescaledb/#_6","title":"\u7ec4\u5408\u7d22\u5f15","text":"<p>1 \u7b49\u503c\u67e5\u8be2 \uff08e,time\uff09e \u4e3a\u7b49\u503c\u67e5\u8be2\u5217 time \u4e3a\u5206\u533a\u65f6\u95f4\u5217   2 \u8303\u56f4\u67e5\u8be2  (time,c) c \u4e3a\u8fde\u7eed\u503c\u5217 </p>"},{"location":"postgres/timescaledb/#_7","title":"\u6392\u5e8f","text":""},{"location":"postgres/timescaledb/#_8","title":"\u538b\u7f29","text":"<p>\u8bbe\u7f6e\u5386\u53f2\u6570\u636e\u538b\u7f29\u7b56\u7565\uff0c\u538b\u7f29\u540e\u53d8\u6210\u5217\u5b58\uff0c\u4e14\u4e3a\u53ea\u8bfb</p> <p>```   alter table conditions set( timescaledb.compress);</p> <p>timescaledb.compress_segmentby   timescaledb.compress_orderby  <code>\u8bbe\u7f6e\u538b\u7f29\u7b56\u7565</code>   SELECT add_compress_chunks_policy('conditions', INTERVAL '60d');   <code>\u5220\u9664\u538b\u7f29\u7b56\u7565</code>   remove_compress_chunks_policy()  <code>\u624b\u52a8\u538b\u7f29</code>  SELECT compress_chunk('_timescaledb_internal._hyper_1_2_chunk');  <code>\u89e3\u538b\u7f29</code>  SELECT compress_chunk('_timescaledb_internal._hyper_1_2_chunk');  <code>\u67e5\u770b\u538b\u7f29\u60c5\u51b5</code>  SELECT * FROM timescaledb_information.compressed_chunk_stats;  ```</p> <p>\u624b\u52a8\u6279\u91cf\u538b\u7f29</p> <p><code>SELECT compress_chunk(i) from show_chunks('conditions', newer_than, older_than) i;</code></p>"},{"location":"postgres/timescaledb/#_9","title":"\u4fdd\u7559\u7b56\u7565","text":"<p>\u8bbe\u7f6e\u4fdd\u7559\u6570\u636e\u7b56\u7565</p> <pre><code>SELECT add_drop_chunks_policy('conditions', INTERVAL '24 hours');\n</code></pre>"},{"location":"postgres/timescaledb/#_10","title":"\u8fde\u7eed\u5206\u6790\u7a97\u53e3","text":"<p>\u7269\u5316\u89c6\u56fe\u81ea\u52a8\u6301\u7eed\u66f4\u65b0</p>"},{"location":"postgres/timescaledb/#_11","title":"\u66f4\u591a\u4fe1\u606f\u67e5\u770b","text":"<p>\u6bd4\u5982\u538b\u7f29\u7b56\u7565\uff0c\u4fdd\u7559\u7b56\u7565\uff0c\u6301\u7eed\u96c6\u6210\u7b56\u7565\u7b49</p> <pre><code>\\dv timescaledb_information.*\n                            List of relations\n         Schema          |            Name             | Type |  Owner   \n-------------------------+-----------------------------+------+----------\n timescaledb_information | compressed_chunk_stats      | view | postgres\n timescaledb_information | compressed_hypertable_stats | view | postgres\n timescaledb_information | continuous_aggregate_stats  | view | postgres\n timescaledb_information | continuous_aggregates       | view | postgres\n timescaledb_information | drop_chunks_policies        | view | postgres\n timescaledb_information | hypertable                  | view | postgres\n timescaledb_information | license                     | view | postgres\n timescaledb_information | policy_stats                | view | postgres\n timescaledb_information | reorder_policies            | view | postgres\n</code></pre>"},{"location":"postgres/toast/","title":"TOAST \u6280\u672f","text":"<p>\u539f\u6587</p>"},{"location":"postgres/tpch/","title":"tpch AP\u6d4b\u8bd5","text":""},{"location":"postgres/tpch/#_1","title":"\u80cc\u666f\u4ecb\u7ecd","text":"<p>24sql</p>"},{"location":"postgres/tpch/#tpc-h","title":"TPC-H \u57fa\u51c6\u6d4b\u8bd5","text":""},{"location":"postgres/tpch/#_2","title":"\u4e0b\u8f7d\u5b89\u88c5","text":"<p>tpch-tools\u5b89\u88c5\u5305</p> <p>\u4fee\u6539makefile.suite \u6a21\u7248</p> <pre><code>CC=gcc \nDATABASE-TDAT\nMACHINE=LINUX\nWORKLOAD=TPCH\n</code></pre> <p>\u6267\u884c make \u8fdb\u884c\u7f16\u8bd1</p>"},{"location":"postgres/tpch/#_3","title":"\u751f\u6210\u6d4b\u8bd5\u6570\u636e","text":"<p>\u751f\u621020G\u6d4b\u8bd5\u6570\u636e</p> <pre><code>./dbgen -s 20\nls -lrth *.tbl\n</code></pre> <p>\u81ea\u52a8\u751f\u6210\u7684\u6d4b\u8bd5\u6570\u636e\u6bcf\u884c\u7684\u7ed3\u5c3e\u591a\u4f59\u4e00\u4e2a '|' \u9700\u8981\u5904\u7406</p> <pre><code>for i in `ls *.tbl`; do sed 's/|$//' $i &gt; ${i/tbl/csv}; echo $i; done;\n</code></pre>"},{"location":"postgres/tpch/#_4","title":"\u521b\u5efa\u8868\u53ca\u7d22\u5f15","text":"<p>\u5728\u4e0b\u9762\u7684\u6587\u4ef6\u4e2d\u5206\u522b\u662f\u521b\u5efa\u8868\u548c\u5bf9\u5e94\u7d22\u5f15\u7684sql</p> <p>dss.ddl     dss.ri</p>"},{"location":"postgres/tpch/#_5","title":"\u5bfc\u5165\u6570\u636e","text":"<pre><code>copy customer from '/opt/tpch-tools/dbgen/customer.csv' with DELIMITER '|';\ncopy lineitem from '/opt/tpch-tools/dbgen/lineitem.csv' with DELIMITER '|';\ncopy nation from '/opt/tpch-tools/dbgen/nation.csv' with DELIMITER '|';\ncopy orders from '/opt/tpch-tools/dbgen/orders.csv' with DELIMITER '|';\ncopy partsupp from '/opt/tpch-tools/dbgen/partsupp.csv' with DELIMITER '|';\ncopy region from '/opt/tpch-tools/dbgen/region.csv' with DELIMITER '|';\ncopy supplier from '/opt/tpch-tools/dbgen/supplier.csv' with DELIMITER '|';\n</code></pre>"},{"location":"postgres/tpch/#_6","title":"\u57fa\u51c6\u6d4b\u8bd5","text":"<p>\u5728queries \u76ee\u5f55\u4e0b\u5b58\u653e\u7684\u662f24\u6761sql</p>"},{"location":"postgres/unlogged_table/","title":"unlogged table","text":""},{"location":"postgres/unlogged_table/#_1","title":"\u4ecb\u7ecd","text":"<p>\u5728\u5199\u6570\u636e\u7684\u65f6\u5019\u4e0d\u8bb0\u5f55wal\u7684\u8868\u3002</p> <p>\u5728\u610f\u5916\u53d1\u751f\u65f6\u8868\u4e2d\u7684\u6570\u636e\u88abtrunce \u3002\u5982\u65ad\u7535\u3001 \u4e3b\u8fdb\u7a0bkill \u3001scrash \u7b49\u3002</p> <p>\u6b63\u5e38\u5173\u95ed\u91cd\u542f\u6570\u636e\u5e93\u65f6\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002</p> <p>\u4f18\u70b9\uff1a \u63d0\u9ad8\u5199\u5165\u6548\u7387</p> <p>\u4e0d\u8db3\uff1a \u6570\u636e\u5b89\u5168\u6027\u4e0d\u80fd\u5f97\u5230\u4fdd\u969c\u3002 \u7531\u4e8e\u6ca1\u6709wal \u6d41\u590d\u5236\u4ece\u5e93\u4e0d\u80fd\u540c\u6b65</p> <p>\u5e94\u7528\u573a\u666f\uff1a </p> <p>\u6570\u636e\u53ef\u4e22\u5931\uff0c\u5982\u9891\u7e41\u66f4\u65b0\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u72b6\u6001\u4fe1\u606f\u7684\u8868\u3002</p> <p>\u5bfc\u5165\u8868\u6570\u636e\uff0c\u540e\u5c06\u8868\u6539\u4e3a\u6b63\u5e38\u8868\u3002</p>"},{"location":"postgres/unlogged_table/#_2","title":"\u4f7f\u7528","text":"<pre><code>-- \u521b\u5efaunlogged table,\u4e0e\u521b\u5efa\u666e\u901a\u7684\u8868\u7c7b\u4f3c\u3002\u52a0\u4e2aunlogged \u5173\u952e\u5b57\npostgres=# create unlogged table ult (id int,name text);\nCREATE TABLE\npostgres=# \\d+ ult \n                      \u4e0d\u8bb0\u5f55\u65e5\u5fd7\u7684\u8868 \"public.ult\"\n \u680f\u4f4d |  \u7c7b\u578b   | \u6821\u5bf9\u89c4\u5219 | \u53ef\u7a7a\u7684 | \u9884\u8bbe |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0 \n------+---------+----------+--------+------+----------+----------+------\n id   | integer |          |        |      | plain    |          | \n name | text    |          |        |      | extended |          | \n\n\n-- \u5c06\u666e\u901a\u8868\u4e0eunlogged table \u4e4b\u95f4\u8f6c\u6362\npostgres=# alter table ult set logged ;\nALTER TABLE\npostgres=# \\d+ ult \n                          \u6570\u636e\u8868 \"public.ult\"\n \u680f\u4f4d |  \u7c7b\u578b   | \u6821\u5bf9\u89c4\u5219 | \u53ef\u7a7a\u7684 | \u9884\u8bbe |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0 \n------+---------+----------+--------+------+----------+----------+------\n id   | integer |          |        |      | plain    |          | \n name | text    |          |        |      | extended |          | \n\npostgres=# alter table ult set unlogged ;\nALTER TABLE\npostgres=# \\d+ ult \n                      \u4e0d\u8bb0\u5f55\u65e5\u5fd7\u7684\u8868 \"public.ult\"\n \u680f\u4f4d |  \u7c7b\u578b   | \u6821\u5bf9\u89c4\u5219 | \u53ef\u7a7a\u7684 | \u9884\u8bbe |   \u5b58\u50a8   | \u7edf\u8ba1\u76ee\u6807 | \u63cf\u8ff0 \n------+---------+----------+--------+------+----------+----------+------\n id   | integer |          |        |      | plain    |          | \n name | text    |          |        |      | extended |          | \n\n</code></pre>"},{"location":"postgres/upset/","title":"upset \u7528\u6cd5","text":"","tags":[]},{"location":"postgres/upset/#_1","title":"\u521b\u5efa\u8868","text":"<pre><code>DROP TABLE IF EXISTS \"goods\";\nCREATE TABLE \"goods\" (\n  \"store_cd\" int4 NOT NULL,\n  \"good_cd\" varchar(50) COLLATE \"pg_catalog\".\"default\" NOT NULL,\n  \"name\" varchar(255) COLLATE \"pg_catalog\".\"default\"\n);\n\nINSERT INTO \"goods\" VALUES (101, '1', '\u5f20\u4e09');\nINSERT INTO \"goods\" VALUES (102, '2', '\u674e\u56db');\nINSERT INTO \"goods\" VALUES (103, '3', '\u738b\u4e94');\n\nALTER TABLE \"goods\" ADD CONSTRAINT \"pr_cd_key\" PRIMARY KEY (\"store_cd\", \"good_cd\");\n\n</code></pre>","tags":[]},{"location":"postgres/upset/#_2","title":"\u6570\u636e\u5b58\u5728\u5219\u66f4\u65b0\u6570\u636e\uff0c\u4e0d\u5b58\u5728\u5219\u63d2\u5165\u6570\u636e","text":"<pre><code>---\nINSERT INTO GOODS VALUES ( 104, '4', '\u8d75\u516d' ) \nON CONFLICT ON CONSTRAINT pr_key_cd DO\nUPDATE \n    SET NAME = '\u66f4\u65b0' \nWHERE\n    GOODS.STORE_CD = '104' \n    AND GOODS.GOOD_CD = '4'\n----\npr_key_cd\u4e3a\u5fc5\u987b\u4e3a\u552f\u4e00\u4e3b\u952e\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762\u5199\u6cd5\uff08\u6ce8\u610f\uff1a\u5fc5\u987b\u4fdd\u8bc1\u7b5b\u9009\u51fa\u6570\u636e\u552f\u4e00\uff09\nINSERT INTO GOODS VALUES ( 104, '4', '\u8d75\u516d' ) \nON CONFLICT ( STORE_CD, GOOD_CD ) DO\nUPDATE \n    SET NAME = '\u66f4\u65b0' \nWHERE\n    GOODS.STORE_CD = '104' \n    AND GOODS.GOOD_CD = '4'\n    AND NAME &lt;&gt; '\u66f4\u65b0' ---\u8fc7\u6ee4 \u6ca1\u6709\u5fc5\u8981\u7684\u66f4\u65b0\n</code></pre>","tags":[]},{"location":"postgres/upset/#_3","title":"\u6570\u636e\u5b58\u5728\u5219\u5ffd\u7565\uff0c\u4e0d\u5b58\u5728\u5219\u63d2\u5165","text":"<pre><code>INSERT INTO GOODS VALUES ( 104, '4', '\u8d75\u516d' ) \nON CONFLICT ON CONSTRAINT pr_key_cd DO NOTHING;\n\n-- \u53e6\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\ninsert into goods select 103,'3','\u8d75\u516d' from (select 1) temp where not exists (select 1 from goods where store_cd=103 and good_cd = '3');\n</code></pre> <p>\u4e0a\u9762\u7684\u4e24\u79cd\u7684\u5199\u6cd5\uff0c\u662f\u5148\u6267\u884cinsert\u5982\u679c\u4e3b\u952e\u51b2\u7a81\u5219\u6267\u884cupdate\uff0c\u6ca1\u6709\u51b2\u7a81\u5c31\u6267\u884cinsert\u4e86\u3002</p>","tags":[]},{"location":"postgres/upset/#update","title":"\u5148\u6267\u884cupdate\u8bed\u53e5","text":"<pre><code>WITH TABLE1 AS ( UPDATE GOODS SET NAME = '\u66f4\u65b0' WHERE STORE_CD = '104' AND GOOD_CD = '4' RETURNING * ) \nINSERT INTO GOODS SELECT  104, '4', '\u8d75\u516d' \nWHERE NOT EXISTS ( SELECT 1 FROM TABLE1 WHERE STORE_CD = '104' AND GOOD_CD = '4') \n</code></pre>","tags":[]},{"location":"postgres/vacuum/","title":"vacuum \u5783\u573e\u56de\u6536\u5668","text":""},{"location":"postgres/vacuum/#_1","title":"\u4ecb\u7ecd","text":"<p>\u6570\u636e\u5e93\u603b\u662f\u4e0d\u65ad\u5730\u5728\u6267\u884c\u5220\u9664\uff0c\u66f4\u65b0\u7b49\u64cd\u4f5c\u3002\u826f\u597d\u7684\u7a7a\u95f4\u7ba1\u7406\u975e\u5e38\u91cd\u8981\uff0c\u80fd\u591f\u5bf9\u6027\u80fd\u5e26\u6765\u5927\u5e45\u63d0\u9ad8\u3002\u5728postgresql\u4e2d\u7528\u4e8e\u7ef4\u62a4\u6570\u636e\u5e93\u78c1\u76d8\u7a7a\u95f4\u7684\u5de5\u5177\u662fVACUUM\uff0c\u5176\u91cd\u8981\u7684\u4f5c\u7528\u662f\u5220\u9664\u90a3\u4e9b\u5df2\u7ecf\u6807\u793a\u4e3a\u5220\u9664\u7684\u6570\u636e\u5e76\u91ca\u653e\u7a7a\u95f4\u3002 postgresql\u4e2d\u6267\u884cdelete,update\u64cd\u4f5c\u540e\uff0c\u8868\u4e2d\u7684\u8bb0\u5f55\u53ea\u662f\u88ab\u6807\u793a\u4e3a\u5220\u9664\u72b6\u6001\uff0c\u5e76\u6ca1\u6709\u91ca\u653e\u7a7a\u95f4\uff0c\u5728\u4ee5\u540e\u7684update\u6216insert\u64cd\u4f5c\u4e2d\u8be5\u90e8\u5206\u7684\u7a7a\u95f4\u662f\u4e0d\u80fd\u591f\u88ab\u91cd\u7528\u7684\u3002\u7ecf\u8fc7vacuum\u6e05\u7406\u540e\uff0c\u7a7a\u95f4\u624d\u80fd\u5f97\u5230\u91ca\u653e\u3002</p>"},{"location":"postgres/vacuum/#_2","title":"\u610f\u4e49","text":"<p>PostgreSQL\u6bcf\u4e2a\u8868\u548c\u7d22\u5f15\u7684\u6570\u636e\u90fd\u662f\u7531\u5f88\u591a\u4e2a\u56fa\u5b9a\u5c3a\u5bf8\u7684\u9875\u9762\u5b58\u50a8\uff08\u901a\u5e38\u662f 8kB\uff0c\u4e0d\u8fc7\u5728\u7f16\u8bd1\u670d\u52a1\u5668\u65f6[\u2013with-blocksize]\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u4e0d\u540c\u7684\u5c3a\u5bf8\uff09</p> <p>PostgreSQL\u4e2d\u6570\u636e\u64cd\u4f5c\u6c38\u8fdc\u662fAppend\u64cd\u4f5c,\u5177\u4f53\u542b\u4e49\u5982\u4e0b:</p> <ul> <li>insert \u65f6\u5411\u9875\u4e2d\u6dfb\u52a0\u4e00\u6761\u6570\u636e</li> <li>update \u5c06\u5386\u53f2\u6570\u636e\u6807\u8bb0\u4e3a\u65e0\u6548,\u7136\u540e\u5411\u9875\u4e2d\u6dfb\u52a0\u65b0\u6570\u636e</li> <li>delete \u5c06\u5386\u53f2\u6570\u636e\u6807\u8bb0\u4e3a\u65e0\u6548  </li> </ul> <p>\u56e0\u4e3a\u8fd9\u4e2a\u7279\u6027,\u6240\u4ee5\u9700\u8981\u5b9a\u671f\u5bf9\u6570\u636e\u5e93vacuum,\u5426\u5219\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u81a8\u80c0,\u5efa\u8bae\u6253\u5f00autovacuum.</p>"},{"location":"postgres/vacuum/#_3","title":"\u6587\u6cd5","text":"<pre><code>VACUUM [ ( { FULL | FREEZE | VERBOSE | ANALYZE | DISABLE_PAGE_SKIPPING } [, ...] ) ] [ table_name [ (column_name [, ...] ) ] ]\nVACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] [ table_name ]\nVACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] ANALYZE [ table_name [ (column_name [, ...] ) ] ]\n</code></pre>"},{"location":"postgres/vacuum/#_4","title":"\u53c2\u6570","text":""},{"location":"postgres/vacuum/#full","title":"FULL","text":"<p>Selects \u201cfull\u201d vacuum, which can reclaim more space, but takes much longer and exclusively locks the table. This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy until the operation is complete. Usually this should only be used when a significant amount of space needs to be reclaimed from within the table.</p> <p>\u5927\u62db\uff0c\u9700\u8981\u66f4\u591a\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u7a7a\u95f4\u5c06\u4f1a\u88ab\u91cd\u65b0\u6574\u7406\u3002\u3000auto vacumm \u53ea\u5220\u9664\u7a7a\u95f4\uff0c\u5e76\u6ca1\u6709\u6574\u7406\u4f7f\u7a7a\u95f4\u66f4\u7d27\u51d1\u3002</p>"},{"location":"postgres/vacuum/#verbose","title":"VERBOSE","text":"<p>Prints a detailed vacuum activity report for each table. \u6253\u5370\u56de\u6536\u65f6\u6bcf\u4e2atable \u6267\u884c\u7ec6\u8282</p>"},{"location":"postgres/vacuum/#analyze","title":"ANALYZE","text":"<p>Updates statistics used by the planner to determine the most efficient way to execute a query.</p> <p>\u7edf\u8ba1\u5e93</p>"},{"location":"postgres/vacuum/#_5","title":"\u4f8b\u5b50","text":"<p>\u53ef\u4ee5\u7cbe\u786e\u6307\u5b9a\u9700\u8981\u6267\u884c\u7684table, \u5982\u679c\u4e0d\u6307\u5b9a\u88ab\u56de\u6536\u7684\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524ddatabase \u4e0b\u6240\u6709 table   </p> <pre><code>VACUUM (FULL,VERBOSE, ANALYZE) table_name;\n</code></pre> <p>\u5c06\u6267\u884c\u8fc7\u7a0b\u7ec6\u8282\u6253\u5370\u5230\u6587\u4ef6\u4e2d</p> <pre><code>psql -U user -d database  -c \"vacuum FULL VERBOSE ANALYZE table\"  &gt; vacuum-01.log 2&gt;&amp;1\n</code></pre>"},{"location":"postgres/vacuum/#vacuum-full","title":"\u6d4b\u8bd5 vacuum full","text":"<p>ctid (0,59) \u8868\u793a\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u4e3a\u7b2c0\u4e2a\u9875\u9762\u7684\u7b2c59\u884c</p> <p>\u521b\u5efa\u6d4b\u8bd5\u8868</p> <pre><code>create table test_vacuum(\n    objectid bigserial not null,                --\u552f\u4e00\u7f16\u53f7\uff0c\u4e3b\u952e\n    name text not null,                         --\u540d\u79f0\n    describe text,                              --\u5907\u6ce8\n    generate timestamptz default now() not null,--\u521b\u5efa\u65e5\u671f\n    constraint pk_test1_objectid primary key(objectid)\n); \n</code></pre> <p>\u521b\u5efa\u968f\u673a\u751f\u6210\u4e2d\u6587\u5b57\u7b26\u51fd\u6570</p> <pre><code>drop function if exists gen_random_zh(int,int);\ncreate or replace function gen_random_zh(int,int)\n    returns text\nas $$\n    select string_agg(chr((random()*(20901-19968)+19968 )::integer) , '')  from generate_series(1,(random()*($2-$1)+$1)::integer); $$ language sql; \n</code></pre> <p>\u5bfc\u5165\u6d4b\u8bd5\u6570\u636e</p> <pre><code>insert into test_vacuum(name)\n  select gen_random_zh(8,32) from generate_series(1,10000); \n</code></pre> <p>\u67e5\u770b\u6570\u636e\u5e03\u5c40</p> <pre><code>select ctid,objectid from test_vacuum limit 500;\nctid,objectid\n--------\n ....\n(1,17) 92\n(1,18) 93\n(1,19) 94\n(1,20) 95 \n ....\n</code></pre> <p>\u66f4\u65b0\u8868\u4e2d\u6570\u636e</p> <pre><code>update test2 set name=gen_random_zh(8,32) where objectid = 93;\n</code></pre> <p>\u66f4\u65b0\u540e\u8868\u4e2d\u6570\u636e\u5e03\u5c40</p> <pre><code>select ctid,objectid from test_vacuum limit 500;\nctid,objectid\n--------\n ....\n(1,17) 92\n(1,19) 94\n(1,20) 95 \n ....\n</code></pre> <p>\u6267\u884c vacuum FULL </p> <pre><code>vacuum FULL test_vacuum\n\nselect ctid,objectid from test_vacuum limit 500;\nctid,objectid\n--------\n ....\n(1,17) 92\n(1,18) 94\n(1,29) 95 \n ....\n\n</code></pre> <p>\u6570\u636e\u5e03\u5c40\u53d8\u7684\u66f4\u7d27\u51d1\uff0c\u3000\u53ea\u6267\u884cvacuum \u6570\u636e\u4e0d\u4f1a\u79fb\u52a8</p>"},{"location":"postgres/vacuum/#_6","title":"\u6269\u5c55\u9605\u8bfb","text":"<p>1.\u56de\u6536\u7a7a\u95f4</p> <p>\u8fd9\u4e2a\u901a\u5e38\u662f\u5927\u5bb6\u6700\u5bb9\u6613\u60f3\u8d77\u6765\u7684\u529f\u80fd\u3002\u56de\u6536\u7a7a\u95f4\uff0c\u5c06dead tuple\u6e05\u7406\u6389\u3002\u4f46\u662f\u5df2\u7ecf\u5206\u914d\u7684\u7a7a\u95f4\uff0c\u4e00\u822c\u4e0d\u4f1a\u91ca\u653e\u6389\u3002\u9664\u975e\u505avacuum full\uff0c\u4f46\u662f\u9700\u8981exclusive lock\u3002\u4e00\u822c\u4e0d\u592a\u5efa\u8bae\uff0c\u56e0\u4e3a\u5982\u679c\u8868\u6700\u7ec8\u8fd8\u662f\u4f1a\u6da8\u5230 \u8fd9\u4e2a\u9ad8\u6c34\u4f4d\u4e0a\uff0c\u7ecf\u5e38\u505avacuum full\u610f\u4e49\u4e0d\u662f\u975e\u5e38\u5927\u3002\u4e00\u822c\u5408\u7406\u8bbe\u7f6evacuum\u53c2\u6570\uff0c\u8fdb\u884c\u5e38\u89c4vacuum\u4e5f\u5c31\u591f\u4e86\u3002</p> <p>2.\u51bb\u7ed3tuple\u7684xid</p> <p>PG\u4f1a\u5728\u6bcf\u6761\u8bb0\u5f55\uff08tuple\uff09\u7684header\u4e2d\uff0c\u5b58\u653exmin,xmax\u4fe1\u606f(\u589e\u5220\u6539\u4e8b\u52a1ID)\u3002transactionID\u7684\u6700\u5927\u503c\u4e3a2\u768432\u6b21\uff0c\u5373\u65e0\u7b26\u6574\u5f62\u6765\u8868\u793a\u3002\u5f53transactionID\u8d85\u8fc7\u6b64\u6700\u5927\u503c\u540e\uff0c\u4f1a\u5faa\u73af\u4f7f\u7528\u3002 \u8fd9\u4f1a\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff1a\u5c31\u662f\u6700\u65b0\u4e8b\u52a1\u7684transactionID\u4f1a\u5c0f\u4e8e\u8001\u4e8b\u52a1\u7684transactionID\u3002\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u540e\uff0cPG\u5c31\u6ca1\u6709\u529e\u6cd5\u6309transactionID\u6765\u533a\u5206\u4e8b\u52a1\u7684\u5148\u540e\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u5b9e\u73b0MVCC\u4e86\u3002\u56e0\u6b64PG\u7528vacuum\u540e\u53f0\u8fdb\u7a0b\uff0c \u6309\u4e00\u5b9a\u7684\u5468\u671f\u548c\u7b97\u6cd5\u89e6\u53d1vacuum\u52a8\u4f5c\uff0c\u5c06\u8fc7\u8001\u7684tuple\u7684header\u4e2d\u7684\u4e8b\u52a1ID\u8fdb\u884c\u51bb\u7ed3\u3002\u51bb\u7ed3\u4e8b\u52a1ID\uff0c\u5373\u5c06\u4e8b\u52a1ID\u8bbe\u7f6e\u4e3a\u201c2\u201d\uff08\u201c0\u201d\u8868\u793a\u65e0\u6548\u4e8b\u52a1ID\uff1b\u201c1\u201d\u8868\u793abootstrap\uff0c\u5373\u521d\u59cb\u5316\uff1b\u201c3\u201d\u8868\u793a\u6700\u5c0f\u7684\u4e8b\u52a1ID\uff09\u3002PG\u8ba4\u4e3a\u88ab\u51bb\u7ed3\u7684\u4e8b\u52a1ID\u6bd4\u4efb\u4f55\u4e8b\u52a1\u90fd\u8981\u8001\u3002\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u4e86\u3002</p> <p>3.\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f</p> <p>vacuum analyze\u65f6\uff0c\u4f1a\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\uff0c\u8ba9PG\u7684planner\u80fd\u591f\u7b97\u51fa\u66f4\u51c6\u786e\u7684\u6267\u884c\u8ba1\u5212\u3002autovacuum_analyze_threshold\u548cautovacuum_analyze_scale_factor\u53c2\u6570\u53ef\u4ee5\u63a7\u5236analyze\u7684\u89e6\u53d1\u7684\u9891\u7387\u3002</p> <p>4.\u66f4\u65b0visibility map</p> <p>\u5728PG\u4e2d\uff0c\u6709\u4e00\u4e2avisibility map\u7528\u6765\u6807\u8bb0\u90a3\u4e9bpage\u4e2d\u662f\u6ca1\u6709dead tuple\u7684\u3002\u8fd9\u6709\u4e24\u4e2a\u597d\u5904\uff0c\u4e00\u662f\u5f53vacuum\u8fdb\u884cscan\u65f6\uff0c\u76f4\u63a5\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e9bpage\u3002\u4e8c\u662f\u8fdb\u884cindex-only scan\u65f6\uff0c\u53ef\u4ee5\u5148\u68c0\u67e5\u4e0bvisibility map\u3002\u8fd9\u6837\u51cf\u5c11fetch tuple\u65f6\u7684\u53ef\u89c1\u6027\u5224\u65ad\uff0c\u4ece\u800c\u51cf\u5c11IO\u64cd\u4f5c\uff0c\u63d0\u9ad8\u6027\u80fd\u3002\u53e6\u5916visibility map\u76f8\u5bf9\u6574\u4e2arelation\uff0c\u8fd8\u662f\u5c0f\u5f88\u591a\uff0c\u53ef\u4ee5cache\u5230\u5185\u5b58\u4e2d\u3002</p>"},{"location":"postgres/vacuum/#vacuum","title":"vacuum\u53c2\u6570\u4ecb\u7ecd","text":""},{"location":"postgres/vacuum/#autovacuum","title":"autovacuum \u89e6\u53d1\u6761\u4ef6\uff0c\u5927\u81f4\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a","text":"<pre><code>autovacuum\uff1a\u9ed8\u8ba4\u4e3aon\uff0c\u8868\u793a\u662f\u5426\u5f00\u8d77autovacuum\u3002\u9ed8\u8ba4\u5f00\u8d77\u3002\u7279\u522b\u7684\uff0c\u5f53\u9700\u8981\u51bb\u7ed3xid\u65f6\uff0c\u5c3d\u7ba1\u6b64\u503c\u4e3aoff\uff0cPG\u4e5f\u4f1a\u8fdb\u884cvacuum\u3002\nautovacuum_naptime\uff1a\u4e0b\u4e00\u6b21vacuum\u7684\u65f6\u95f4\uff0c\u9ed8\u8ba41min\u3002 \u8fd9\u4e2anaptime\u4f1a\u88abvacuum launcher\u5206\u914d\u5230\u6bcf\u4e2aDB\u4e0a\u3002autovacuum_naptime/num of db\u3002\nlog_autovacuum_min_duration\uff1a\u8bb0\u5f55autovacuum\u52a8\u4f5c\u5230\u65e5\u5fd7\u6587\u4ef6\uff0c\u5f53vacuum\u52a8\u4f5c\u8d85\u8fc7\u6b64\u503c\u65f6\u3002 \u201c-1\u201d\u8868\u793a\u4e0d\u8bb0\u5f55\u3002\u201c0\u201d\u8868\u793a\u6bcf\u6b21\u90fd\u8bb0\u5f55\u3002\nautovacuum_max_workers\uff1a\u6700\u5927\u540c\u65f6\u8fd0\u884c\u7684worker\u6570\u91cf\uff0c\u4e0d\u5305\u542blauncher\u672c\u8eab\u3002\nautovacuum_vacuum_threshold:\u9ed8\u8ba450\u3002\u4e0eautovacuum_vacuum_scale_factor\u914d\u5408\u4f7f\u7528\uff0c autovacuum_vacuum_scale_factor\u9ed8\u8ba4\u503c\u4e3a20%\u3002\n                          \u5f53update,delete\u7684tuples\u6570\u91cf\u8d85\u8fc7autovacuum_vacuum_scale_factor*table_size+autovacuum_vacuum_threshold\u65f6\uff0c\u8fdb\u884cvacuum\u3002\u5982\u679c\u8981\u4f7fvacuum\u5de5\u4f5c\u52e4\u594b\u70b9\uff0c\u5219\u5c06\u6b64\u503c\u6539\u5c0f\u3002\nautovacuum_analyze_threshold:\u9ed8\u8ba450\u3002\u4e0eautovacuum_analyze_scale_factor\u914d\u5408\u4f7f\u7528, autovacuum_analyze_scale_factor\u9ed8\u8ba410%\u3002\n                          \u5f53update,insert,delete\u7684tuples\u6570\u91cf\u8d85\u8fc7autovacuum_analyze_scale_factor*table_size+autovacuum_analyze_threshold\u65f6\uff0c\u8fdb\u884canalyze\u3002\nautovacuum_freeze_max_age\u548cautovacuum_multixact_freeze_max_age\uff1a\u524d\u9762\u4e00\u4e2a200 million,\u540e\u9762\u4e00\u4e2a400 million\u3002\u79bb\u4e0b\u4e00\u6b21\u8fdb\u884cxid\u51bb\u7ed3\u7684\u6700\u5927\u4e8b\u52a1\u6570\u3002\nautovacuum_vacuum_cost_delay\uff1a\u5982\u679c\u4e3a-1\uff0c\u53d6vacuum_cost_delay\u503c\u3002\nautovacuum_vacuum_cost_limit\uff1a\u5982\u679c\u4e3a-1\uff0c\u5230vacuum_cost_limit\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u6240\u6709worker\u7684\u7d2f\u52a0\u503c\u3002\n</code></pre>"},{"location":"postgres/vacuum/#vacuum_1","title":"\u57fa\u4e8e\u4ee3\u4ef7\u7684vacuum\u53c2\u6570:","text":"<pre><code>vacuum_cost_delay \uff1a\u8ba1\u7b97\u6bcf\u4e2a\u6beb\u79d2\u7ea7\u522b\u6240\u5141\u8bb8\u6d88\u8017\u7684\u6700\u5927IO\uff0cvacuum_cost_limit/vacuum_cost_dely\u3002 \u9ed8\u8ba4vacuum_cost_delay\u4e3a20\u6beb\u79d2\u3002\nvacuum_cost_page_hit \uff1avacuum\u65f6\uff0cpage\u5728buffer\u4e2d\u547d\u4e2d\u65f6\uff0c\u6240\u82b1\u7684\u4ee3\u4ef7\u3002\u9ed8\u8ba4\u503c\u4e3a1\u3002\nvacuum_cost_page_miss\uff1avacuum\u65f6\uff0cpage\u4e0d\u5728buffer\u4e2d\uff0c\u9700\u8981\u4ece\u78c1\u76d8\u4e2d\u8bfb\u5165\u65f6\u7684\u4ee3\u4ef7\u9ed8\u8ba4\u4e3a10\u3002 vacuum_cost_page_dirty\uff1a\u5f53vacuum\u65f6\uff0c\u4fee\u6539\u4e86clean\u7684page\u3002\u8fd9\u8bf4\u660e\u9700\u8981\u989d\u5916\u7684IO\u53bb\u5237\u810f\u5757\u5230\u78c1\u76d8\u3002\u9ed8\u8ba4\u503c\u4e3a20\u3002\nvacuum_cost_limit\uff1a\u5f53\u8d85\u8fc7\u6b64\u503c\u65f6\uff0cvacuum\u4f1asleep\u3002\u9ed8\u8ba4\u503c\u4e3a200\u3002\n\u628a\u4e0a\u9762\u6bcf\u4e2acost\u503c\u8c03\u6574\u7684\u5c0f\u70b9\uff0c\u7136\u540e\u628alimit\u503c\u8c03\u7684\u5927\u4e9b\uff0c\u53ef\u4ee5\u5ef6\u957f\u6bcf\u6b21vacuum\u7684\u65f6\u95f4\u3002\u8fd9\u6837\u505a\uff0c\u5982\u679c\u5728\u9ad8\u8d1f\u8f7d\u7684\u7cfb\u7edf\u5f53\u4e2d\uff0c\u53ef\u80fdIO\u4f1a\u6709\u6240\u5f71\u54cd\uff0c\u56e0vacuum\u3002\u4f46\u662f\u5bf9\u4e8e\u8868\u7269\u7406\u5b58\u50a8\u7a7a\u95f4\u7684\u589e\u957f\u4f1a\u6709\u6240\u51cf\u7f13\u3002\n</code></pre> <p>\u53c2\u89c1</p>"},{"location":"postgres/vacuum/#_7","title":"\u6269\u5c55\u9605\u8bfb","text":"<p>Autovacuum \u57fa\u7840\u8c03\u4f18 \u4e2d\u6587 \u82f1\u6587</p>"},{"location":"postgres/vacuum/#_8","title":"\u5b9e\u6218","text":"<p>autovacuum \u5728\u8fbe\u5230\u89e6\u53d1\u6761\u4ef6\u65f6\u5c31\u4f1a\u6267\u884c\u3002\u5982\u679c\u89e6\u53d1\u5728\u4e1a\u52a1\u9ad8\u5cf0\u65f6\u53d1\u751f\uff0c\u5bf9\u7ebf\u4e0a\u7684\u4e1a\u52a1\u6027\u80fd\u4f1a\u5e26\u6765\u5f71\u54cd\u3002\u5e94\u907f\u514d\u3002</p> <p>\u6570\u636e\u5e93\u7684vacuum \u4e3a\u53ef\u63a7\u7684\uff0c\u907f\u514dautovacuum\u5bf9\u7ebf\u4e0a\u6570\u636e\u5e93\u5728\u8fd0\u884c\u9ad8\u5cf0\u65f6\u7684\u5f71\u54cd\u3002</p> <p>\u5728\u5fc5\u8981\u65f6\u8fdb\u884c\u624b\u52a8\u6267\u884cvacuum ,\u5728\u4e1a\u52a1\u4f4e\u5cf0\u671f\u6267\u884c\u3002 </p> <p>\u76d1\u63a7\u6570\u636e\u5e93\u7684autovacuum \uff0c\u4f7f\u5176\u5728\u8fbe\u5230\u89e6\u53d1\u6761\u4ef6\u524d\u88ab\u53ca\u65f6\u53d1\u73b0\u3002</p>"},{"location":"postgres/vacuum/#dba","title":"DBA \u7ef4\u62a4","text":"<ul> <li>\u53c2\u8003\u8868\u7a7a\u95f4\u81a8\u80c0\u7387\u8ba1\u7b97\u6267\u884c\u9884\u671f\u6548\u679c</li> <li>\u6267\u884c\u524d\u8bbe\u7f6e maintenance_work_mem \u589e\u52a0\u4e34\u65f6\u4f7f\u7528\u5185\u5b58</li> <li>\u6267\u884c\u524d\u8bbe\u7f6e vacuum_cost_delay , vacuum_cost_limit \u8c03\u6574\u5904\u7406\u901f\u5ea6</li> <li>\u6267\u884cvacuum VERVOSE ANALYZE</li> <li>\u6267\u884canalyze \u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f</li> <li>\u8fdb\u5ea6\u67e5\u770b  select * from pg_stat_progress_vacuum ; </li> <li>\u6ce8\u610fwal \u751f\u6210\u901f\u7387\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u4ece\u5e93\u843d\u540e\u8fc7\u591a\u3002wal\u627e\u4e0d\u5230\u9519\u8bef\u3002\u4ece\u5e93\u9700\u8981\u91cd\u65b0\u62c9\u53d6</li> <li>\u6ce8\u610f\u4e1a\u52a1\u5cf0\u503c\u671f\u5bf9\u4e1a\u52a1\u7684\u9020\u6210\u5f71\u54cd</li> <li>\u7cfb\u7edfIO\uff0c\u4e3b\u4ece\u4e3b\u673a\u5e26\u5bbd</li> </ul>"},{"location":"postgres/vacuum_limit/","title":"vacuum \u9650\u6d41","text":"","tags":[]},{"location":"postgres/vacuum_limit/#_1","title":"\u9650\u6d41\u76ee\u7684","text":"<p>\u6e05\u7406\u662f\u5728\u540e\u53f0\u8fd0\u884c\u7684\u7ef4\u62a4\u4efb\u52a1\uff0c\u5bf9\u7528\u6237\u67e5\u8be2\u7684\u5f71\u54cd\u6700\u5c0f\u3002\u4e0d\u5e94\u8be5\u6d88\u8017\u592a\u591a\u7684\u8d44\u6e90(CPU\u548c\u78c1\u76d8I/O)\u3002</p>","tags":[]},{"location":"postgres/vacuum_limit/#_2","title":"\u6e05\u7406\u6210\u672c\u8ba1\u7b97","text":"<p>\u6e05\u7406\u8fc7\u7a0b\u76f8\u5f53\u7b80\u5355\uff0c\u5b83\u4ece\u6570\u636e\u6587\u4ef6\u4e2d\u8bfb\u53d6\u9875\u9762(8kB\u7684\u6570\u636e\u5757)\uff0c\u5e76\u68c0\u67e5\u662f\u5426\u9700\u8981\u6e05\u7406\u3002\u5982\u679c\u6ca1\u6709dead tuples\uff0c\u9875\u9762\u5c06\u88ab\u7b80\u5355\u5730\u4e22\u5f03\uff0c\u800c\u4e0d\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u3002\u5426\u5219\uff0c\u5b83\u5c06\u88ab\u6e05\u7406(\u5220\u9664dead tuples)\uff0c\u88ab\u6807\u8bb0\u4e3a\u201c\u810f\u7684\u201d\uff0c\u5e76\u6700\u7ec8\u88ab\u5199\u51fa\u6765</p> <p>\u6210\u672c\u8ba1\u7b97\u662f\u57fa\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u57fa\u672c\u64cd\u4f5c\u7684\u6210\u672c\u5b9a\u4e49</p> <pre><code>vacuum_cost_page_hit = 1\nvacuum_cost_page_miss = 10\nvacuum_cost_page_dirty = 20\n</code></pre> <p>\u4eceshared_buffers\u8bfb\u53d6\u9875\u9762\uff0c\u5219\u8ba1\u6570\u4e3a1\u3002</p> <p>\u5982\u679cshared_buffers\u4e2d\u6ca1\u6709\u627e\u5230\u5b83\u800c\u9700\u8981\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8bfb\u53d6\uff0c\u8ba1\u6570\u4e3a10(\u5b83\u53ef\u80fd\u4ecd\u7136\u7531RAM\u63d0\u4f9b\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053)\u3002</p> <p>\u6700\u540e\uff0c\u5982\u679c\u9875\u9762\u88ab\u6e05\u7406\u5f04\u810f\u4e86\uff0c\u5219\u8ba1\u6570\u4e3a20</p>","tags":[]},{"location":"postgres/vacuum_limit/#_3","title":"\u6210\u672c\u9650\u5236","text":"<p>\u901a\u8fc7\u9650\u5236\u4e00\u6b21\u6027\u5b8c\u6210\u7684\u5de5\u4f5c\u91cf(\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a200)\u6765\u5b9e\u73b0\u9650\u6d41\uff0c\u6bcf\u6b21\u6e05\u7406\u5de5\u4f5c\u5b8c\u6210\u8fd9\u4e48\u591a\u5de5\u4f5c(\u8ba1\u6570\u8fbe\u5230autovacuum_vacuum_cost_limit )\uff0c\u5b83\u5c31\u4f1a\u4f11\u772020\u6beb\u79d2\u3002</p> <pre><code>autovacuum_vacuum_cost_delay = 20ms\nautovacuum_vacuum_cost_limit = 200\n</code></pre>","tags":[]},{"location":"postgres/vacuum_limit/#_4","title":"\u8fdb\u7a0b\u6570","text":"<pre><code>autovacum_max_workers\n</code></pre> <p>\u589e\u52a0\u6e05\u7406\u7684\u8fdb\u7a0b\u6570\u636e\u662f\u5426\u53ef\u4ee5\u63d0\u9ad8\u6e05\u7406\u6548\u7387\u3002\u4e0d</p> <p>\u6210\u672c\u9650\u5236\u662f\u5168\u5c40\u7ea7\u522b\u7684\uff0c\u7531\u6240\u6709\u7684autovacuum\u8fdb\u7a0b\u5171\u540c\u627f\u62c5\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u4f1a\u5f97\u5230\u603b\u6210\u672c\u9650\u5236\u76841/ autovacum_max_workers\uff0c\u56e0\u6b64\u589e\u52a0\u8fdb\u7a0b\u6570\u91cf\u53ea\u4f1a\u8ba9\u4ed6\u4eec\u8d70\u5f97\u66f4\u6162\u3002</p>","tags":[]},{"location":"postgres/vacuum_limit/#_5","title":"\u8868\u7ea7\u9650\u5236\u8bbe\u7f6e","text":"<pre><code>ALTER TABLE t SET (autovacuum_vacuum_cost_limit = 1000);\nALTER TABLE t SET (autovacuum_vacuum_cost_delay = 10);\n</code></pre>","tags":[]},{"location":"postgres/view_pg_stat_activity/","title":"\u6570\u636e\u5e93\u89c6\u56fe\u4e4b pg_stat_activity","text":""},{"location":"postgres/view_pg_stat_activity/#_1","title":"\u4ecb\u7ecd","text":"<p>\u5f53\u9700\u8981\u4e86\u89e3\u6570\u636e\u5e93\u5f53\u524d\u8fd0\u884c\u72b6\u6001\u6216\u9700\u8981\u6392\u67e5\u95ee\u9898\u65f6\uff0c\u9996\u5148\u9700\u8981\u67e5\u770b\u7684\u5c31\u662fpg_stat_activity\u3002\u8be5\u89c6\u56fe\u4e2d\u5305\u542b\u4e86\u4f60\u60f3\u77e5\u9053\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\uff0c\u6b63\u5728\u6267\u884c\u7684\u6709\u54ea\u4e9bsql\uff0c\u5e76\u5904\u4e8e\u4f55\u72b6\u6001\u3002</p> <p>One row per server process, showing information related to the current activity of that process, such as state and current query.</p> <p>\u6bcf\u4e00\u884c\u90fd\u8868\u793a\u4e00\u4e2a\u7cfb\u7edf\u8fdb\u7a0b\uff0c\u663e\u793a\u4e0e\u5f53\u524d\u4f1a\u8bdd\u7684\u6d3b\u52a8\u8fdb\u7a0b\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u6bd4\u5982\u5f53\u524d\u56de\u8bdd\u7684\u72b6\u6001\u548c\u67e5\u8be2\u7b49\u3002</p>"},{"location":"postgres/view_pg_stat_activity/#_2","title":"\u5b57\u6bb5\u89e3\u8bfb","text":"Column Type Description datid oid OID of the database this backend is connected to datname name Name of the database this backend is connected to pid integer Process ID of this backend usesysid oid OID of the user logged into this backend usename name Name of the user logged into this backend application_name text Name of the application that is connected to this backend client_addr inet IP address of the client connected to this backend. If this field is null, itindicates(\u8868\u660e) either that the client is connected via a Unixsocket(\u63d2\u5ea7) on the server machine or that this is aninternal(\u5185\u90e8\u7684) process such as autovacuum. client_hostname text Host name of the connected client, as reported by a reverse(\u76f8\u53cd) DNS lookup(\u67e5\u627e) of client_addr. This field will only be non-null for IP connections, and only whenlog_hostname is enabled. client_port integer TCP port number that the client is using for communication with this backend, or-1 if a Unixsocket(\u63d2\u5ea7) is used backend_start timestamp(\u65f6\u95f4\u6233) with time zone Time when this process was started, i.e., when the client connected to the server xact_start timestamp with time zone Time when this process' current transaction(\u4ea4\u6613) was started, or null if no transaction is active. If the current query is the first of its transaction, this column is equal to the query_start column. query_start timestamp with time zone Time when the currently active query was started, or if state is not active, when the last query was started state_change timestamp(\u65f6\u95f4\u6233) with time zone Time when the state was last changed waiting boolean True if this backend is currently waiting on a lock state text query text Text of this backend's most recent query. Ifstate isactive this field shows the currently executing query. In all other states, it shows the last query that was executed."},{"location":"postgres/view_pg_stat_activity/#state","title":"state \u5b57\u6bb5\u8be6\u89e3","text":"<ul> <li>active: The backend isexecuting(\u5b9e\u884c) a query. \u6b63\u5728\u6267\u884c\u4e2d</li> <li>idle: The backend is waiting for a new client command. \u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\u7b49\u5f85\u5ba2\u6237\u7aef\u547d\u4ee4</li> <li>idle in transaction: The backend is in atransaction(\u4ea4\u6613), but is not currentlyexecuting(\u5b9e\u884c) a query. \u4e8b\u52a1\u5df2\u7ecfbegin \u5c1a\u672acommit</li> <li>idle\u00a0in transaction (aborted): This state is similar toidle in transaction, except one of thestatements(\u58f0\u660e) in the transaction caused an error. \u4e8b\u52a1\u4e2d\u65ad</li> <li>fastpath function call: The backend is executing a fast-path function. </li> <li>disabled: This state is reported iftrack_activities is disabled in this backend.</li> </ul>"},{"location":"postgres/view_pg_stat_activity/#_3","title":"\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u67e5\u8be2\u6240\u5904\u7684\u72b6\u6001","text":"<pre><code>select datname, count(*) AS open,count(*) FILTER (WHERE state = 'active') AS active,\n                count(*) FILTER(WHERE state = 'idle') AS idle ,\n                count(*) FILTER(WHERE state = 'idle in transaction') AS idle_in_trans\n                FROM pg_stat_activity GROUP BY ROLLUP(1);\n</code></pre>"},{"location":"postgres/view_pg_stat_activity/#idle-in-transaction","title":"\u4e00\u76f4\u6709\u8fde\u63a5\u957f\u65f6\u95f4\u5904\u4e8eidle in transaction\u7684\u95ee\u9898","text":"<p>\u914d\u7f6epostgresql.conf</p> <pre><code>idle_in_transaction_session_timeout=30000\n</code></pre>"},{"location":"postgres/view_pg_stat_activity/#query","title":"query \u5185\u5bb9\u663e\u793a\u4e0d\u5168","text":"<p>\u914d\u7f6epostgresql.conf</p> <pre><code>track_activity_query_size=32768\n</code></pre>"},{"location":"postgres/view_pg_stat_activity/#_4","title":"\u6740\u6b7b\u5df2\u6302\u6389\u7684\u8fde\u63a5","text":"<pre><code>select pg_terminate_backend(pid)\n</code></pre>"},{"location":"postgres/view_pg_stat_activity/#sql-pid-sql","title":"\u53d6\u6d88\u6b63\u5728\u6267\u884c\u7684sql pid (\u4e0d\u4f1a\u91ca\u653e\u8fde\u63a5\uff0c\u53ea\u4f1a\u53d6\u6d88sql\u67e5\u8be2\u8bed\u53e5)","text":"<pre><code>SELECT pg_cancel_backend(pid);\n</code></pre>"},{"location":"postgres/view_pg_stat_activity/#_5","title":"\u8fdb\u4e00\u6b65\u529f\u80fd\u6269\u5c55","text":"<p>https://github.com/pgsentinel/pgsentinel</p> <ul> <li>postgresql extension providing Active session history</li> </ul> <p>\u7c7b\u4f3c Oracle\u4e2d\u7684ASH(Active Session History)\uff0cASH\u901a\u8fc7\u6bcf\u79d2\u949f\u62bd\u53d6\u6d3b\u52a8\u4f1a\u8bdd\u6837\u672c\uff0c\u4e3a\u5206\u6790\u5728\u6700\u8fd1\u65f6\u523b\u7684\u6027\u80fd\u95ee\u9898\u63d0\u4f9b\u6700\u76f4\u63a5\u6709\u6548\u7684\u4f9d\u636e\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a \u5f53\u76d1\u63a7\u663e\u793a\uff0c\u67d0\u4e2a\u77ac\u95f4\u6570\u636e\u5e93\u8fde\u63a5\u6570\u8d85\u8fc7\u9600\u503c\u3002 \u67e5\u770b\u65e5\u5fd7\u663e\u793atoo many connentions \u3002 \u4f7f\u7528pg_stat_activity \u89c6\u56fe\u65f6\u53ea\u80fd\u67e5\u770b\u5f53\u524d\u7684\u6d3b\u52a8\u8fde\u63a5\u3002\u6545\u969c\u77ac\u95f4\u6293\u53d6\u4e0d\u5230\u3002</p> <p>pgsentinel \u8bb0\u5f55\u4e86\u5386\u53f2\u6d3b\u52a8\u72b6\u6001\uff0c\u5e2e\u52a9\u5bf9\u5386\u53f2\u95ee\u9898\u7684\u8ffd\u6eaf\u3002</p>"},{"location":"postgres/view_pg_stat_activity/#pg_top","title":"pg_top","text":"<p>\u7c7b\u4f3c Linux top</p> <p>\u5b89\u88c5</p> <pre><code>yum install pg_top\n</code></pre> <p>\u4f7f\u7528 (\u672c\u673a &amp; \u8fdc\u7a0b)</p> <pre><code>#pg_top -U postgres -h **** \n\nlast pid: 55852;  load avg:  1.55,  1.25,  0.93;       up 0+23:44:48                                                                                                                09:17:30\n7 processes: 5 sleeping, 2 uninterruptable\nCPU states:  1.1% user,  0.0% nice,  0.5% system, 96.8% idle,  1.6% iowait\nMemory: 125G used, 561M free, 240K buffers, 117G cached\nDB activity: 242 tps, 12 rollbs/s,  12 buffer r/s, 99 hit%,  82120 row r/s,    0 row w/s\nDB I/O:     0 reads/s,     0 KB/s,     0 writes/s,     0 KB/s\nDB disk: 7450.0 GB total, 7055.5 GB free (5% used)\nSwap: 4096M free\n\n  PID USERNAME PRI NICE  SIZE   RES STATE   TIME   WCPU    CPU COMMAND\n40030 postgres  20    0   17G 5624K sleep   0:07  0.68%  0.60% postmaster\n40022 postgres  20    0   17G  946M sleep   0:05  0.42%  0.40% postmaster\n40023 postgres  20    0   17G 1061M sleep   0:02  0.25%  0.00% postmaster\n54528 postgres  20    0   17G 1220M disk    0:01  1.38%  0.00% postmaster\n54963 postgres  20    0   17G  747M disk    0:01  1.27%  0.00% postmaster\n40024 postgres  20    0   17G  130M sleep   0:00  0.03%  0.00% postmaster\n55853 postgres  20    0   17G 6900K sleep   0:00  0.00%  0.00% postmaster\n</code></pre>"},{"location":"postgres/view_pg_stat_bgwriter/","title":"\u6570\u636e\u5e93\u8bd5\u56fe\u4e4b pg_stat_bgwriter","text":"","tags":[]},{"location":"postgres/view_pg_stat_bgwriter/#_1","title":"\u4ecb\u7ecd","text":"<p>\u53ef\u67e5\u770b backgroud writer\uff0c checkpoint \uff0cbackend \u8fdb\u7a0b\u5237\u5199 Shared buffer \u60c5\u51b5\u89c6\u56fe</p> <p>pg\u6570\u636e\u5e93\u5728\u5199\u5165\u65f6\u5148\u5728\u5185\u5b58\u4e2d\u66f4\u65b0shared buffer \uff0c\u7136\u540e\u6709checkpoint\u673a\u5236\u5c06\u810f\u6570\u636e\u5237\u5199\u5230\u78c1\u76d8\u3002</p>","tags":[]},{"location":"postgres/view_pg_stat_bgwriter/#_2","title":"\u89c6\u56fe","text":"<pre><code> select * from pg_stat_bgwriter ;\n-[ RECORD 1 ]---------+------------------------------\ncheckpoints_timed     | 64017\ncheckpoints_req       | 458\ncheckpoint_write_time | 9608302902\ncheckpoint_sync_time  | 1189286\nbuffers_checkpoint    | 578367652\nbuffers_clean         | 329022\nmaxwritten_clean      | 2353\nbuffers_backend       | 29802728\nbuffers_backend_fsync | 0\nbuffers_alloc         | 83826180\nstats_reset           | 2020-08-20 19:41:20.491551+08\n</code></pre> <p>\u8d1f\u8d23\u5c06shared buffer \u4e2d\u7684\u5185\u5bb9\u5237\u65b0\u5230\u78c1\u76d8\u4e3b\u8981\u6709\u4e09\u4e2a\u8fdb\u7a0b\u5b8c\u6210</p> <ul> <li>checkpoint </li> <li>bgwriter</li> <li>backend</li> </ul> <p>\u89c6\u56fe\u5185\u5bb9\u4e3b\u8981\u4e5f\u662f\u9488\u5bf9\u8fd9\u4e09\u4e2a\u8fdb\u7a0b\u7684\u7edf\u8ba1\u4fe1\u606f</p>","tags":[]},{"location":"postgres/view_pg_stat_bgwriter/#checkpoint","title":"checkpoint","text":"<pre><code>checkpoints_timed \u5468\u671f\u6027\u8fdb\u884ccheckpoint\u7684\u6b21\u6570    \ncheckpoints_req   \u5468\u671f\u4ee5\u5916\u53d1\u751fcheckpoint\u7684\u6b21\u6570\ncheckpoint_write_time \u5237\u5199\u8017\u65f6\ncheckpoint_sync_time  \u540c\u6b65\u8017\u65f6\nbuffers_checkpoint \u5199\u5165\u91cf\n</code></pre>","tags":[]},{"location":"postgres/view_pg_stat_bgwriter/#bgwriter","title":"bgwriter","text":"<pre><code>buffers_clean bgwriter \u5199\u5165\u91cf\nmaxwritten_clean bgwriter \u4e00\u6b21\u5199\u5165\u91cf\u8d85\u8fc7bgwriter_lru_maxpages\u505c\u6b62\u6b21\u6570\n</code></pre>","tags":[]},{"location":"postgres/view_pg_stat_bgwriter/#_3","title":"\u6570\u636e\u5e93\u8bd5\u56fe\u4e4b pg_stat_bgwriter","text":"<pre><code>buffers_backend       backend \u5199\u5165\u91cf\nbuffers_backend_fsync \u540c\u6b65\u5199\u5165\u6b21\u6570\n</code></pre>","tags":[]},{"location":"postgres/view_pg_stat_bgwriter/#_4","title":"\u7406\u60f3\u72b6\u6001","text":"<p>\u5927\u90e8\u5206\u7684\u810f\u6570\u636e\u90fd\u662fbgwriter\u5199\u56de\u5b58\u50a8\u7684\uff0c\u5c11\u91cf\u7684\u810f\u6570\u636e\u662fcheckpointer\u5199\u5165\u7684\uff0c\u66f4\u5c11\u7684\u6570\u636e\u662fbackend\u5199\u5165\u7684\u3002\u56e0\u4e3abackend\u5199\u5165\u6570\u636e\u6210\u672c\u975e\u5e38\u9ad8\u3002</p> <p>checkpoint \u7684\u5199\u5165\u57fa\u672c\u90fd\u662f\u5468\u671f\u6027\u7684\u5199\u5165\u3002</p>","tags":[]},{"location":"postgres/wal-g/","title":"\u6570\u636e\u5e93\u5907\u4efd\u548c\u6062\u590dwal-g \u5e94\u7528","text":""},{"location":"postgres/wal-g/#minio","title":"\u5b58\u50a8\u670d\u52a1 minio","text":"<p>\u8bbe\u7f6e\u7528\u6237\u540d\u548c\u5bc6\u7801</p> <pre><code>docker run -d -p 9000:9000 -e MINIO_ACCESS_KEY=xxxxx(changeme) -e MINIO_SECRET_KEY=kkkkk(changeme)  -v /data/minio/:/data  minio/minio server /data \n</code></pre> <p>\u521b\u5efa bucket</p> <pre><code>mc mb local/buecket003\n</code></pre>"},{"location":"postgres/wal-g/#wal-g","title":"wal-g \u4e0b\u8f7d","text":"<pre><code>wget https://github.com/wal-g/wal-g/releases/download/v0.2.9/wal-g.linux-amd64.tar.gz\n\ntar -zxvf wal-g.linux-amd64.tar.gz \n</code></pre>"},{"location":"postgres/wal-g/#_1","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>minio</p> <p>cat wal-g.env </p> <pre><code>export PGDATA=/var/lib/pgsql/10/data/\nexport WALG_S3_PREFIX=s3://bucket003/\nexport PGPORT=5432\nexport PGUSER=postgres\nexport AWS_SECRET_ACCESS_KEY=xxxxx(changeme)\nexport AWS_REGION=us-east-1\nexport AWS_ACCESS_KEY_ID=kkkkk(changeme)\nexport AWS_ENDPOINT=http://localhost:9000\nexport AWS_S3_FORCE_PATH_STYLE=true\n</code></pre> <p>swift</p> <pre><code>export PGDATA=\nexport WALG_SWIFT_PREFIX=swift://buckt003/\nexport PGPORT=\nexport PGUSER=\nexport OS_USERNAME=\nexport OS_PASSWORD=\nexport OS_AUTH_URL=http://ip:port/auth/v1.0\n</code></pre>"},{"location":"postgres/wal-g/#_2","title":"\u5168\u5907\u4efd","text":"<pre><code>source mydir/wal-g.env &amp;&amp;  wal-g  backup-push $PGDATA\n</code></pre>"},{"location":"postgres/wal-g/#wal","title":"wal \u5907\u4efd","text":"<pre><code>wal_level = archive\narchive_mode = on ## \u4ece\u5e93 always\narchive_command = 'source mydir/wal-g.env &amp;&amp;  wal-g wal-push %p'\narchive_timeout = 60\n</code></pre>"},{"location":"postgres/wal-g/#_3","title":"\u6062\u590d\u6570\u636e","text":"<p>\u67e5\u770b\u6240\u6709\u5168\u5907\u4efd</p> <pre><code>wal-g backup-list\nname                          last_modified        wal_segment_backup_start\nbase_000000020000001E000000CB 2019-11-07T01:34:08Z 000000020000001E000000CB\nbase_000000020000001E000000CD 2019-11-07T01:37:03Z 000000020000001E000000CD\nbase_000000020000001E000000CF 2019-11-07T02:23:34Z 000000020000001E000000CF\nbase_000000020000001E000000D1 2019-11-07T02:31:00Z 000000020000001E000000D1\nbase_000000020000001E000000D3 2019-11-07T02:38:29Z 000000020000001E000000D3\nbase_000000020000001E000000DA 2019-11-07T06:08:19Z 000000020000001E000000DA\nbase_000000020000001E000000DD 2019-11-07T06:30:24Z 000000020000001E000000DD\nbase_000000020000001E000000DF 2019-11-07T08:45:30Z 000000020000001E000000DF\n</code></pre> <p>\u4e0b\u8f7d\u4e00\u4e2a\u5168\u5907\u4efd \u6700\u8fd1\u7684\u4e00\u4e2a\u5168\u5907\u4efd\u53ef\u7528 LATEST \u8868\u793a</p> <pre><code>wal-g backup-fetch /var/lib/pgsql/10/data-restore/ base_000000020000001E000000CB\n</code></pre> <p>\u5b9e\u65f6\u6062\u590d</p> <p>cat recover.conf</p> <pre><code>restore_command = 'source mydir/wal-g.env &amp;&amp; wal-g wal-fetch %f %p'\nrecovery_target_time='2019-09-10 09:51:55.794813+08'\nrecovery_target_timeline='latest'\n</code></pre> <p>\u5173\u95ed\u6570\u636e\u5e93pause\u72b6\u6001</p> <pre><code>select pg_wal_replay_resume();\n</code></pre>"},{"location":"postgres/wal-g/#_4","title":"\u6e05\u7406\u5b58\u50a8","text":"<p>\u4fdd\u7559\u6700\u8fd1\u768410\u4e2a\u5907\u4efd\u53cawal</p> <pre><code>wal-g delete  retain  FULL  10 (\u8bd5\u5220)\n\nwal-g delete  retain  FULL  10  --confirm \uff08\u771f\u5220\uff09 \n</code></pre> <p>\u5220\u9664\u67d0\u4e2a\u5907\u4efd\u524d\u7684\u5907\u4efd</p> <pre><code>wal-g delete before backup_name\n</code></pre>"},{"location":"postgres/wal-g/#wal_1","title":"\u5c06\u73b0\u6709\u7684\u6240\u6709wal\u4e0a\u4f20","text":"<p>cat wal-push-all.sh</p> <pre><code>#!/bin/bash\n#print the directory and file\n\nfor file in $PGDATA/pg_wal/*\ndo\nif [ -f \"$file\" ]\nthen \n  wal-g wal-push $file\nfi\ndone\n</code></pre>"},{"location":"postgres/wal-g/#_5","title":"\u5b9a\u671f\u5168\u5907\u4efd\u53ca\u6e05\u7406","text":"<p>cat /etc/cron.weekly/pg_backup_retain.sh \u4f8b\u5982\u6bcf\u5468\u4e00\u4e2a\u5168\u5907\u4efd\uff0c\u4fdd\u7559\u8fd1\u534a\u5e74\u6570\u636e</p> <pre><code>source mydir/wal-g.env &amp;&amp;  wal-g  backup-push $PGDATA\nsource mydir/wal-g.env &amp;&amp;  wal-g delete retain FULL 26 --confirm\n</code></pre>"},{"location":"postgres/wal-g/#_6","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>1 \u9700\u8981\u5148\u8fdb\u884cwal\u65e5\u5fd7\u7684\u5907\u4efd\u5728\u8fdb\u884c\u5168\u5907\u4efd\u3002\u5426\u5219\u5728\u6062\u590d\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u9057\u6f0f\u671f\u95f4\u7684wal\u65e5\u5fd7\u3002</p> <p>2 \u5168\u5907\u4efd\u9700\u8981\u7b49\u5f85\u5f53\u524dwal\u65e5\u5fd7\u53d1\u751f\u5207\u6362\u624d\u80fd\u5b8c\u6210\u3002\u5982\u679c\u662f\u5199\u5165\u6162\u6216\u6682\u65e0\u5199\u5165\u6570\u636e\u5e93\u53ef\u6267\u884cselect pg_switch_wal() \u8fdb\u884c\u624b\u52a8\u89e6\u53d1\u3002</p> <p>3 \u5168\u5907\u4efd\u4e0d\u5305\u62ecpg_wal\u76ee\u5f55\u4e0b\u7684wal\u65e5\u5fd7\u6587\u4ef6</p>"},{"location":"postgres/wal-g/#_7","title":"\u601d\u8003","text":"<p>\u5f52\u6863\u5907\u4efdwal\u65e5\u5fd7 \u4f1a\u6bd4\u751f\u4ea7\u7cfb\u7edf\u7684\u6570\u636e\u5e93\u6ede\u540e\u4e00\u4e2awal\u6587\u4ef6 \u3002 \u662f\u5f53wal\u65e5\u5fd7\u5199\u6ee1\u6216\u5207\u6362\u5199\u65b0wal\u65e5\u5fd7\u7684\u65f6\u5019\u89e6\u53d1\u7684\u5f52\u6863 \u3002</p> <p>\u5982\u679c\u9700\u8981\u4f7f\u7528\u5f52\u6863\u6587\u4ef6\u6062\u590d\u6570\u636e\u5e93\u65f6\u9700\u8981\u8003\u8651\u65f6\u5019\u53ef\u4ee5\u627e\u5230\u6700\u8fd1\u7684wal\u65e5\u5fd7\u6587\u4ef6\uff0c\u6bd4\u5982\u5728\u4ece\u5e93\u4e2d\u3002</p>"},{"location":"postgres/wal-g/#_8","title":"\u5176\u4ed6\u6709\u7528\u811a\u672c","text":"<p>\u4e0b\u8f7d\u4e00\u6bb5\u8fde\u7eed\u8303\u56f4\u5185\u7684wal\u65e5\u5fd7\u6587\u4ef6 \u5230\u76ee\u5f55 walbackup \u76ee\u5f55\u4e2d\uff0c\u9632\u6b62\u4e0b\u8f7d\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u7b49\u3002\u53ef\u91cd\u590d\u591a\u6b21\u6267\u884c</p> <p>cat refetch_wal.sh ```#! /bin/bash</p> <p>walfiles=$(python calc_wal.py $1 $2)</p> <p>source mydir/wal-g.env</p> <p>for wal_seq in $walfiles; do  if [[ ! -f walbackup/\"$wal_seq\" ]];then    wal-g wal-fetch $wal_seq walbackup/$wal_seq    echo \"fetch wal file \" $wal_seq  fi done</p> <pre><code>\ncat calc_wal.py\n</code></pre> <p>import sys</p> <p>def next_str(start):     s_8 = start[:8]     s_16 = start[8:16]     s_24 = start[16:]     if s_24.endswith('FF'):         s_24 = hex(int('01',base=16))[2:].zfill(8)         s_16 = hex(int(s_16, base=16) + 1)[2:].zfill(8)     else:         s_24 = hex(int(s_24, base=16) + 1)[2:].zfill(8)     return ''.join([s_8, s_16, s_24]).upper()</p> <p>def get_all(start, end):     start = start.upper()     end = end.upper()     new_seq = None     print(start)     while new_seq != end:         new_seq = next_str(new_seq if new_seq is not None else start)         print(new_seq)</p> <p>if name == \"main\":     get_all(sys.argv[1], sys.argv[2]) ```</p> <p>\u4f7f\u7528\u65b9\u6cd5</p> <p>refetch_wal.sh wal\u5f00\u59cb\u6587\u4ef6\u540d wal\u7ed3\u675f\u6587\u4ef6\u540d</p>"},{"location":"postgres/wal_lsn/","title":"\u4f8b\u5b50","text":"<pre><code>select pg_current_wal_lsn(),pg_walfile_name(pg_current_wal_lsn()),pg_walfile_name_offset(pg_current_wal_lsn());\n pg_current_wal_lsn |     pg_walfile_name      |       pg_walfile_name_offset\n--------------------+--------------------------+------------------------------------\n 2478/BB36EC90      | 0000000300002478000000BB | (0000000300002478000000BB,3599504)\n(1 row)\n</code></pre> <pre><code>select x'36EC90'::int ;\n  int4\n---------\n 3599504\n(1 row)\n</code></pre>","tags":[]},{"location":"postgres/wal_lsn/#_2","title":"\u8bf4\u660e","text":"","tags":[]},{"location":"postgres/wal_lsn/#_3","title":"\u65b9\u6cd5","text":"<ul> <li>pg_current_wal_lsn()\uff1a\u83b7\u5f97\u5f53\u524dwal\u65e5\u5fd7\u5199\u5165\u4f4d\u7f6e\u3002</li> <li>pg_walfile_name():\u8f6c\u6362wal\u65e5\u5fd7\u4f4d\u7f6e\u4e3a\u6587\u4ef6\u540d\u3002</li> <li>pg_walfile_name_offset():\u8fd4\u56de\u8f6c\u6362\u540e\u7684wal\u65e5\u5fd7\u6587\u4ef6\u540d\u548c\u504f\u79fb\u91cf\u3002</li> </ul>","tags":[]},{"location":"postgres/wal_lsn/#lsn","title":"LSN","text":"<p>LSN:2478/BB36EC90</p> <ul> <li>2478\uff1a\u4ee3\u8868wal\u6587\u4ef6\u7684\u7b2c\u4e8c\u90e8\u5206</li> <li>BB\uff1a\u4ee3\u8868wal\u6587\u4ef6\u7684\u6700\u540e\u4e24\u4f4d</li> <li>36EC90\uff1a\u4ee3\u8868\u504f\u79fb\u91cf</li> </ul>","tags":[]},{"location":"postgres/wal_lsn/#wal","title":"WAL","text":"<p>0000000300002478000000BB wal\u6587\u4ef6\u75318*3 = 24\u4e2a\u5b57\u7b26\uff0c\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u6bcf\u90e8\u5206\u75318\u4e2a\u5b57\u7b26\u7ec4\u6210\uff0c\u4ee3\u8868\u542b\u4e49\u5982\u4e0b</p> <ul> <li>00000003\uff1a\u4ee3\u8868\u6570\u636e\u5e93\u8fd0\u884c\u7684\u65f6\u95f4\u8f74\uff0c\u5982\u679c\u6062\u590d\u8fc7\u6570\u636e\u5e93\uff08\u4e3b\u5907\u5207\u6362\uff09\u8fd9\u4e2a\u503c\u4f1a\u589e\u5927</li> <li>00002478\uff1a\u5bf9LSN\u7684\u7b2c\u4e8c\u90e8\u5206\u5bf9\u5e94</li> <li>000000BB\uff1a\u4ee3\u8868walfile\u6587\u4ef6\u7684\u6700\u540e\u4e24\u4f4d</li> </ul>","tags":[]},{"location":"yugabytedb/deploy/","title":"\u90e8\u7f72","text":""},{"location":"yugabytedb/deploy/#_1","title":"\u90e8\u7f72\u96c6\u7fa4","text":""},{"location":"yugabytedb/deploy/#_2","title":"\u68c0\u6d4b\u5217\u8868","text":"<ul> <li>CPU: x86 and ARM (aarch64) </li> <li>\u64cd\u4f5c\u7cfb\u7edf:  AlmaLinux 8 and RHEL 8</li> <li>NTP &amp; Chrony</li> </ul>"},{"location":"yugabytedb/deploy/#_3","title":"\u8d44\u6e90\u9700\u6c42","text":"<ul> <li>\u6700\u5c0f\u9700\u6c42 2 cores  2GB RAM</li> <li>\u751f\u4ea7\u9700\u8981     YCQL - 16+ cores and 32GB+ RAM ,     YSQL - 16+ cores and 64GB+ RAM</li> </ul>"},{"location":"yugabytedb/deploy/#_4","title":"\u6307\u4ee4\u96c6","text":"<pre><code>grep -q sse4_2 /proc/cpuinfo &amp;&amp; echo \"true\" || echo \"false\"\n</code></pre>"},{"location":"yugabytedb/deploy/#_5","title":"\u786c\u76d8","text":"<ul> <li>SSD</li> <li>JBOD</li> <li>XFS</li> </ul>"}]}